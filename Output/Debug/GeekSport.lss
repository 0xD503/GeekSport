
GeekSport.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  000023fc  00002490  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000192  00800130  00800130  000024c0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000024c0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000470  00000000  00000000  00002530  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000dac7  00000000  00000000  000029a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000212c  00000000  00000000  00010467  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002dce  00000000  00000000  00012593  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b48  00000000  00000000  00015364  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001811  00000000  00000000  00015eac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003869  00000000  00000000  000176bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000638  00000000  00000000  0001af26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 9d 03 	jmp	0x73a	; 0x73a <__ctors_end>
       4:	0c 94 29 10 	jmp	0x2052	; 0x2052 <__vector_1>
       8:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
       c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      10:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      14:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      18:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      1c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      20:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      24:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      28:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      2c:	0c 94 5e 10 	jmp	0x20bc	; 0x20bc <__vector_11>
      30:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      34:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      38:	0c 94 2c 04 	jmp	0x858	; 0x858 <__vector_14>
      3c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      40:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      44:	0c 94 ec 10 	jmp	0x21d8	; 0x21d8 <__vector_17>
      48:	0c 94 87 11 	jmp	0x230e	; 0x230e <__vector_18>
      4c:	0c 94 5d 11 	jmp	0x22ba	; 0x22ba <__vector_19>
      50:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      54:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      58:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      5c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      60:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__vector_24>
      64:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      68:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      6c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      70:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      74:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      78:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      7c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      80:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      84:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      88:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      8c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      90:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      94:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      98:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      9c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      a0:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      a4:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      a8:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      ac:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>
      b0:	0c 94 ba 03 	jmp	0x774	; 0x774 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	4f 66       	ori	r20, 0x6F	; 111
      b6:	66 00       	.word	0x0066	; ????

000000b8 <bluetoothOnString>:
      b8:	4f 6e 00                                            On.

000000bb <bluetoothString>:
      bb:	42 6c 75 65 74 6f 6f 74 68 3a 20 00                 Bluetooth: .

000000c7 <__c.2772>:
      c7:	2c 20 00                                            , .

000000ca <timeSettings>:
      ca:	54 69 6d 65 20 73 65 74 74 69 6e 67 73 3a 00        Time settings:.

000000d9 <weekdaySettingString>:
      d9:	57 65 65 6b 64 61 79 20 2d 20 00                    Weekday - .

000000e4 <dateSettingString>:
      e4:	44 61 74 65 3a 20 30 30 2e 30 30 2e 30 30 00        Date: 00.00.00.

000000f3 <timeSettingString>:
      f3:	54 69 6d 65 3a 20 30 30 3a 30 30 00                 Time: 00:00.

000000ff <December>:
      ff:	44 65 63 00                                         Dec.

00000103 <November>:
     103:	4e 6f 76 00                                         Nov.

00000107 <October>:
     107:	4f 63 74 00                                         Oct.

0000010b <Septemper>:
     10b:	53 65 70 00                                         Sep.

0000010f <August>:
     10f:	41 75 67 00                                         Aug.

00000113 <Jule>:
     113:	4a 75 6c 65 00                                      Jule.

00000118 <June>:
     118:	4a 75 6e 65 00                                      June.

0000011d <May>:
     11d:	4d 61 79 00                                         May.

00000121 <April>:
     121:	41 70 72 00                                         Apr.

00000125 <March>:
     125:	4d 61 72 00                                         Mar.

00000129 <February>:
     129:	46 65 62 00                                         Feb.

0000012d <January>:
     12d:	4a 61 6e 00                                         Jan.

00000131 <Saturday>:
     131:	53 61 74 00                                         Sat.

00000135 <Friday>:
     135:	46 72 69 00                                         Fri.

00000139 <Thursday>:
     139:	54 68 75 00                                         Thu.

0000013d <Wednesday>:
     13d:	57 65 64 00                                         Wed.

00000141 <Tuesday>:
     141:	54 75 65 00                                         Tue.

00000145 <Monday>:
     145:	4d 6f 6e 00                                         Mon.

00000149 <Sunday>:
     149:	53 75 6e 00                                         Sun.

0000014d <setWheelLength>:
     14d:	57 68 65 65 6c 20 28 6d 6d 29 3a 20 30 30 30 30     Wheel (mm): 0000
	...

0000015e <settings>:
     15e:	53 65 74 74 69 6e 67 73 00                          Settings.

00000167 <developerInfo2>:
     167:	32 30 31 38 00                                      2018.

0000016c <developerInfo1>:
     16c:	52 56 20 45 6c 65 63 74 72 6f 6e 69 63 73 00        RV Electronics.

0000017b <developerInfo0>:
     17b:	44 65 76 65 6c 6f 70 65 72 3a 00                    Developer:.

00000186 <GeekSportString>:
     186:	47 65 65 6b 53 70 6f 72 74 00                       GeekSport.

00000190 <weekdaySettingString>:
     190:	57 65 65 6b 64 61 79 20 2d 20 00                    Weekday - .

0000019b <dateSettingString>:
     19b:	44 61 74 65 3a 20 30 30 2e 30 30 2e 30 30 00        Date: 00.00.00.

000001aa <timeSettingString>:
     1aa:	54 69 6d 65 3a 20 30 30 3a 30 30 00                 Time: 00:00.

000001b6 <LCD_Nokia_MediumFont12x16>:
     1b6:	00 00 00 80 80 80 80 80 80 00 00 00 00 00 01 03     ................
     1c6:	03 03 03 03 03 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     1de:	00 c0 c0 00 00 00 00 00 00 00 02 86 86 86 86 86     ................
     1ee:	86 02 00 00 00 00 81 c3 c3 c3 c3 c3 c3 81 00 00     ................
     1fe:	00 fc 7a 06 06 06 06 06 06 7a fc 00 00 7e bc c0     ..z......z...~..
     20e:	c0 c0 c0 c0 c0 bc 7e 00 00 00 00 00 00 00 00 00     ......~.........
     21e:	00 78 fc 00 00 00 00 00 00 00 00 00 00 3c 7e 00     .x...........<~.
     22e:	00 00 02 86 86 86 86 86 86 7a fc 00 00 7e bd c3     .........z...~..
     23e:	c3 c3 c3 c3 c3 81 00 00 00 00 02 86 86 86 86 86     ................
     24e:	86 7a fc 00 00 00 81 c3 c3 c3 c3 c3 c3 bd 7e 00     .z............~.
     25e:	00 fc 78 80 80 80 80 80 80 78 fc 00 00 00 01 03     ..x......x......
     26e:	03 03 03 03 03 3d 7e 00 00 fc 7a 86 86 86 86 86     .....=~...z.....
     27e:	86 02 00 00 00 00 81 c3 c3 c3 c3 c3 c3 bd 7e 00     ..............~.
     28e:	00 fc 7a 86 86 86 86 86 86 02 00 00 00 7e bd c3     ..z..........~..
     29e:	c3 c3 c3 c3 c3 bd 7e 00 00 00 02 06 06 06 06 06     ......~.........
     2ae:	06 7a fc 00 00 00 00 00 00 00 00 00 00 3c 7e 00     .z...........<~.
     2be:	00 fc 7a 86 86 86 86 86 86 7a fc 00 00 7e bd c3     ..z......z...~..
     2ce:	c3 c3 c3 c3 c3 bd 7e 00 00 fc 7a 86 86 86 86 86     ......~...z.....
     2de:	86 7a fc 00 00 00 81 c3 c3 c3 c3 c3 c3 bd 7e 00     .z............~.
     2ee:	00 00 00 00 7c 7c 7c 7c 00 00 00 00 00 00 00 00     ....||||........
     2fe:	3e 3e 3e 3e 00 00 00 00                             >>>>....

00000306 <LCD_Nokia_SmallFont6x8>:
	...
     30e:	00 2f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14     ./..............
     31e:	00 24 2a 7f 2a 12 00 23 13 08 64 62 00 36 49 55     .$*.*..#..db.6IU
     32e:	22 50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00     "P........."A...
     33e:	41 22 1c 00 00 14 08 3e 08 14 00 08 08 3e 08 08     A".....>.....>..
     34e:	00 00 00 a0 60 00 00 08 08 08 08 08 00 00 60 60     ....`.........``
     35e:	00 00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00     ... .....>QIE>..
     36e:	42 7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31     B.@..BaQIF.!AEK1
     37e:	00 18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49     .......'EEE9.<JI
     38e:	49 30 00 01 71 09 05 03 00 36 49 49 49 36 00 06     I0..q....6III6..
     39e:	49 49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00     II)...66....V6..
     3ae:	00 08 14 22 41 00 00 14 14 14 14 14 00 00 41 22     ..."A.........A"
     3be:	14 08 00 02 01 51 09 06 00 32 49 59 51 3e 00 7c     .....Q...2IYQ>.|
     3ce:	12 11 12 7c 00 7f 49 49 49 36 00 3e 41 41 41 22     ...|..III6.>AAA"
     3de:	00 7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09     ..AA"...IIIA....
     3ee:	09 01 00 3e 41 49 49 7a 00 7f 08 08 08 7f 00 00     ...>AIIz........
     3fe:	41 7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41     A.A.. @A?....."A
     40e:	00 7f 40 40 40 40 00 7f 02 0c 02 7f 00 7f 04 08     ..@@@@..........
     41e:	10 7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e     ...>AAA>.......>
     42e:	41 51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31     AQ!^....)F.FIII1
     43e:	00 01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40     .......?@@@?.. @
     44e:	20 1f 00 3f 40 38 40 3f 00 63 14 08 14 63 00 07      ..?@8@?.c...c..
     45e:	08 70 08 07 00 61 51 49 45 43 00 00 7f 41 41 00     .p...aQIEC...AA.
     46e:	aa 55 aa 55 aa 55 00 00 41 41 7f 00 00 04 02 01     .U.U.U..AA......
     47e:	02 04 00 40 40 40 40 40 00 00 03 05 00 00 00 20     ...@@@@@....... 
     48e:	54 54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20     TTTx..HDD8.8DDD 
     49e:	00 38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09     .8DDH..8TTT...~.
     4ae:	01 02 00 18 a4 a4 a4 7c 00 7f 08 04 04 78 00 00     .......|.....x..
     4be:	44 7d 40 00 00 40 80 84 7d 00 00 7f 10 28 44 00     D}@..@..}....(D.
     4ce:	00 00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04     ..A.@..|...x.|..
     4de:	04 78 00 38 44 44 44 38 00 fc 24 24 24 18 00 18     .x.8DDD8..$$$...
     4ee:	24 24 18 fc 00 7c 08 04 04 08 00 48 54 54 54 20     $$...|.....HTTT 
     4fe:	00 04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40     ..?D@ .<@@ |.. @
     50e:	20 1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 1c      ..<@0@<.D(.(D..
     51e:	a0 a0 a0 7c 00 44 64 54 4c 44 00 00 10 7c 82 00     ...|.DdTLD...|..
     52e:	00 00 00 ff 00 00 00 00 82 7c 10 00 00 00 06 09     .........|......
     53e:	09 06                                               ..

00000540 <LCD_Nokia_ASCII_Charset5>:
     540:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     550:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     560:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     570:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
     580:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     590:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     5a0:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     5b0:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     5c0:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     5d0:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     5e0:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     5f0:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     600:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     610:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     620:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     630:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     640:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     650:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     660:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     670:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     680:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     690:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     6a0:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     6b0:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     6c0:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     6d0:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     6e0:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     6f0:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     700:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     710:	00 00 41 36 08 00 10 08 08 10 08 78 46 41 46 78     ..A6.......xFAFx

00000720 <__c.2675>:
     720:	30 30 00                                            00.

00000723 <kmh>:
     723:	20 6b 6d 2f 68 00                                    km/h.

00000729 <setWheelLength>:
     729:	57 68 65 65 6c 20 28 6d 6d 29 3a 20 30 30 30 30     Wheel (mm): 0000
	...

0000073a <__ctors_end>:
     73a:	11 24       	eor	r1, r1
     73c:	1f be       	out	0x3f, r1	; 63
     73e:	cf ef       	ldi	r28, 0xFF	; 255
     740:	d8 e0       	ldi	r29, 0x08	; 8
     742:	de bf       	out	0x3e, r29	; 62
     744:	cd bf       	out	0x3d, r28	; 61

00000746 <__do_copy_data>:
     746:	11 e0       	ldi	r17, 0x01	; 1
     748:	a0 e0       	ldi	r26, 0x00	; 0
     74a:	b1 e0       	ldi	r27, 0x01	; 1
     74c:	ec ef       	ldi	r30, 0xFC	; 252
     74e:	f3 e2       	ldi	r31, 0x23	; 35
     750:	02 c0       	rjmp	.+4      	; 0x756 <__do_copy_data+0x10>
     752:	05 90       	lpm	r0, Z+
     754:	0d 92       	st	X+, r0
     756:	a0 33       	cpi	r26, 0x30	; 48
     758:	b1 07       	cpc	r27, r17
     75a:	d9 f7       	brne	.-10     	; 0x752 <__do_copy_data+0xc>

0000075c <__do_clear_bss>:
     75c:	22 e0       	ldi	r18, 0x02	; 2
     75e:	a0 e3       	ldi	r26, 0x30	; 48
     760:	b1 e0       	ldi	r27, 0x01	; 1
     762:	01 c0       	rjmp	.+2      	; 0x766 <.do_clear_bss_start>

00000764 <.do_clear_bss_loop>:
     764:	1d 92       	st	X+, r1

00000766 <.do_clear_bss_start>:
     766:	a2 3c       	cpi	r26, 0xC2	; 194
     768:	b2 07       	cpc	r27, r18
     76a:	e1 f7       	brne	.-8      	; 0x764 <.do_clear_bss_loop>
     76c:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <main>
     770:	0c 94 fc 11 	jmp	0x23f8	; 0x23f8 <_exit>

00000774 <__bad_interrupt>:
     774:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000778 <BLuetooth_LCD_Nokia_Main>:
		default:	break;
	}
}

void BLuetooth_LCD_Nokia_Main (void)
{
     778:	cf 93       	push	r28
	static bool Bluetooth_LastState = false;
	
	switch(Bluetooth_Mode)
     77a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <Bluetooth_Mode>
     77e:	88 23       	and	r24, r24
     780:	09 f4       	brne	.+2      	; 0x784 <BLuetooth_LCD_Nokia_Main+0xc>
     782:	45 c0       	rjmp	.+138    	; 0x80e <BLuetooth_LCD_Nokia_Main+0x96>
     784:	81 30       	cpi	r24, 0x01	; 1
     786:	e1 f5       	brne	.+120    	; 0x800 <BLuetooth_LCD_Nokia_Main+0x88>
			break;
		}
		
		case BLUETOOTH_ON_OFF_COMMAND_MODE:
		{
			LCD_Nokia_ClearBuffer();
     788:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			
			Buttons_SetPressed = false;
     78c:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <Buttons_SetPressed>
			while (!Buttons_SetPressed)
     790:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <Buttons_SetPressed>
     794:	81 11       	cpse	r24, r1
     796:	31 c0       	rjmp	.+98     	; 0x7fa <BLuetooth_LCD_Nokia_Main+0x82>
				if (Bluetooth_State)
				{
					if (!Bluetooth_LastState)
					{
						Bluetooth_On();
						Bluetooth_LastState = true;
     798:	c1 e0       	ldi	r28, 0x01	; 1
     79a:	0e c0       	rjmp	.+28     	; 0x7b8 <BLuetooth_LCD_Nokia_Main+0x40>
				LCD_Nokia_SetPixelPosition(0, 4);
				LCD_Nokia_Send6CharString_P((int8_t *) bluetoothString);
				
				if (Bluetooth_State)
				{
					if (!Bluetooth_LastState)
     79c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
     7a0:	88 23       	and	r24, r24
     7a2:	81 f1       	breq	.+96     	; 0x804 <BLuetooth_LCD_Nokia_Main+0x8c>
					{
						Bluetooth_On();
						Bluetooth_LastState = true;
					}
					LCD_Nokia_Send6CharString_P((int8_t *) bluetoothOnString);
     7a4:	88 eb       	ldi	r24, 0xB8	; 184
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
						Bluetooth_Off();
						Bluetooth_LastState = false;
					}
					LCD_Nokia_Send6CharString_P((int8_t *) bluetoothOffString);
				}
				LCD_Nokia_UpdateFullScreen();
     7ac:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>
		case BLUETOOTH_ON_OFF_COMMAND_MODE:
		{
			LCD_Nokia_ClearBuffer();
			
			Buttons_SetPressed = false;
			while (!Buttons_SetPressed)
     7b0:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <Buttons_SetPressed>
     7b4:	81 11       	cpse	r24, r1
     7b6:	21 c0       	rjmp	.+66     	; 0x7fa <BLuetooth_LCD_Nokia_Main+0x82>
			{
				LCD_Nokia_SetPixelPosition(0, 4);
     7b8:	64 e0       	ldi	r22, 0x04	; 4
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
				LCD_Nokia_Send6CharString_P((int8_t *) bluetoothString);
     7c0:	8b eb       	ldi	r24, 0xBB	; 187
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
				
				if (Bluetooth_State)
     7c8:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <Bluetooth_State>
     7cc:	81 11       	cpse	r24, r1
     7ce:	e6 cf       	rjmp	.-52     	; 0x79c <BLuetooth_LCD_Nokia_Main+0x24>
// 					LCD_Nokia_SetPixelPosition(45, 0);
// 					LCD_Nokia_Put6Symbol_P(GeekSportSymbols[1]);
				}
				else
				{
					if (Bluetooth_LastState)
     7d0:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
     7d4:	88 23       	and	r24, r24
     7d6:	39 f0       	breq	.+14     	; 0x7e6 <BLuetooth_LCD_Nokia_Main+0x6e>
	USART_Init();
}

void Bluetooth_Off (void)
{
	UCSR0B &= ~(1 << RXCIE0 | 1 << RXEN0 | 1 << TXEN0);									//	Turn off transceiver, receiver; disable Rx Complete Interrupt (when there are unread data in the receive buffer detected)
     7d8:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     7dc:	87 76       	andi	r24, 0x67	; 103
     7de:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
				else
				{
					if (Bluetooth_LastState)
					{
						Bluetooth_Off();
						Bluetooth_LastState = false;
     7e2:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__data_end>
					}
					LCD_Nokia_Send6CharString_P((int8_t *) bluetoothOffString);
     7e6:	84 eb       	ldi	r24, 0xB4	; 180
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
				}
				LCD_Nokia_UpdateFullScreen();
     7ee:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>
		case BLUETOOTH_ON_OFF_COMMAND_MODE:
		{
			LCD_Nokia_ClearBuffer();
			
			Buttons_SetPressed = false;
			while (!Buttons_SetPressed)
     7f2:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <Buttons_SetPressed>
     7f6:	88 23       	and	r24, r24
     7f8:	f9 f2       	breq	.-66     	; 0x7b8 <BLuetooth_LCD_Nokia_Main+0x40>
			break;
		}
		
		default:	break;
	}
     7fa:	cf 91       	pop	r28
					LCD_Nokia_Send6CharString_P((int8_t *) bluetoothOffString);
				}
				LCD_Nokia_UpdateFullScreen();
			}
			
			LCD_Nokia_ClearBuffer();
     7fc:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			break;
		}
		
		default:	break;
	}
     800:	cf 91       	pop	r28
     802:	08 95       	ret
int8_t Bluetooth_ReceiveBuffer[BLUETOOTH_BUFFER_SIZE] = {0};


void Bluetooth_On (void)
{
	USART_Init();
     804:	0e 94 1f 11 	call	0x223e	; 0x223e <USART_Init>
				if (Bluetooth_State)
				{
					if (!Bluetooth_LastState)
					{
						Bluetooth_On();
						Bluetooth_LastState = true;
     808:	c0 93 30 01 	sts	0x0130, r28	; 0x800130 <__data_end>
     80c:	cb cf       	rjmp	.-106    	; 0x7a4 <BLuetooth_LCD_Nokia_Main+0x2c>
	
	switch(Bluetooth_Mode)
	{
		case BLUETOOTH_VIEW_MESSAGE_MODE:
		{
			LCD_Nokia_SetPixelPosition(0, 0);
     80e:	60 e0       	ldi	r22, 0x00	; 0
     810:	80 e0       	ldi	r24, 0x00	; 0
     812:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString(Bluetooth_ReceiveBuffer);
     816:	81 e3       	ldi	r24, 0x31	; 49
     818:	91 e0       	ldi	r25, 0x01	; 1
     81a:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <LCD_Nokia_Send6CharString>
			break;
		}
		
		default:	break;
	}
     81e:	cf 91       	pop	r28
	{
		case BLUETOOTH_VIEW_MESSAGE_MODE:
		{
			LCD_Nokia_SetPixelPosition(0, 0);
			LCD_Nokia_Send6CharString(Bluetooth_ReceiveBuffer);
			LCD_Nokia_UpdateFullScreen();
     820:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>

00000824 <Buttons_Init>:
	return ((pins & (1 << pin)));
}

void Buttons_IO_Init (void)
{
	BUTTONS_DDR_1 &= ~(1 << BUTTONS_DDR_1_BUTTON_1_PIN | 1 << BUTTONS_DDR_1_BUTTON_2_PIN);
     824:	87 b1       	in	r24, 0x07	; 7
     826:	83 7f       	andi	r24, 0xF3	; 243
     828:	87 b9       	out	0x07, r24	; 7
	BUTTONS_DDR_2 &= ~(1 << BUTTONS_DDR_2_BUTTON_1_PIN | 1 << BUTTONS_DDR_2_BUTTON_2_PIN);
     82a:	8a b1       	in	r24, 0x0a	; 10
     82c:	8f 76       	andi	r24, 0x6F	; 111
     82e:	8a b9       	out	0x0a, r24	; 10
	BUTTONS_PORT_1 |= 1 << BUTTONS_DDR_1_BUTTON_1_PIN | 1 << BUTTONS_DDR_1_BUTTON_2_PIN;
     830:	88 b1       	in	r24, 0x08	; 8
     832:	8c 60       	ori	r24, 0x0C	; 12
     834:	88 b9       	out	0x08, r24	; 8
	BUTTONS_PORT_2 |= 1 << BUTTONS_DDR_2_BUTTON_1_PIN | 1 << BUTTONS_DDR_2_BUTTON_2_PIN;
     836:	8b b1       	in	r24, 0x0b	; 11
     838:	80 69       	ori	r24, 0x90	; 144
     83a:	8b b9       	out	0x0b, r24	; 11
}

void Buttons_Init (void)
{
	Buttons_IO_Init();
	TCCR0A |= 1 << WGM01;																		//	Set CTC mode for button's state polling and set LCD LED pin
     83c:	84 b5       	in	r24, 0x24	; 36
     83e:	82 60       	ori	r24, 0x02	; 2
     840:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= 1 << CS02 | 0 << CS01 | 0 << CS00;												//	Set Timer 0 Prescaler = F_CPU / 256
     842:	85 b5       	in	r24, 0x25	; 37
     844:	84 60       	ori	r24, 0x04	; 4
     846:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= 1 << OCIE0A;																		//	Enable Interrupts on compare
     848:	ee e6       	ldi	r30, 0x6E	; 110
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	80 81       	ld	r24, Z
     84e:	82 60       	ori	r24, 0x02	; 2
     850:	80 83       	st	Z, r24
	OCR0A = (BUTTONS_DELAY_US / BUTTONS_PRESCALER);												//	Set OCR value()
     852:	8b e3       	ldi	r24, 0x3B	; 59
     854:	87 bd       	out	0x27, r24	; 39
     856:	08 95       	ret

00000858 <__vector_14>:
}


ISR (TIMER0_COMPA_vect)													//	Button's state polling
{
     858:	1f 92       	push	r1
     85a:	0f 92       	push	r0
     85c:	0f b6       	in	r0, 0x3f	; 63
     85e:	0f 92       	push	r0
     860:	11 24       	eor	r1, r1
     862:	2f 93       	push	r18
     864:	3f 93       	push	r19
     866:	4f 93       	push	r20
     868:	5f 93       	push	r21
     86a:	6f 93       	push	r22
     86c:	7f 93       	push	r23
     86e:	8f 93       	push	r24
     870:	9f 93       	push	r25
     872:	af 93       	push	r26
     874:	bf 93       	push	r27
     876:	ef 93       	push	r30
     878:	ff 93       	push	r31
	uint8_t mode = GeekSport_Mode;
     87a:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <GeekSport_Mode>
	
	if (!(bitIsSet(BUTTONS_PINS_1, BUTTONS_DDR_1_BUTTON_1_PIN)))							//	Mode button
     87e:	32 99       	sbic	0x06, 2	; 6
     880:	38 c0       	rjmp	.+112    	; 0x8f2 <__vector_14+0x9a>
	{
		if (!Buttons_Button1WasPushed)
     882:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <Buttons_Button1WasPushed>
     886:	99 23       	and	r25, r25
     888:	09 f4       	brne	.+2      	; 0x88c <__vector_14+0x34>
     88a:	58 c0       	rjmp	.+176    	; 0x93c <__stack+0x3d>
	}
	else	Buttons_Button1WasPushed = false;

//	###########################################################################################################################################

	if (!(bitIsSet(BUTTONS_PINS_1, BUTTONS_DDR_1_BUTTON_2_PIN)))							//	Select button
     88c:	33 99       	sbic	0x06, 3	; 6
     88e:	2e c0       	rjmp	.+92     	; 0x8ec <__vector_14+0x94>
	{
		if (!Buttons_Button2WasPushed)
     890:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <Buttons_Button2WasPushed>
     894:	99 23       	and	r25, r25
     896:	d9 f1       	breq	.+118    	; 0x90e <__stack+0xf>
	}
	else	Buttons_Button2WasPushed = false;
	
//	###############################################################################################################################################

	if (!(bitIsSet(BUTTONS_PINS_2, BUTTONS_DDR_2_BUTTON_1_PIN)))							//	Set button
     898:	4c 99       	sbic	0x09, 4	; 9
     89a:	25 c0       	rjmp	.+74     	; 0x8e6 <__vector_14+0x8e>
	{
		if (!Buttons_Button3WasPushed)
     89c:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <Buttons_Button3WasPushed>
     8a0:	99 23       	and	r25, r25
     8a2:	51 f1       	breq	.+84     	; 0x8f8 <__vector_14+0xa0>
	}
	else	Buttons_Button3WasPushed = false;
	
//	###############################################################################################################################################
	
	if (!(bitIsSet(BUTTONS_PINS_2, BUTTONS_DDR_2_BUTTON_2_PIN)))							//	LED Button
     8a4:	4f 99       	sbic	0x09, 7	; 9
     8a6:	1c c0       	rjmp	.+56     	; 0x8e0 <__vector_14+0x88>
	{
		if (!Buttons_Button4WasPushed)
     8a8:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <Buttons_Button4WasPushed>
     8ac:	81 11       	cpse	r24, r1
     8ae:	07 c0       	rjmp	.+14     	; 0x8be <__vector_14+0x66>
		{
			Buttons_Button4WasPushed = true;
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <Buttons_Button4WasPushed>
			
			LCD_NOKIA_LED_PORT ^= 1 << LCD_NOKIA_LED_PIN;																//	Turn on LED
     8b6:	9b b1       	in	r25, 0x0b	; 11
     8b8:	80 e4       	ldi	r24, 0x40	; 64
     8ba:	89 27       	eor	r24, r25
     8bc:	8b b9       	out	0x0b, r24	; 11
		}
	}
	else	Buttons_Button4WasPushed = false;
     8be:	ff 91       	pop	r31
     8c0:	ef 91       	pop	r30
     8c2:	bf 91       	pop	r27
     8c4:	af 91       	pop	r26
     8c6:	9f 91       	pop	r25
     8c8:	8f 91       	pop	r24
     8ca:	7f 91       	pop	r23
     8cc:	6f 91       	pop	r22
     8ce:	5f 91       	pop	r21
     8d0:	4f 91       	pop	r20
     8d2:	3f 91       	pop	r19
     8d4:	2f 91       	pop	r18
     8d6:	0f 90       	pop	r0
     8d8:	0f be       	out	0x3f, r0	; 63
     8da:	0f 90       	pop	r0
     8dc:	1f 90       	pop	r1
     8de:	18 95       	reti
			Buttons_Button4WasPushed = true;
			
			LCD_NOKIA_LED_PORT ^= 1 << LCD_NOKIA_LED_PIN;																//	Turn on LED
		}
	}
	else	Buttons_Button4WasPushed = false;
     8e0:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <Buttons_Button4WasPushed>
     8e4:	ec cf       	rjmp	.-40     	; 0x8be <__vector_14+0x66>
				
				default:	break;
			}
		}
	}
	else	Buttons_Button3WasPushed = false;
     8e6:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <Buttons_Button3WasPushed>
     8ea:	dc cf       	rjmp	.-72     	; 0x8a4 <__vector_14+0x4c>
				}
			}
			else	Buttons_SetButtonState = true;
		}
	}
	else	Buttons_Button2WasPushed = false;
     8ec:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <Buttons_Button2WasPushed>
     8f0:	d3 cf       	rjmp	.-90     	; 0x898 <__vector_14+0x40>
			if ((mode < (GEEKSPORT_LAST_MODE - 1)) && mode != GEEKSPORT_START)	GeekSport_Mode++;
			else if (mode == GEEKSPORT_START);
			else	GeekSport_Mode = GEEKSPORT_WATCH_MODE;
		}
	}
	else	Buttons_Button1WasPushed = false;
     8f2:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <Buttons_Button1WasPushed>
     8f6:	ca cf       	rjmp	.-108    	; 0x88c <__vector_14+0x34>

	if (!(bitIsSet(BUTTONS_PINS_2, BUTTONS_DDR_2_BUTTON_1_PIN)))							//	Set button
	{
		if (!Buttons_Button3WasPushed)
		{
			Buttons_Button3WasPushed = true;
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <Buttons_Button3WasPushed>
			
			switch (mode)
     8fe:	83 30       	cpi	r24, 0x03	; 3
     900:	99 f1       	breq	.+102    	; 0x968 <__stack+0x69>
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0x9>
     904:	84 30       	cpi	r24, 0x04	; 4
     906:	71 f6       	brne	.-100    	; 0x8a4 <__vector_14+0x4c>
				case GEEKSPORT_WATCH_MODE:
				case GEEKSPORT_SPEEDOMETER_MODE:
				
				case GEEKSPORT_SETTINGS_MENU:
				{
					GeekSport_ChangeSettingDigit();
     908:	0e 94 78 07 	call	0xef0	; 0xef0 <GeekSport_ChangeSettingDigit>
					
					break;
     90c:	cb cf       	rjmp	.-106    	; 0x8a4 <__vector_14+0x4c>

	if (!(bitIsSet(BUTTONS_PINS_1, BUTTONS_DDR_1_BUTTON_2_PIN)))							//	Select button
	{
		if (!Buttons_Button2WasPushed)
		{
			Buttons_Button2WasPushed = true;
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <Buttons_Button2WasPushed>
			
			if (Buttons_SetButtonState)
     914:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <Buttons_SetButtonState>
     918:	22 23       	and	r18, r18
     91a:	e9 f0       	breq	.+58     	; 0x956 <__stack+0x57>
			{
				switch (mode)
     91c:	82 30       	cpi	r24, 0x02	; 2
     91e:	09 f4       	brne	.+2      	; 0x922 <__stack+0x23>
     920:	53 c0       	rjmp	.+166    	; 0x9c8 <__stack+0xc9>
     922:	d8 f1       	brcs	.+118    	; 0x99a <__stack+0x9b>
     924:	83 30       	cpi	r24, 0x03	; 3
     926:	79 f1       	breq	.+94     	; 0x986 <__stack+0x87>
     928:	84 30       	cpi	r24, 0x04	; 4
     92a:	09 f0       	breq	.+2      	; 0x92e <__stack+0x2f>
     92c:	b5 cf       	rjmp	.-150    	; 0x898 <__vector_14+0x40>
						break;
					}
					
					case GEEKSPORT_SETTINGS_MENU:
					{
						if (Settings_Mode == SETTINGS_INFO_MODE)	Settings_Mode = SETTINGS_MODE;
     92e:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <Settings_Mode>
     932:	21 11       	cpse	r18, r1
     934:	10 c0       	rjmp	.+32     	; 0x956 <__stack+0x57>
     936:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <Settings_Mode>
     93a:	ae cf       	rjmp	.-164    	; 0x898 <__vector_14+0x40>
	
	if (!(bitIsSet(BUTTONS_PINS_1, BUTTONS_DDR_1_BUTTON_1_PIN)))							//	Mode button
	{
		if (!Buttons_Button1WasPushed)
		{
			Buttons_Button1WasPushed = true;
     93c:	91 e0       	ldi	r25, 0x01	; 1
     93e:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <Buttons_Button1WasPushed>
			
			if ((mode < (GEEKSPORT_LAST_MODE - 1)) && mode != GEEKSPORT_START)	GeekSport_Mode++;
     942:	2f ef       	ldi	r18, 0xFF	; 255
     944:	28 0f       	add	r18, r24
     946:	23 30       	cpi	r18, 0x03	; 3
     948:	48 f0       	brcs	.+18     	; 0x95c <__stack+0x5d>
			else if (mode == GEEKSPORT_START);
     94a:	88 23       	and	r24, r24
     94c:	09 f4       	brne	.+2      	; 0x950 <__stack+0x51>
     94e:	9e cf       	rjmp	.-196    	; 0x88c <__vector_14+0x34>
			else	GeekSport_Mode = GEEKSPORT_WATCH_MODE;
     950:	90 93 8a 01 	sts	0x018A, r25	; 0x80018a <GeekSport_Mode>
     954:	9b cf       	rjmp	.-202    	; 0x88c <__vector_14+0x34>
					}
					
					default:	break;
				}
			}
			else	Buttons_SetButtonState = true;
     956:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <Buttons_SetButtonState>
     95a:	9e cf       	rjmp	.-196    	; 0x898 <__vector_14+0x40>
	{
		if (!Buttons_Button1WasPushed)
		{
			Buttons_Button1WasPushed = true;
			
			if ((mode < (GEEKSPORT_LAST_MODE - 1)) && mode != GEEKSPORT_START)	GeekSport_Mode++;
     95c:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <GeekSport_Mode>
     960:	9f 5f       	subi	r25, 0xFF	; 255
     962:	90 93 8a 01 	sts	0x018A, r25	; 0x80018a <GeekSport_Mode>
     966:	92 cf       	rjmp	.-220    	; 0x88c <__vector_14+0x34>
					break;
				}
				
				case GEEKSPORT_BLUETOOTH_SCREEN_MODE:
				{
					subMode = Bluetooth_Mode;
     968:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <Bluetooth_Mode>
					switch (subMode)
     96c:	88 23       	and	r24, r24
     96e:	11 f1       	breq	.+68     	; 0x9b4 <__stack+0xb5>
     970:	81 30       	cpi	r24, 0x01	; 1
     972:	09 f0       	breq	.+2      	; 0x976 <__stack+0x77>
     974:	97 cf       	rjmp	.-210    	; 0x8a4 <__vector_14+0x4c>
							break;
						}
						
						case BLUETOOTH_ON_OFF_COMMAND_MODE:
						{
							Bluetooth_State = !Bluetooth_State;
     976:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <Bluetooth_State>
     97a:	98 27       	eor	r25, r24
     97c:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <Bluetooth_State>
							Buttons_SetPressed = true;
     980:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <Buttons_SetPressed>
							
							break;
     984:	8f cf       	rjmp	.-226    	; 0x8a4 <__vector_14+0x4c>
						break;
					}
					
					case GEEKSPORT_BLUETOOTH_SCREEN_MODE:
					{
						if (Bluetooth_Mode == BLUETOOTH_VIEW_MESSAGE_MODE)	Bluetooth_Mode++;
     986:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <Bluetooth_Mode>
     98a:	91 11       	cpse	r25, r1
     98c:	2a c0       	rjmp	.+84     	; 0x9e2 <__stack+0xe3>
     98e:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <Bluetooth_Mode>
     992:	9f 5f       	subi	r25, 0xFF	; 255
     994:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <Bluetooth_Mode>
     998:	7f cf       	rjmp	.-258    	; 0x898 <__vector_14+0x40>
		{
			Buttons_Button2WasPushed = true;
			
			if (Buttons_SetButtonState)
			{
				switch (mode)
     99a:	81 30       	cpi	r24, 0x01	; 1
     99c:	09 f0       	breq	.+2      	; 0x9a0 <__stack+0xa1>
     99e:	7c cf       	rjmp	.-264    	; 0x898 <__vector_14+0x40>
				{
					case GEEKSPORT_START:	break;
					
					case GEEKSPORT_WATCH_MODE:
					{
						if (DS1307_Mode < DS1307_TIME_SETTING_MODE)	DS1307_Mode++;
     9a0:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <DS1307_Mode>
     9a4:	91 11       	cpse	r25, r1
     9a6:	1a c0       	rjmp	.+52     	; 0x9dc <__stack+0xdd>
     9a8:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <DS1307_Mode>
     9ac:	9f 5f       	subi	r25, 0xFF	; 255
     9ae:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <DS1307_Mode>
     9b2:	72 cf       	rjmp	.-284    	; 0x898 <__vector_14+0x40>
					subMode = Bluetooth_Mode;
					switch (subMode)
					{
						case BLUETOOTH_VIEW_MESSAGE_MODE:
						{
							if (Bluetooth_State)
     9b4:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <Bluetooth_State>
     9b8:	88 23       	and	r24, r24
     9ba:	09 f4       	brne	.+2      	; 0x9be <__stack+0xbf>
     9bc:	73 cf       	rjmp	.-282    	; 0x8a4 <__vector_14+0x4c>
							{
								USART_ReceiveString(Bluetooth_ReceiveBuffer);
     9be:	81 e3       	ldi	r24, 0x31	; 49
     9c0:	91 e0       	ldi	r25, 0x01	; 1
     9c2:	0e 94 38 11 	call	0x2270	; 0x2270 <USART_ReceiveString>
     9c6:	6e cf       	rjmp	.-292    	; 0x8a4 <__vector_14+0x4c>
						break;
					}
					
					case GEEKSPORT_SPEEDOMETER_MODE:
					{
						if (Speedometer_Mode < (SPEEDOMETER_LAST_MODE - 1))	Speedometer_Mode++;
     9c8:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <Speedometer_Mode>
     9cc:	91 11       	cpse	r25, r1
     9ce:	0c c0       	rjmp	.+24     	; 0x9e8 <__stack+0xe9>
     9d0:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <Speedometer_Mode>
     9d4:	9f 5f       	subi	r25, 0xFF	; 255
     9d6:	90 93 b8 01 	sts	0x01B8, r25	; 0x8001b8 <Speedometer_Mode>
     9da:	5e cf       	rjmp	.-324    	; 0x898 <__vector_14+0x40>
					case GEEKSPORT_START:	break;
					
					case GEEKSPORT_WATCH_MODE:
					{
						if (DS1307_Mode < DS1307_TIME_SETTING_MODE)	DS1307_Mode++;
						else	DS1307_Mode = DS1307_WATCH_MODE;
     9dc:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <DS1307_Mode>
     9e0:	5b cf       	rjmp	.-330    	; 0x898 <__vector_14+0x40>
					}
					
					case GEEKSPORT_BLUETOOTH_SCREEN_MODE:
					{
						if (Bluetooth_Mode == BLUETOOTH_VIEW_MESSAGE_MODE)	Bluetooth_Mode++;
						else	Bluetooth_Mode = BLUETOOTH_VIEW_MESSAGE_MODE;
     9e2:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <Bluetooth_Mode>
     9e6:	58 cf       	rjmp	.-336    	; 0x898 <__vector_14+0x40>
					}
					
					case GEEKSPORT_SPEEDOMETER_MODE:
					{
						if (Speedometer_Mode < (SPEEDOMETER_LAST_MODE - 1))	Speedometer_Mode++;
						else Speedometer_Mode = SPEEDOMETER_SPEED_MEASUREMENT_MODE;
     9e8:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <Speedometer_Mode>
     9ec:	55 cf       	rjmp	.-342    	; 0x898 <__vector_14+0x40>

000009ee <DS1307_SendBCDTimeStructData_WithoutSeconds_24>:
	GeekSport_SettingsDigit = 0;
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(xPos + 6, yPos);
	
	tempWatchDigit |= GeekSport_SettingsDigit;
	timeRegister = tempWatchDigit;
}
     9ee:	80 ed       	ldi	r24, 0xD0	; 208
     9f0:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__TEXT_REGION_LENGTH__+0x7e0000>
     9f4:	10 92 01 00 	sts	0x0001, r1	; 0x800001 <__TEXT_REGION_LENGTH__+0x7e0001>
     9f8:	10 92 02 00 	sts	0x0002, r1	; 0x800002 <__TEXT_REGION_LENGTH__+0x7e0002>
     9fc:	e1 e8       	ldi	r30, 0x81	; 129
     9fe:	f1 e0       	ldi	r31, 0x01	; 1
     a00:	81 81       	ldd	r24, Z+1	; 0x01
     a02:	80 93 03 00 	sts	0x0003, r24	; 0x800003 <__TEXT_REGION_LENGTH__+0x7e0003>
     a06:	82 81       	ldd	r24, Z+2	; 0x02
     a08:	80 93 04 00 	sts	0x0004, r24	; 0x800004 <__TEXT_REGION_LENGTH__+0x7e0004>
     a0c:	83 81       	ldd	r24, Z+3	; 0x03
     a0e:	80 93 05 00 	sts	0x0005, r24	; 0x800005 <__TEXT_REGION_LENGTH__+0x7e0005>
     a12:	84 81       	ldd	r24, Z+4	; 0x04
     a14:	80 93 06 00 	sts	0x0006, r24	; 0x800006 <__TEXT_REGION_LENGTH__+0x7e0006>
     a18:	85 81       	ldd	r24, Z+5	; 0x05
     a1a:	80 93 07 00 	sts	0x0007, r24	; 0x800007 <__TEXT_REGION_LENGTH__+0x7e0007>
     a1e:	86 81       	ldd	r24, Z+6	; 0x06
     a20:	80 93 08 00 	sts	0x0008, r24	; 0x800008 <__TEXT_REGION_LENGTH__+0x7e0008>
     a24:	69 e0       	ldi	r22, 0x09	; 9
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0c 94 85 08 	jmp	0x110a	; 0x110a <I2C_MT_TransmitData>

00000a2e <DS1307_ReceiveData>:
     a2e:	ef 92       	push	r14
     a30:	ff 92       	push	r15
     a32:	1f 93       	push	r17
     a34:	cf 93       	push	r28
     a36:	df 93       	push	r29
     a38:	7c 01       	movw	r14, r24
     a3a:	14 2f       	mov	r17, r20
     a3c:	c0 e0       	ldi	r28, 0x00	; 0
     a3e:	d0 e0       	ldi	r29, 0x00	; 0
     a40:	80 ed       	ldi	r24, 0xD0	; 208
     a42:	88 83       	st	Y, r24
     a44:	69 83       	std	Y+1, r22	; 0x01
     a46:	62 e0       	ldi	r22, 0x02	; 2
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	0e 94 85 08 	call	0x110a	; 0x110a <I2C_MT_TransmitData>
     a50:	81 ed       	ldi	r24, 0xD1	; 209
     a52:	88 83       	st	Y, r24
     a54:	61 2f       	mov	r22, r17
     a56:	80 e0       	ldi	r24, 0x00	; 0
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 85 08 	call	0x110a	; 0x110a <I2C_MT_TransmitData>
     a5e:	61 2f       	mov	r22, r17
     a60:	c7 01       	movw	r24, r14
     a62:	df 91       	pop	r29
     a64:	cf 91       	pop	r28
     a66:	1f 91       	pop	r17
     a68:	ff 90       	pop	r15
     a6a:	ef 90       	pop	r14
     a6c:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <I2C_MR_ReceiveData>

00000a70 <DS1307_ReceiveTimeData>:
     a70:	8a e7       	ldi	r24, 0x7A	; 122
     a72:	91 e0       	ldi	r25, 0x01	; 1
     a74:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <TimeRegPointer+0x1>
     a78:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <TimeRegPointer>
     a7c:	48 e0       	ldi	r20, 0x08	; 8
     a7e:	60 e0       	ldi	r22, 0x00	; 0
     a80:	0e 94 17 05 	call	0xa2e	; 0xa2e <DS1307_ReceiveData>
     a84:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
     a88:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
     a8c:	80 81       	ld	r24, Z
     a8e:	98 2f       	mov	r25, r24
     a90:	92 95       	swap	r25
     a92:	9f 70       	andi	r25, 0x0F	; 15
     a94:	8f 70       	andi	r24, 0x0F	; 15
     a96:	2a e0       	ldi	r18, 0x0A	; 10
     a98:	92 9f       	mul	r25, r18
     a9a:	80 0d       	add	r24, r0
     a9c:	11 24       	eor	r1, r1
     a9e:	80 83       	st	Z, r24
     aa0:	81 81       	ldd	r24, Z+1	; 0x01
     aa2:	98 2f       	mov	r25, r24
     aa4:	92 95       	swap	r25
     aa6:	9f 70       	andi	r25, 0x0F	; 15
     aa8:	8f 70       	andi	r24, 0x0F	; 15
     aaa:	2a e0       	ldi	r18, 0x0A	; 10
     aac:	92 9f       	mul	r25, r18
     aae:	80 0d       	add	r24, r0
     ab0:	11 24       	eor	r1, r1
     ab2:	81 83       	std	Z+1, r24	; 0x01
     ab4:	82 81       	ldd	r24, Z+2	; 0x02
     ab6:	98 2f       	mov	r25, r24
     ab8:	92 95       	swap	r25
     aba:	9f 70       	andi	r25, 0x0F	; 15
     abc:	8f 70       	andi	r24, 0x0F	; 15
     abe:	2a e0       	ldi	r18, 0x0A	; 10
     ac0:	92 9f       	mul	r25, r18
     ac2:	80 0d       	add	r24, r0
     ac4:	11 24       	eor	r1, r1
     ac6:	82 83       	std	Z+2, r24	; 0x02
     ac8:	83 81       	ldd	r24, Z+3	; 0x03
     aca:	98 2f       	mov	r25, r24
     acc:	92 95       	swap	r25
     ace:	9f 70       	andi	r25, 0x0F	; 15
     ad0:	8f 70       	andi	r24, 0x0F	; 15
     ad2:	2a e0       	ldi	r18, 0x0A	; 10
     ad4:	92 9f       	mul	r25, r18
     ad6:	80 0d       	add	r24, r0
     ad8:	11 24       	eor	r1, r1
     ada:	83 83       	std	Z+3, r24	; 0x03
     adc:	84 81       	ldd	r24, Z+4	; 0x04
     ade:	98 2f       	mov	r25, r24
     ae0:	92 95       	swap	r25
     ae2:	9f 70       	andi	r25, 0x0F	; 15
     ae4:	8f 70       	andi	r24, 0x0F	; 15
     ae6:	2a e0       	ldi	r18, 0x0A	; 10
     ae8:	92 9f       	mul	r25, r18
     aea:	80 0d       	add	r24, r0
     aec:	11 24       	eor	r1, r1
     aee:	84 83       	std	Z+4, r24	; 0x04
     af0:	85 81       	ldd	r24, Z+5	; 0x05
     af2:	98 2f       	mov	r25, r24
     af4:	92 95       	swap	r25
     af6:	9f 70       	andi	r25, 0x0F	; 15
     af8:	8f 70       	andi	r24, 0x0F	; 15
     afa:	2a e0       	ldi	r18, 0x0A	; 10
     afc:	92 9f       	mul	r25, r18
     afe:	80 0d       	add	r24, r0
     b00:	11 24       	eor	r1, r1
     b02:	85 83       	std	Z+5, r24	; 0x05
     b04:	86 81       	ldd	r24, Z+6	; 0x06
     b06:	98 2f       	mov	r25, r24
     b08:	92 95       	swap	r25
     b0a:	9f 70       	andi	r25, 0x0F	; 15
     b0c:	8f 70       	andi	r24, 0x0F	; 15
     b0e:	2a e0       	ldi	r18, 0x0A	; 10
     b10:	92 9f       	mul	r25, r18
     b12:	80 0d       	add	r24, r0
     b14:	11 24       	eor	r1, r1
     b16:	86 83       	std	Z+6, r24	; 0x06
     b18:	08 95       	ret

00000b1a <DS1307_Settings>:



void DS1307_Settings (void)
{
     b1a:	cf 93       	push	r28
// 	DS1307_LCD_Nokia_SetTimeRegisterInline(54, 30, TimeRegistersTransmitBuffer.month);
// 	DS1307_LCD_Nokia_SetTimeRegisterInline(72, 30, TimeRegistersTransmitBuffer.year);
 	
	 uint8_t tempWatchDigit;
	
	GeekSport_SettingsDigit = 0;
     b1c:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     b20:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	Buttons_SetButtonState = false;
     b24:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	while (!Buttons_SetButtonState)
     b28:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     b2c:	81 11       	cpse	r24, r1
     b2e:	12 c0       	rjmp	.+36     	; 0xb54 <DS1307_Settings+0x3a>
	{
		if (GeekSport_SettingsDigit > 2)	GeekSport_SettingsDigit = 0;
     b30:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     b34:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     b38:	03 97       	sbiw	r24, 0x03	; 3
     b3a:	20 f0       	brcs	.+8      	; 0xb44 <DS1307_Settings+0x2a>
     b3c:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     b40:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
		GeekSport_LCD_Nokia_UpdateScreen(37, 21);
     b44:	65 e1       	ldi	r22, 0x15	; 21
     b46:	85 e2       	ldi	r24, 0x25	; 37
     b48:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
 	
	 uint8_t tempWatchDigit;
	
	GeekSport_SettingsDigit = 0;
	Buttons_SetButtonState = false;
	while (!Buttons_SetButtonState)
     b4c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     b50:	88 23       	and	r24, r24
     b52:	71 f3       	breq	.-36     	; 0xb30 <DS1307_Settings+0x16>
	{
		if (GeekSport_SettingsDigit > 2)	GeekSport_SettingsDigit = 0;
		GeekSport_LCD_Nokia_UpdateScreen(37, 21);
	}
	Buttons_SetButtonState = false;
     b54:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit = (GeekSport_SettingsDigit << 4);
     b58:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     b5c:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     b60:	c8 2f       	mov	r28, r24
     b62:	c2 95       	swap	r28
     b64:	c0 7f       	andi	r28, 0xF0	; 240
	
	GeekSport_SettingsDigit = 0;
     b66:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     b6a:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(43, 21);
     b6e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     b72:	81 11       	cpse	r24, r1
     b74:	08 c0       	rjmp	.+16     	; 0xb86 <DS1307_Settings+0x6c>
     b76:	65 e1       	ldi	r22, 0x15	; 21
     b78:	8b e2       	ldi	r24, 0x2B	; 43
     b7a:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
     b7e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     b82:	88 23       	and	r24, r24
     b84:	c1 f3       	breq	.-16     	; 0xb76 <DS1307_Settings+0x5c>
	
	Buttons_SetButtonState = false;
     b86:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit |= GeekSport_SettingsDigit;
     b8a:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     b8e:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
	TimeRegistersTransmitBuffer.hours = tempWatchDigit;										//	Set hours
     b92:	8c 2b       	or	r24, r28
     b94:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <TimeRegistersTransmitBuffer+0x2>
	
	GeekSport_SettingsDigit = 0;
     b98:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     b9c:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)
     ba0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     ba4:	81 11       	cpse	r24, r1
     ba6:	12 c0       	rjmp	.+36     	; 0xbcc <DS1307_Settings+0xb2>
	{
		if (GeekSport_SettingsDigit > 5)	GeekSport_SettingsDigit = 0;
     ba8:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     bac:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     bb0:	06 97       	sbiw	r24, 0x06	; 6
     bb2:	20 f0       	brcs	.+8      	; 0xbbc <DS1307_Settings+0xa2>
     bb4:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     bb8:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
		GeekSport_LCD_Nokia_UpdateScreen(55, 21);
     bbc:	65 e1       	ldi	r22, 0x15	; 21
     bbe:	87 e3       	ldi	r24, 0x37	; 55
     bc0:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
	Buttons_SetButtonState = false;
	tempWatchDigit |= GeekSport_SettingsDigit;
	TimeRegistersTransmitBuffer.hours = tempWatchDigit;										//	Set hours
	
	GeekSport_SettingsDigit = 0;
	while (!Buttons_SetButtonState)
     bc4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     bc8:	88 23       	and	r24, r24
     bca:	71 f3       	breq	.-36     	; 0xba8 <DS1307_Settings+0x8e>
	{
		if (GeekSport_SettingsDigit > 5)	GeekSport_SettingsDigit = 0;
		GeekSport_LCD_Nokia_UpdateScreen(55, 21);
	}
	Buttons_SetButtonState = false;
     bcc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit = (GeekSport_SettingsDigit << 4);
     bd0:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     bd4:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     bd8:	c8 2f       	mov	r28, r24
     bda:	c2 95       	swap	r28
     bdc:	c0 7f       	andi	r28, 0xF0	; 240
	
	GeekSport_SettingsDigit = 0;
     bde:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     be2:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(61, 21);
     be6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     bea:	81 11       	cpse	r24, r1
     bec:	08 c0       	rjmp	.+16     	; 0xbfe <DS1307_Settings+0xe4>
     bee:	65 e1       	ldi	r22, 0x15	; 21
     bf0:	8d e3       	ldi	r24, 0x3D	; 61
     bf2:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
     bf6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     bfa:	88 23       	and	r24, r24
     bfc:	c1 f3       	breq	.-16     	; 0xbee <DS1307_Settings+0xd4>
	
	Buttons_SetButtonState = false;
     bfe:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit |= GeekSport_SettingsDigit;
     c02:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     c06:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
	TimeRegistersTransmitBuffer.minutes = tempWatchDigit;									//	Set minutes
     c0a:	8c 2b       	or	r24, r28
     c0c:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <TimeRegistersTransmitBuffer+0x1>
	
	GeekSport_SettingsDigit = 0;
     c10:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     c14:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)
     c18:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     c1c:	81 11       	cpse	r24, r1
     c1e:	12 c0       	rjmp	.+36     	; 0xc44 <DS1307_Settings+0x12a>
	{
		if (GeekSport_SettingsDigit > 3)	GeekSport_SettingsDigit = 0;
     c20:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     c24:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     c28:	04 97       	sbiw	r24, 0x04	; 4
     c2a:	20 f0       	brcs	.+8      	; 0xc34 <DS1307_Settings+0x11a>
     c2c:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     c30:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
		GeekSport_LCD_Nokia_UpdateScreen(37, 30);
     c34:	6e e1       	ldi	r22, 0x1E	; 30
     c36:	85 e2       	ldi	r24, 0x25	; 37
     c38:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
	Buttons_SetButtonState = false;
	tempWatchDigit |= GeekSport_SettingsDigit;
	TimeRegistersTransmitBuffer.minutes = tempWatchDigit;									//	Set minutes
	
	GeekSport_SettingsDigit = 0;
	while (!Buttons_SetButtonState)
     c3c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     c40:	88 23       	and	r24, r24
     c42:	71 f3       	breq	.-36     	; 0xc20 <DS1307_Settings+0x106>
	{
		if (GeekSport_SettingsDigit > 3)	GeekSport_SettingsDigit = 0;
		GeekSport_LCD_Nokia_UpdateScreen(37, 30);
	}
	Buttons_SetButtonState = false;
     c44:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit = (GeekSport_SettingsDigit << 4);
     c48:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     c4c:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     c50:	c8 2f       	mov	r28, r24
     c52:	c2 95       	swap	r28
     c54:	c0 7f       	andi	r28, 0xF0	; 240
	
	GeekSport_SettingsDigit = 0;
     c56:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     c5a:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(43, 30);
     c5e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     c62:	81 11       	cpse	r24, r1
     c64:	08 c0       	rjmp	.+16     	; 0xc76 <DS1307_Settings+0x15c>
     c66:	6e e1       	ldi	r22, 0x1E	; 30
     c68:	8b e2       	ldi	r24, 0x2B	; 43
     c6a:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
     c6e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     c72:	88 23       	and	r24, r24
     c74:	c1 f3       	breq	.-16     	; 0xc66 <DS1307_Settings+0x14c>
	
	Buttons_SetButtonState = false;
     c76:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit |= GeekSport_SettingsDigit;
     c7a:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     c7e:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
	TimeRegistersTransmitBuffer.date = tempWatchDigit;										//	Set	date
     c82:	8c 2b       	or	r24, r28
     c84:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <TimeRegistersTransmitBuffer+0x4>
	
	GeekSport_SettingsDigit = 0;
     c88:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     c8c:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)
     c90:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     c94:	81 11       	cpse	r24, r1
     c96:	12 c0       	rjmp	.+36     	; 0xcbc <DS1307_Settings+0x1a2>
	{
		if (GeekSport_SettingsDigit > 1)	GeekSport_SettingsDigit = 0;
     c98:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     c9c:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     ca0:	02 97       	sbiw	r24, 0x02	; 2
     ca2:	20 f0       	brcs	.+8      	; 0xcac <DS1307_Settings+0x192>
     ca4:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     ca8:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
		GeekSport_LCD_Nokia_UpdateScreen(55, 30);
     cac:	6e e1       	ldi	r22, 0x1E	; 30
     cae:	87 e3       	ldi	r24, 0x37	; 55
     cb0:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
	Buttons_SetButtonState = false;
	tempWatchDigit |= GeekSport_SettingsDigit;
	TimeRegistersTransmitBuffer.date = tempWatchDigit;										//	Set	date
	
	GeekSport_SettingsDigit = 0;
	while (!Buttons_SetButtonState)
     cb4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     cb8:	88 23       	and	r24, r24
     cba:	71 f3       	breq	.-36     	; 0xc98 <DS1307_Settings+0x17e>
	{
		if (GeekSport_SettingsDigit > 1)	GeekSport_SettingsDigit = 0;
		GeekSport_LCD_Nokia_UpdateScreen(55, 30);
	}
	Buttons_SetButtonState = false;
     cbc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit = (GeekSport_SettingsDigit << 4);
     cc0:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     cc4:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     cc8:	c8 2f       	mov	r28, r24
     cca:	c2 95       	swap	r28
     ccc:	c0 7f       	andi	r28, 0xF0	; 240
	
	GeekSport_SettingsDigit = 0;
     cce:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     cd2:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(61, 30);
     cd6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     cda:	81 11       	cpse	r24, r1
     cdc:	08 c0       	rjmp	.+16     	; 0xcee <DS1307_Settings+0x1d4>
     cde:	6e e1       	ldi	r22, 0x1E	; 30
     ce0:	8d e3       	ldi	r24, 0x3D	; 61
     ce2:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
     ce6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     cea:	88 23       	and	r24, r24
     cec:	c1 f3       	breq	.-16     	; 0xcde <DS1307_Settings+0x1c4>
	
	Buttons_SetButtonState = false;
     cee:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit |= GeekSport_SettingsDigit;
     cf2:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     cf6:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
	TimeRegistersTransmitBuffer.month = tempWatchDigit;											//	Set	month
     cfa:	8c 2b       	or	r24, r28
     cfc:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <TimeRegistersTransmitBuffer+0x5>
	
	GeekSport_SettingsDigit = 0;
     d00:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     d04:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(73, 30);
     d08:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     d0c:	81 11       	cpse	r24, r1
     d0e:	08 c0       	rjmp	.+16     	; 0xd20 <DS1307_Settings+0x206>
     d10:	6e e1       	ldi	r22, 0x1E	; 30
     d12:	89 e4       	ldi	r24, 0x49	; 73
     d14:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
     d18:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     d1c:	88 23       	and	r24, r24
     d1e:	c1 f3       	breq	.-16     	; 0xd10 <DS1307_Settings+0x1f6>
	
	Buttons_SetButtonState = false;
     d20:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit = (GeekSport_SettingsDigit << 4);
     d24:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     d28:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     d2c:	c8 2f       	mov	r28, r24
     d2e:	c2 95       	swap	r28
     d30:	c0 7f       	andi	r28, 0xF0	; 240
	
	GeekSport_SettingsDigit = 0;
     d32:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     d36:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(79, 30);
     d3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     d3e:	81 11       	cpse	r24, r1
     d40:	08 c0       	rjmp	.+16     	; 0xd52 <DS1307_Settings+0x238>
     d42:	6e e1       	ldi	r22, 0x1E	; 30
     d44:	8f e4       	ldi	r24, 0x4F	; 79
     d46:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
     d4a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     d4e:	88 23       	and	r24, r24
     d50:	c1 f3       	breq	.-16     	; 0xd42 <DS1307_Settings+0x228>
	
	Buttons_SetButtonState = false;
     d52:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempWatchDigit |= GeekSport_SettingsDigit;
     d56:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     d5a:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
	TimeRegistersTransmitBuffer.year = tempWatchDigit;											//	Set	year
     d5e:	8c 2b       	or	r24, r28
     d60:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <TimeRegistersTransmitBuffer+0x6>
	

	GeekSport_SettingsDigit = 0;
     d64:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     d68:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)
     d6c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     d70:	81 11       	cpse	r24, r1
     d72:	20 c0       	rjmp	.+64     	; 0xdb4 <DS1307_Settings+0x29a>
	{
		if (GeekSport_SettingsDigit > 6)	GeekSport_SettingsDigit = 0;
     d74:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     d78:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     d7c:	07 97       	sbiw	r24, 0x07	; 7
     d7e:	20 f0       	brcs	.+8      	; 0xd88 <DS1307_Settings+0x26e>
     d80:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     d84:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
		LCD_Nokia_SetPixelPosition(60, 39);
     d88:	67 e2       	ldi	r22, 0x27	; 39
     d8a:	8c e3       	ldi	r24, 0x3C	; 60
     d8c:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
		LCD_Nokia_Send6CharString_P((int8_t *) WeekdaysPointer[GeekSport_SettingsDigit]);
     d90:	e0 91 bf 01 	lds	r30, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     d94:	f0 91 c0 01 	lds	r31, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     d98:	ee 0f       	add	r30, r30
     d9a:	ff 1f       	adc	r31, r31
     d9c:	e3 5e       	subi	r30, 0xE3	; 227
     d9e:	fe 4f       	sbci	r31, 0xFE	; 254
     da0:	80 81       	ld	r24, Z
     da2:	91 81       	ldd	r25, Z+1	; 0x01
     da4:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
		LCD_Nokia_UpdateFullScreen();
     da8:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>
	tempWatchDigit |= GeekSport_SettingsDigit;
	TimeRegistersTransmitBuffer.year = tempWatchDigit;											//	Set	year
	

	GeekSport_SettingsDigit = 0;
	while (!Buttons_SetButtonState)
     dac:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
     db0:	88 23       	and	r24, r24
     db2:	01 f3       	breq	.-64     	; 0xd74 <DS1307_Settings+0x25a>
		LCD_Nokia_SetPixelPosition(60, 39);
		LCD_Nokia_Send6CharString_P((int8_t *) WeekdaysPointer[GeekSport_SettingsDigit]);
		LCD_Nokia_UpdateFullScreen();
	}
	
	tempWatchDigit = GeekSport_SettingsDigit + 1;
     db4:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     db8:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
	TimeRegistersTransmitBuffer.weekday = tempWatchDigit;										//	Set	the day of week
     dbc:	8f 5f       	subi	r24, 0xFF	; 255
     dbe:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <TimeRegistersTransmitBuffer+0x3>
	
	DS1307_SendBCDTimeStructData_WithoutSeconds_24();
}
     dc2:	cf 91       	pop	r28
	}
	
	tempWatchDigit = GeekSport_SettingsDigit + 1;
	TimeRegistersTransmitBuffer.weekday = tempWatchDigit;										//	Set	the day of week
	
	DS1307_SendBCDTimeStructData_WithoutSeconds_24();
     dc4:	0c 94 f7 04 	jmp	0x9ee	; 0x9ee <DS1307_SendBCDTimeStructData_WithoutSeconds_24>

00000dc8 <DS1307_LCD_Nokia_Main>:
}

void DS1307_LCD_Nokia_Main (void)
{
     dc8:	0f 93       	push	r16
	switch (DS1307_Mode)
     dca:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <DS1307_Mode>
     dce:	88 23       	and	r24, r24
     dd0:	61 f1       	breq	.+88     	; 0xe2a <DS1307_LCD_Nokia_Main+0x62>
     dd2:	81 30       	cpi	r24, 0x01	; 1
     dd4:	41 f5       	brne	.+80     	; 0xe26 <DS1307_LCD_Nokia_Main+0x5e>
			
			break;
		}
		case DS1307_TIME_SETTING_MODE:
		{
			LCD_Nokia_ClearBuffer();
     dd6:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			
			LCD_Nokia_SetPixelPosition(0, 0);
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	80 e0       	ldi	r24, 0x00	; 0
     dde:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t *) timeSettings);
     de2:	8a ec       	ldi	r24, 0xCA	; 202
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			LCD_Nokia_SetPixelPosition(0, 21);
     dea:	65 e1       	ldi	r22, 0x15	; 21
     dec:	80 e0       	ldi	r24, 0x00	; 0
     dee:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) timeSettingString);
     df2:	83 ef       	ldi	r24, 0xF3	; 243
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			LCD_Nokia_SetPixelPosition(0, 30);
     dfa:	6e e1       	ldi	r22, 0x1E	; 30
     dfc:	80 e0       	ldi	r24, 0x00	; 0
     dfe:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) dateSettingString);
     e02:	84 ee       	ldi	r24, 0xE4	; 228
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			LCD_Nokia_SetPixelPosition(0, 39);
     e0a:	67 e2       	ldi	r22, 0x27	; 39
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) weekdaySettingString);
     e12:	89 ed       	ldi	r24, 0xD9	; 217
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			DS1307_Settings();
     e1a:	0e 94 8d 05 	call	0xb1a	; 0xb1a <DS1307_Settings>
			
			LCD_Nokia_ClearBuffer();
     e1e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			DS1307_Mode = DS1307_WATCH_MODE;
     e22:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <DS1307_Mode>
			break;
		}
		
		default:	break;
	}
}
     e26:	0f 91       	pop	r16
     e28:	08 95       	ret
{
	switch (DS1307_Mode)
	{
		case DS1307_WATCH_MODE:
		{
			DS1307_ReceiveTimeData();
     e2a:	0e 94 38 05 	call	0xa70	; 0xa70 <DS1307_ReceiveTimeData>
			
			LCD_Nokia_DrawUnfilledRectangle(0, 7, 83, 47, 4);
     e2e:	04 e0       	ldi	r16, 0x04	; 4
     e30:	2f e2       	ldi	r18, 0x2F	; 47
     e32:	43 e5       	ldi	r20, 0x53	; 83
     e34:	67 e0       	ldi	r22, 0x07	; 7
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <LCD_Nokia_DrawUnfilledRectangle>
			LCD_Nokia_SetPixelPosition(12, 12);
     e3c:	6c e0       	ldi	r22, 0x0C	; 12
     e3e:	8c e0       	ldi	r24, 0x0C	; 12
     e40:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send12Integer(TimeRegPointer->hours);
     e44:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
     e48:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
     e4c:	62 81       	ldd	r22, Z+2	; 0x02
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	80 e0       	ldi	r24, 0x00	; 0
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <LCD_Nokia_Send12Integer>
			LCD_Nokia_Put12Char(':');
     e58:	8a e3       	ldi	r24, 0x3A	; 58
     e5a:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
			LCD_Nokia_Send12Integer(TimeRegPointer->minutes);
     e5e:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
     e62:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
     e66:	61 81       	ldd	r22, Z+1	; 0x01
     e68:	70 e0       	ldi	r23, 0x00	; 0
     e6a:	80 e0       	ldi	r24, 0x00	; 0
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <LCD_Nokia_Send12Integer>
			LCD_Nokia_SetPixelPosition(6, 30);
     e72:	6e e1       	ldi	r22, 0x1E	; 30
     e74:	86 e0       	ldi	r24, 0x06	; 6
     e76:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) WeekdaysPointer[TimeRegPointer->weekday - 1]);
     e7a:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
     e7e:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
     e82:	e3 81       	ldd	r30, Z+3	; 0x03
     e84:	f0 e0       	ldi	r31, 0x00	; 0
     e86:	ee 0f       	add	r30, r30
     e88:	ff 1f       	adc	r31, r31
     e8a:	e5 5e       	subi	r30, 0xE5	; 229
     e8c:	fe 4f       	sbci	r31, 0xFE	; 254
     e8e:	80 81       	ld	r24, Z
     e90:	91 81       	ldd	r25, Z+1	; 0x01
     e92:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			LCD_Nokia_Send6CharString_P((int8_t* ) PSTR (", "));
     e96:	87 ec       	ldi	r24, 0xC7	; 199
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			LCD_Nokia_Send6CharString_P((int8_t* ) MonthsPointer[TimeRegPointer->month - 1]);
     e9e:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
     ea2:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
     ea6:	e5 81       	ldd	r30, Z+5	; 0x05
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	ee 0f       	add	r30, r30
     eac:	ff 1f       	adc	r31, r31
     eae:	ed 5f       	subi	r30, 0xFD	; 253
     eb0:	fe 4f       	sbci	r31, 0xFE	; 254
     eb2:	80 81       	ld	r24, Z
     eb4:	91 81       	ldd	r25, Z+1	; 0x01
     eb6:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			LCD_Nokia_Put6Char(' ');
     eba:	80 e2       	ldi	r24, 0x20	; 32
     ebc:	0e 94 c3 0a 	call	0x1586	; 0x1586 <LCD_Nokia_Put6Char>
			LCD_Nokia_Send5Integer(TimeRegPointer->date);
     ec0:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
     ec4:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
     ec8:	64 81       	ldd	r22, Z+4	; 0x04
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <LCD_Nokia_Send5Integer>
			break;
		}
		
		default:	break;
	}
}
     ed4:	0f 91       	pop	r16
			LCD_Nokia_Send6CharString_P((int8_t* ) WeekdaysPointer[TimeRegPointer->weekday - 1]);
			LCD_Nokia_Send6CharString_P((int8_t* ) PSTR (", "));
			LCD_Nokia_Send6CharString_P((int8_t* ) MonthsPointer[TimeRegPointer->month - 1]);
			LCD_Nokia_Put6Char(' ');
			LCD_Nokia_Send5Integer(TimeRegPointer->date);
			LCD_Nokia_UpdateFullScreen();
     ed6:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>

00000eda <GeekSport_LCD_Nokia_UpdateScreen>:

volatile uint8_t Settings_Mode = SETTINGS_MODE;//SETTINGS_INFO_MODE;

void GeekSport_LCD_Nokia_UpdateScreen (uint8_t xPos, uint8_t yPos)
{
	LCD_Nokia_SetPixelPosition(xPos, yPos);
     eda:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
	LCD_Nokia_Put5Char((int8_t) (GeekSport_SettingsDigit + ASCII_NULL));
     ede:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     ee2:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     ee6:	80 5d       	subi	r24, 0xD0	; 208
     ee8:	0e 94 c0 0a 	call	0x1580	; 0x1580 <LCD_Nokia_Put5Char>
	LCD_Nokia_UpdateFullScreen();
     eec:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>

00000ef0 <GeekSport_ChangeSettingDigit>:
}

void GeekSport_ChangeSettingDigit (void)
{
	uint8_t tempDigit = GeekSport_SettingsDigit;
     ef0:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
     ef4:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
	if (tempDigit < 9)	tempDigit++;
     ef8:	89 30       	cpi	r24, 0x09	; 9
     efa:	38 f4       	brcc	.+14     	; 0xf0a <GeekSport_ChangeSettingDigit+0x1a>
     efc:	8f 5f       	subi	r24, 0xFF	; 255
     efe:	90 e0       	ldi	r25, 0x00	; 0
	else	tempDigit = 0;
	GeekSport_SettingsDigit = tempDigit;
     f00:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     f04:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <GeekSport_SettingsDigit>
     f08:	08 95       	ret
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
     f12:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <GeekSport_SettingsDigit>
     f16:	08 95       	ret

00000f18 <GeekSport_SettingsMenu>:
}

void GeekSport_SettingsMenu (void)
{
     f18:	cf 93       	push	r28
	uint8_t mode = Settings_Mode;
     f1a:	c0 91 01 01 	lds	r28, 0x0101	; 0x800101 <Settings_Mode>
	
	switch (mode)
     f1e:	cc 23       	and	r28, r28
     f20:	d1 f1       	breq	.+116    	; 0xf96 <GeekSport_SettingsMenu+0x7e>
     f22:	c1 30       	cpi	r28, 0x01	; 1
     f24:	b1 f5       	brne	.+108    	; 0xf92 <GeekSport_SettingsMenu+0x7a>
			break;
		}
		
		case SETTINGS_MODE:
		{
			LCD_Nokia_ClearBuffer();
     f26:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			LCD_Nokia_SetPixelPosition(19, 0);
     f2a:	60 e0       	ldi	r22, 0x00	; 0
     f2c:	83 e1       	ldi	r24, 0x13	; 19
     f2e:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t *) settings);
     f32:	8e e5       	ldi	r24, 0x5E	; 94
     f34:	91 e0       	ldi	r25, 0x01	; 1
     f36:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			LCD_Nokia_SetPixelPosition(3, 11);
     f3a:	6b e0       	ldi	r22, 0x0B	; 11
     f3c:	83 e0       	ldi	r24, 0x03	; 3
     f3e:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send5CharString_P((int8_t *) setWheelLength);							//	Wheel length setting string
     f42:	8d e4       	ldi	r24, 0x4D	; 77
     f44:	91 e0       	ldi	r25, 0x01	; 1
     f46:	0e 94 c6 0a 	call	0x158c	; 0x158c <LCD_Nokia_Send5CharString_P>
			
			LCD_Nokia_SetPixelPosition(0, 21);
     f4a:	65 e1       	ldi	r22, 0x15	; 21
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) timeSettingString);
     f52:	8a ea       	ldi	r24, 0xAA	; 170
     f54:	91 e0       	ldi	r25, 0x01	; 1
     f56:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			LCD_Nokia_SetPixelPosition(0, 30);
     f5a:	6e e1       	ldi	r22, 0x1E	; 30
     f5c:	80 e0       	ldi	r24, 0x00	; 0
     f5e:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) dateSettingString);
     f62:	8b e9       	ldi	r24, 0x9B	; 155
     f64:	91 e0       	ldi	r25, 0x01	; 1
     f66:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			LCD_Nokia_SetPixelPosition(0, 39);
     f6a:	67 e2       	ldi	r22, 0x27	; 39
     f6c:	80 e0       	ldi	r24, 0x00	; 0
     f6e:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) weekdaySettingString);
     f72:	80 e9       	ldi	r24, 0x90	; 144
     f74:	91 e0       	ldi	r25, 0x01	; 1
     f76:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			Speedometer_Settings();
     f7a:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <Speedometer_Settings>
			DS1307_Settings();
     f7e:	0e 94 8d 05 	call	0xb1a	; 0xb1a <DS1307_Settings>
			
			LCD_Nokia_ClearBuffer();
     f82:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			LCD_Nokia_UpdateFullScreen();
     f86:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>
			Settings_Mode = SETTINGS_INFO_MODE;
     f8a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <Settings_Mode>
			GeekSport_Mode = GEEKSPORT_WATCH_MODE;
     f8e:	c0 93 8a 01 	sts	0x018A, r28	; 0x80018a <GeekSport_Mode>
			
			break;
		}
	}
	
}
     f92:	cf 91       	pop	r28
     f94:	08 95       	ret
	
	switch (mode)
	{
		case SETTINGS_INFO_MODE:
		{
			LCD_Nokia_SetPixelPosition(20, 2);
     f96:	62 e0       	ldi	r22, 0x02	; 2
     f98:	84 e1       	ldi	r24, 0x14	; 20
     f9a:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t *) GeekSportString);
     f9e:	86 e8       	ldi	r24, 0x86	; 134
     fa0:	91 e0       	ldi	r25, 0x01	; 1
     fa2:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			LCD_Nokia_SetPixelPosition(2, 12);
     fa6:	6c e0       	ldi	r22, 0x0C	; 12
     fa8:	82 e0       	ldi	r24, 0x02	; 2
     faa:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t *) developerInfo0);
     fae:	8b e7       	ldi	r24, 0x7B	; 123
     fb0:	91 e0       	ldi	r25, 0x01	; 1
     fb2:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			LCD_Nokia_SetPixelPosition(0, 21);
     fb6:	65 e1       	ldi	r22, 0x15	; 21
     fb8:	80 e0       	ldi	r24, 0x00	; 0
     fba:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t *) developerInfo1);
     fbe:	8c e6       	ldi	r24, 0x6C	; 108
     fc0:	91 e0       	ldi	r25, 0x01	; 1
     fc2:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			LCD_Nokia_SetPixelPosition(54, 40);
     fc6:	68 e2       	ldi	r22, 0x28	; 40
     fc8:	86 e3       	ldi	r24, 0x36	; 54
     fca:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t *) developerInfo2);
     fce:	87 e6       	ldi	r24, 0x67	; 103
     fd0:	91 e0       	ldi	r25, 0x01	; 1
     fd2:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			
			break;
		}
	}
	
}
     fd6:	cf 91       	pop	r28
			LCD_Nokia_SetPixelPosition(0, 21);
			LCD_Nokia_Send6CharString_P((int8_t *) developerInfo1);
			LCD_Nokia_SetPixelPosition(54, 40);
			LCD_Nokia_Send6CharString_P((int8_t *) developerInfo2);
			
			LCD_Nokia_UpdateFullScreen();
     fd8:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>

00000fdc <GeekSport_SetMode>:
	}
	
}

void GeekSport_SetMode (uint8_t mode)
{
     fdc:	cf 93       	push	r28
     fde:	c8 2f       	mov	r28, r24
	static uint8_t lastBuffer = GEEKSPORT_START;
	
	switch (mode)
     fe0:	82 30       	cpi	r24, 0x02	; 2
     fe2:	09 f4       	brne	.+2      	; 0xfe6 <GeekSport_SetMode+0xa>
     fe4:	4c c0       	rjmp	.+152    	; 0x107e <GeekSport_SetMode+0xa2>
     fe6:	b0 f4       	brcc	.+44     	; 0x1014 <GeekSport_SetMode+0x38>
     fe8:	88 23       	and	r24, r24
     fea:	59 f1       	breq	.+86     	; 0x1042 <GeekSport_SetMode+0x66>
     fec:	81 30       	cpi	r24, 0x01	; 1
     fee:	39 f5       	brne	.+78     	; 0x103e <GeekSport_SetMode+0x62>
			GeekSport_SettingsMenu();
		}
		
		case GEEKSPORT_WATCH_MODE:
		{
			if (GeekSport_LastMode != GEEKSPORT_WATCH_MODE)
     ff0:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <GeekSport_LastMode>
     ff4:	81 30       	cpi	r24, 0x01	; 1
     ff6:	59 f0       	breq	.+22     	; 0x100e <GeekSport_SetMode+0x32>
			{
				GeekSport_LastMode = GEEKSPORT_WATCH_MODE;
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <GeekSport_LastMode>
				if (lastBuffer != GeekSport_LastMode)		//?????????????????????????
     ffe:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <lastBuffer.2666>
    1002:	81 30       	cpi	r24, 0x01	; 1
    1004:	21 f0       	breq	.+8      	; 0x100e <GeekSport_SetMode+0x32>
				{
					lastBuffer = mode;
    1006:	c0 93 88 01 	sts	0x0188, r28	; 0x800188 <lastBuffer.2666>
					LCD_Nokia_ClearBuffer();
    100a:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			//	Error code
			
			break;
		}
	}
    100e:	cf 91       	pop	r28
				{
					lastBuffer = mode;
					LCD_Nokia_ClearBuffer();
				}
			}
			DS1307_LCD_Nokia_Main();
    1010:	0c 94 e4 06 	jmp	0xdc8	; 0xdc8 <DS1307_LCD_Nokia_Main>

void GeekSport_SetMode (uint8_t mode)
{
	static uint8_t lastBuffer = GEEKSPORT_START;
	
	switch (mode)
    1014:	83 30       	cpi	r24, 0x03	; 3
    1016:	11 f1       	breq	.+68     	; 0x105c <GeekSport_SetMode+0x80>
    1018:	84 30       	cpi	r24, 0x04	; 4
    101a:	89 f4       	brne	.+34     	; 0x103e <GeekSport_SetMode+0x62>
			break;
		}
		
		case GEEKSPORT_SETTINGS_MENU:
		{
			if (GeekSport_LastMode != GEEKSPORT_SETTINGS_MENU)
    101c:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <GeekSport_LastMode>
    1020:	84 30       	cpi	r24, 0x04	; 4
    1022:	51 f0       	breq	.+20     	; 0x1038 <GeekSport_SetMode+0x5c>
			{
				GeekSport_LastMode = GEEKSPORT_SETTINGS_MENU;
    1024:	c0 93 89 01 	sts	0x0189, r28	; 0x800189 <GeekSport_LastMode>
				if (lastBuffer != GeekSport_LastMode)
    1028:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <lastBuffer.2666>
    102c:	84 30       	cpi	r24, 0x04	; 4
    102e:	21 f0       	breq	.+8      	; 0x1038 <GeekSport_SetMode+0x5c>
				{
					lastBuffer = mode;
    1030:	c0 93 88 01 	sts	0x0188, r28	; 0x800188 <lastBuffer.2666>
					LCD_Nokia_ClearBuffer();
    1034:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			//	Error code
			
			break;
		}
	}
    1038:	cf 91       	pop	r28
				{
					lastBuffer = mode;
					LCD_Nokia_ClearBuffer();
				}
			}
			GeekSport_SettingsMenu();
    103a:	0c 94 8c 07 	jmp	0xf18	; 0xf18 <GeekSport_SettingsMenu>
			//	Error code
			
			break;
		}
	}
    103e:	cf 91       	pop	r28
    1040:	08 95       	ret
	
	switch (mode)
	{
		case GEEKSPORT_START:
		{
			if (GeekSport_LastMode != GEEKSPORT_START)//GEEKSPORT_WATCH_MODE)
    1042:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <GeekSport_LastMode>
    1046:	88 23       	and	r24, r24
    1048:	31 f0       	breq	.+12     	; 0x1056 <GeekSport_SetMode+0x7a>
			{
				GeekSport_LastMode = GEEKSPORT_START;//GEEKSPORT_WATCH_MODE;
    104a:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <GeekSport_LastMode>
				if (lastBuffer != GeekSport_LastMode)		//?????????????????????????
    104e:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <lastBuffer.2666>
    1052:	81 11       	cpse	r24, r1
    1054:	25 c0       	rjmp	.+74     	; 0x10a0 <GeekSport_SetMode+0xc4>
				{
					lastBuffer = mode;
					LCD_Nokia_ClearBuffer();
				}
			}
			GeekSport_SettingsMenu();
    1056:	0e 94 8c 07 	call	0xf18	; 0xf18 <GeekSport_SettingsMenu>
    105a:	ca cf       	rjmp	.-108    	; 0xff0 <GeekSport_SetMode+0x14>
			break;
		}
		
		case GEEKSPORT_BLUETOOTH_SCREEN_MODE:
		{
			if (GeekSport_LastMode != GEEKSPORT_BLUETOOTH_SCREEN_MODE)
    105c:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <GeekSport_LastMode>
    1060:	83 30       	cpi	r24, 0x03	; 3
    1062:	51 f0       	breq	.+20     	; 0x1078 <GeekSport_SetMode+0x9c>
			{
				GeekSport_LastMode = GEEKSPORT_BLUETOOTH_SCREEN_MODE;
    1064:	c0 93 89 01 	sts	0x0189, r28	; 0x800189 <GeekSport_LastMode>
				if (lastBuffer != GeekSport_LastMode)
    1068:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <lastBuffer.2666>
    106c:	83 30       	cpi	r24, 0x03	; 3
    106e:	21 f0       	breq	.+8      	; 0x1078 <GeekSport_SetMode+0x9c>
				{
					lastBuffer = mode;
    1070:	c0 93 88 01 	sts	0x0188, r28	; 0x800188 <lastBuffer.2666>
					LCD_Nokia_ClearBuffer();
    1074:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			//	Error code
			
			break;
		}
	}
    1078:	cf 91       	pop	r28
				{
					lastBuffer = mode;
					LCD_Nokia_ClearBuffer();
				}
			}
			BLuetooth_LCD_Nokia_Main();
    107a:	0c 94 bc 03 	jmp	0x778	; 0x778 <BLuetooth_LCD_Nokia_Main>
			break;
		}
		
		case GEEKSPORT_SPEEDOMETER_MODE:
		{
			if (GeekSport_LastMode != GEEKSPORT_SPEEDOMETER_MODE)
    107e:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <GeekSport_LastMode>
    1082:	82 30       	cpi	r24, 0x02	; 2
    1084:	51 f0       	breq	.+20     	; 0x109a <GeekSport_SetMode+0xbe>
			{
 				GeekSport_LastMode = GEEKSPORT_SPEEDOMETER_MODE;
    1086:	c0 93 89 01 	sts	0x0189, r28	; 0x800189 <GeekSport_LastMode>
 				if (lastBuffer != GeekSport_LastMode)		//?????????????????????????
    108a:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <lastBuffer.2666>
    108e:	82 30       	cpi	r24, 0x02	; 2
    1090:	21 f0       	breq	.+8      	; 0x109a <GeekSport_SetMode+0xbe>
				{
					lastBuffer = mode;
    1092:	c0 93 88 01 	sts	0x0188, r28	; 0x800188 <lastBuffer.2666>
					LCD_Nokia_ClearBuffer();
    1096:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			//	Error code
			
			break;
		}
	}
    109a:	cf 91       	pop	r28
				{
					lastBuffer = mode;
					LCD_Nokia_ClearBuffer();
				}
			}
			Speedometer_LCD_Nokia_Main();
    109c:	0c 94 f8 0e 	jmp	0x1df0	; 0x1df0 <Speedometer_LCD_Nokia_Main>
			if (GeekSport_LastMode != GEEKSPORT_START)//GEEKSPORT_WATCH_MODE)
			{
				GeekSport_LastMode = GEEKSPORT_START;//GEEKSPORT_WATCH_MODE;
				if (lastBuffer != GeekSport_LastMode)		//?????????????????????????
				{
					lastBuffer = mode;
    10a0:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <lastBuffer.2666>
					LCD_Nokia_ClearBuffer();
    10a4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
    10a8:	d6 cf       	rjmp	.-84     	; 0x1056 <GeekSport_SetMode+0x7a>

000010aa <I2C_Init>:
		timeStructPointer->month = I2C_ReceiveBuffer[6];
		timeStructPointer->year = I2C_ReceiveBuffer[7];
	}
	
	return (I2C_StatusFlags.transfer);
}
    10aa:	0f 93       	push	r16
    10ac:	1f 93       	push	r17
    10ae:	cf 93       	push	r28
    10b0:	8b 01       	movw	r16, r22
    10b2:	9c 01       	movw	r18, r24
    10b4:	c4 2f       	mov	r28, r20
    10b6:	87 b1       	in	r24, 0x07	; 7
    10b8:	8f 7c       	andi	r24, 0xCF	; 207
    10ba:	87 b9       	out	0x07, r24	; 7
    10bc:	88 b1       	in	r24, 0x08	; 8
    10be:	80 63       	ori	r24, 0x30	; 48
    10c0:	88 b9       	out	0x08, r24	; 8
    10c2:	60 e4       	ldi	r22, 0x40	; 64
    10c4:	72 e4       	ldi	r23, 0x42	; 66
    10c6:	8f e0       	ldi	r24, 0x0F	; 15
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	a9 01       	movw	r20, r18
    10cc:	98 01       	movw	r18, r16
    10ce:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    10d2:	ca 01       	movw	r24, r20
    10d4:	b9 01       	movw	r22, r18
    10d6:	60 51       	subi	r22, 0x10	; 16
    10d8:	71 09       	sbc	r23, r1
    10da:	81 09       	sbc	r24, r1
    10dc:	91 09       	sbc	r25, r1
    10de:	4c 2f       	mov	r20, r28
    10e0:	50 e0       	ldi	r21, 0x00	; 0
    10e2:	9a 01       	movw	r18, r20
    10e4:	22 0f       	add	r18, r18
    10e6:	33 1f       	adc	r19, r19
    10e8:	03 2e       	mov	r0, r19
    10ea:	00 0c       	add	r0, r0
    10ec:	44 0b       	sbc	r20, r20
    10ee:	55 0b       	sbc	r21, r21
    10f0:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    10f4:	20 93 b8 00 	sts	0x00B8, r18	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    10f8:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    10fc:	84 e0       	ldi	r24, 0x04	; 4
    10fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1102:	cf 91       	pop	r28
    1104:	1f 91       	pop	r17
    1106:	0f 91       	pop	r16
    1108:	08 95       	ret

0000110a <I2C_MT_TransmitData>:
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	ec 01       	movw	r28, r24
    1110:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1114:	90 fd       	sbrc	r25, 0
    1116:	fc cf       	rjmp	.-8      	; 0x1110 <I2C_MT_TransmitData+0x6>
    1118:	60 93 8c 01 	sts	0x018C, r22	; 0x80018c <I2C_MessageSize>
    111c:	88 81       	ld	r24, Y
    111e:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <I2C_TransmitBuffer>
    1122:	88 81       	ld	r24, Y
    1124:	80 fd       	sbrc	r24, 0
    1126:	15 c0       	rjmp	.+42     	; 0x1152 <I2C_MT_TransmitData+0x48>
    1128:	62 30       	cpi	r22, 0x02	; 2
    112a:	98 f0       	brcs	.+38     	; 0x1152 <I2C_MT_TransmitData+0x48>
    112c:	fe 01       	movw	r30, r28
    112e:	31 96       	adiw	r30, 0x01	; 1
    1130:	62 50       	subi	r22, 0x02	; 2
    1132:	26 2f       	mov	r18, r22
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	2e 5f       	subi	r18, 0xFE	; 254
    1138:	3f 4f       	sbci	r19, 0xFF	; 255
    113a:	2c 0f       	add	r18, r28
    113c:	3d 1f       	adc	r19, r29
    113e:	df 01       	movw	r26, r30
    1140:	ac 1b       	sub	r26, r28
    1142:	bd 0b       	sbc	r27, r29
    1144:	91 91       	ld	r25, Z+
    1146:	a3 56       	subi	r26, 0x63	; 99
    1148:	be 4f       	sbci	r27, 0xFE	; 254
    114a:	9c 93       	st	X, r25
    114c:	e2 17       	cp	r30, r18
    114e:	f3 07       	cpc	r31, r19
    1150:	b1 f7       	brne	.-20     	; 0x113e <I2C_MT_TransmitData+0x34>
    1152:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <I2C_StatusFlags>
    1156:	85 ea       	ldi	r24, 0xA5	; 165
    1158:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    115c:	df 91       	pop	r29
    115e:	cf 91       	pop	r28
    1160:	08 95       	ret

00001162 <I2C_MR_ReceiveData>:
    1162:	dc 01       	movw	r26, r24
    1164:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1168:	90 fd       	sbrc	r25, 0
    116a:	fc cf       	rjmp	.-8      	; 0x1164 <I2C_MR_ReceiveData+0x2>
    116c:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <I2C_StatusFlags>
    1170:	80 ff       	sbrs	r24, 0
    1172:	13 c0       	rjmp	.+38     	; 0x119a <I2C_MR_ReceiveData+0x38>
    1174:	66 23       	and	r22, r22
    1176:	89 f0       	breq	.+34     	; 0x119a <I2C_MR_ReceiveData+0x38>
    1178:	91 e0       	ldi	r25, 0x01	; 1
    117a:	29 2f       	mov	r18, r25
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	f9 01       	movw	r30, r18
    1180:	e3 57       	subi	r30, 0x73	; 115
    1182:	fe 4f       	sbci	r31, 0xFE	; 254
    1184:	40 81       	ld	r20, Z
    1186:	2a 0f       	add	r18, r26
    1188:	3b 1f       	adc	r19, r27
    118a:	f9 01       	movw	r30, r18
    118c:	31 97       	sbiw	r30, 0x01	; 1
    118e:	40 83       	st	Z, r20
    1190:	9f 5f       	subi	r25, 0xFF	; 255
    1192:	69 17       	cp	r22, r25
    1194:	90 f7       	brcc	.-28     	; 0x117a <I2C_MR_ReceiveData+0x18>
    1196:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <I2C_StatusFlags>
    119a:	81 70       	andi	r24, 0x01	; 1
    119c:	08 95       	ret

0000119e <__vector_24>:

ISR (TWI0_vect)
{
    119e:	1f 92       	push	r1
    11a0:	0f 92       	push	r0
    11a2:	0f b6       	in	r0, 0x3f	; 63
    11a4:	0f 92       	push	r0
    11a6:	11 24       	eor	r1, r1
    11a8:	8f 93       	push	r24
    11aa:	9f 93       	push	r25
    11ac:	ef 93       	push	r30
    11ae:	ff 93       	push	r31
	static uint8_t bufferPointer;
	
	switch(TWSR0 & I2C_STATUS_MASK)
    11b0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    11b4:	88 7f       	andi	r24, 0xF8	; 248
    11b6:	80 33       	cpi	r24, 0x30	; 48
    11b8:	09 f4       	brne	.+2      	; 0x11bc <__vector_24+0x1e>
    11ba:	5d c0       	rjmp	.+186    	; 0x1276 <__vector_24+0xd8>
    11bc:	38 f1       	brcs	.+78     	; 0x120c <__vector_24+0x6e>
    11be:	88 34       	cpi	r24, 0x48	; 72
    11c0:	a1 f1       	breq	.+104    	; 0x122a <__vector_24+0x8c>
    11c2:	a0 f0       	brcs	.+40     	; 0x11ec <__vector_24+0x4e>
    11c4:	88 35       	cpi	r24, 0x58	; 88
    11c6:	61 f1       	breq	.+88     	; 0x1220 <__vector_24+0x82>
    11c8:	88 3f       	cpi	r24, 0xF8	; 248
    11ca:	09 f4       	brne	.+2      	; 0x11ce <__vector_24+0x30>
    11cc:	58 c0       	rjmp	.+176    	; 0x127e <__vector_24+0xe0>
    11ce:	80 35       	cpi	r24, 0x50	; 80
    11d0:	79 f5       	brne	.+94     	; 0x1230 <__vector_24+0x92>
			I2C_Start();
			
			break;
		}

        case MR_DATA_ACK:   I2C_ReceiveBuffer[bufferPointer++] = TWDR0;
    11d2:	e0 91 8b 01 	lds	r30, 0x018B	; 0x80018b <bufferPointer.2698>
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	8e 0f       	add	r24, r30
    11da:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <bufferPointer.2698>
    11de:	f0 e0       	ldi	r31, 0x00	; 0
    11e0:	90 91 bb 00 	lds	r25, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    11e4:	e3 57       	subi	r30, 0x73	; 115
    11e6:	fe 4f       	sbci	r31, 0xFE	; 254
    11e8:	90 83       	st	Z, r25
    11ea:	07 c0       	rjmp	.+14     	; 0x11fa <__vector_24+0x5c>

ISR (TWI0_vect)
{
	static uint8_t bufferPointer;
	
	switch(TWSR0 & I2C_STATUS_MASK)
    11ec:	88 33       	cpi	r24, 0x38	; 56
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <__vector_24+0x54>
    11f0:	42 c0       	rjmp	.+132    	; 0x1276 <__vector_24+0xd8>
    11f2:	80 34       	cpi	r24, 0x40	; 64
    11f4:	e9 f4       	brne	.+58     	; 0x1230 <__vector_24+0x92>
    11f6:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <bufferPointer.2698>
		}

        case MR_DATA_ACK:   I2C_ReceiveBuffer[bufferPointer++] = TWDR0;
        case MR_SLA_ACK:
        {
            if (bufferPointer < I2C_MessageSize)
    11fa:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <I2C_MessageSize>
    11fe:	89 17       	cp	r24, r25
    1200:	08 f0       	brcs	.+2      	; 0x1204 <__vector_24+0x66>
    1202:	41 c0       	rjmp	.+130    	; 0x1286 <__vector_24+0xe8>
            {
                TWCR0 =	(1 << TWEN) |															// 
    1204:	85 ec       	ldi	r24, 0xC5	; 197
    1206:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    120a:	12 c0       	rjmp	.+36     	; 0x1230 <__vector_24+0x92>

ISR (TWI0_vect)
{
	static uint8_t bufferPointer;
	
	switch(TWSR0 & I2C_STATUS_MASK)
    120c:	80 31       	cpi	r24, 0x10	; 16
    120e:	09 f4       	brne	.+2      	; 0x1212 <__vector_24+0x74>
    1210:	40 c0       	rjmp	.+128    	; 0x1292 <__vector_24+0xf4>
    1212:	b8 f4       	brcc	.+46     	; 0x1242 <__vector_24+0xa4>
    1214:	81 11       	cpse	r24, r1
    1216:	3b c0       	rjmp	.+118    	; 0x128e <__vector_24+0xf0>
			(0 << TWWC);															//	Clear Write Collision flag
}

void I2C_Stop (void)
{
	TWCR0 =	(1 << TWEN) |															// 
    1218:	85 e9       	ldi	r24, 0x95	; 149
    121a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    121e:	08 c0       	rjmp	.+16     	; 0x1230 <__vector_24+0x92>
		
		case MR_DATA_NACK:
		{
			//  Send stop/start or stop followed by a start
			//I2C_ReceiveBuffer[bufferPointer++] = TWDR0;	//???????????????????
			I2C_StatusFlags.transfer = 1;
    1220:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <I2C_StatusFlags>
    1224:	81 60       	ori	r24, 0x01	; 1
    1226:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <I2C_StatusFlags>
			TWCR0 =  (1 << TWEN) |													// Enable TWI-interface and release TWI pins.
    122a:	84 e9       	ldi	r24, 0x94	; 148
    122c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
			break;
		}

		default:    break;
	}
}
    1230:	ff 91       	pop	r31
    1232:	ef 91       	pop	r30
    1234:	9f 91       	pop	r25
    1236:	8f 91       	pop	r24
    1238:	0f 90       	pop	r0
    123a:	0f be       	out	0x3f, r0	; 63
    123c:	0f 90       	pop	r0
    123e:	1f 90       	pop	r1
    1240:	18 95       	reti

ISR (TWI0_vect)
{
	static uint8_t bufferPointer;
	
	switch(TWSR0 & I2C_STATUS_MASK)
    1242:	80 32       	cpi	r24, 0x20	; 32
    1244:	c1 f0       	breq	.+48     	; 0x1276 <__vector_24+0xd8>
    1246:	88 32       	cpi	r24, 0x28	; 40
    1248:	11 f0       	breq	.+4      	; 0x124e <__vector_24+0xb0>
    124a:	88 31       	cpi	r24, 0x18	; 24
    124c:	89 f7       	brne	.-30     	; 0x1230 <__vector_24+0x92>
    124e:	e0 91 8b 01 	lds	r30, 0x018B	; 0x80018b <bufferPointer.2698>
		case I2C_START:
		case I2C_REPEATED_START:	bufferPointer = 0;									//	
		case MT_SLA_ACK:
		case MT_DATA_ACK:
		{
			if (bufferPointer < I2C_MessageSize)
    1252:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <I2C_MessageSize>
    1256:	e8 17       	cp	r30, r24
    1258:	18 f7       	brcc	.-58     	; 0x1220 <__vector_24+0x82>
			{
				TWDR0 = I2C_TransmitBuffer[bufferPointer++];
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	8e 0f       	add	r24, r30
    125e:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <bufferPointer.2698>
    1262:	f0 e0       	ldi	r31, 0x00	; 0
    1264:	e3 56       	subi	r30, 0x63	; 99
    1266:	fe 4f       	sbci	r31, 0xFE	; 254
    1268:	80 81       	ld	r24, Z
    126a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
				TWCR0 =	(1 << TWEN) |												// 
    126e:	85 e8       	ldi	r24, 0x85	; 133
    1270:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1274:	dd cf       	rjmp	.-70     	; 0x1230 <__vector_24+0x92>
			(0 << TWWC);															//	Clear Write Collision flag
}

void I2C_Start (void)
{
	TWCR0 =	(1 << TWEN) |															//	Enable I2C
    1276:	85 ea       	ldi	r24, 0xA5	; 165
    1278:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    127c:	d9 cf       	rjmp	.-78     	; 0x1230 <__vector_24+0x92>
			break;
		}

		case I2C_NO_RELEVANT_STATE_INFORMATION:
		{
			TWCR0 =	(1 << TWEN) |															//
    127e:	84 e0       	ldi	r24, 0x04	; 4
    1280:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
			break;
		}

		default:    break;
	}
}
    1284:	d5 cf       	rjmp	.-86     	; 0x1230 <__vector_24+0x92>
			            (1 << TWEA) | (0 << TWSTA) | (0 << TWSTO) |								// 
			            (0 << TWWC);															//	Clear Write Collision flag
            }
            else
            {
                TWCR0 =	(1 << TWEN) |															// 
    1286:	85 e8       	ldi	r24, 0x85	; 133
    1288:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    128c:	d1 cf       	rjmp	.-94     	; 0x1230 <__vector_24+0x92>

ISR (TWI0_vect)
{
	static uint8_t bufferPointer;
	
	switch(TWSR0 & I2C_STATUS_MASK)
    128e:	88 30       	cpi	r24, 0x08	; 8
    1290:	79 f6       	brne	.-98     	; 0x1230 <__vector_24+0x92>
	{
		case I2C_START:
		case I2C_REPEATED_START:	bufferPointer = 0;									//	
    1292:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <bufferPointer.2698>
    1296:	e0 e0       	ldi	r30, 0x00	; 0
    1298:	dc cf       	rjmp	.-72     	; 0x1252 <__vector_24+0xb4>

0000129a <LCD_Nokia_PutPixel.part.0>:
{
	LCD_Nokia_DrawRectangle(xLeft, yHigh, xRight, yLow, 1);
}

void LCD_Nokia_DrawUnfilledCircle (uint8_t xO, uint8_t yO, uint8_t radius)
{
    129a:	96 2f       	mov	r25, r22
    129c:	96 95       	lsr	r25
    129e:	96 95       	lsr	r25
    12a0:	96 95       	lsr	r25
    12a2:	e8 2f       	mov	r30, r24
    12a4:	f0 e0       	ldi	r31, 0x00	; 0
    12a6:	84 e5       	ldi	r24, 0x54	; 84
    12a8:	98 9f       	mul	r25, r24
    12aa:	e0 0d       	add	r30, r0
    12ac:	f1 1d       	adc	r31, r1
    12ae:	11 24       	eor	r1, r1
    12b0:	e0 55       	subi	r30, 0x50	; 80
    12b2:	fe 4f       	sbci	r31, 0xFE	; 254
    12b4:	67 70       	andi	r22, 0x07	; 7
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	01 c0       	rjmp	.+2      	; 0x12be <LCD_Nokia_PutPixel.part.0+0x24>
    12bc:	88 0f       	add	r24, r24
    12be:	6a 95       	dec	r22
    12c0:	ea f7       	brpl	.-6      	; 0x12bc <LCD_Nokia_PutPixel.part.0+0x22>
    12c2:	92 81       	ldd	r25, Z+2	; 0x02
    12c4:	89 2b       	or	r24, r25
    12c6:	82 83       	std	Z+2, r24	; 0x02
    12c8:	08 95       	ret

000012ca <LCD_Nokia_PutByte>:
    12ca:	61 11       	cpse	r22, r1
    12cc:	06 c0       	rjmp	.+12     	; 0x12da <LCD_Nokia_PutByte+0x10>
    12ce:	28 98       	cbi	0x05, 0	; 5
    12d0:	2a 98       	cbi	0x05, 2	; 5
    12d2:	0e 94 e7 10 	call	0x21ce	; 0x21ce <SPI_PutByte>
    12d6:	2a 9a       	sbi	0x05, 2	; 5
    12d8:	08 95       	ret
    12da:	28 9a       	sbi	0x05, 0	; 5
    12dc:	2a 98       	cbi	0x05, 2	; 5
    12de:	0e 94 e7 10 	call	0x21ce	; 0x21ce <SPI_PutByte>
    12e2:	2a 9a       	sbi	0x05, 2	; 5
    12e4:	08 95       	ret

000012e6 <LCD_Nokia_ClearBuffer>:
    12e6:	e2 eb       	ldi	r30, 0xB2	; 178
    12e8:	f1 e0       	ldi	r31, 0x01	; 1
    12ea:	11 92       	st	Z+, r1
    12ec:	83 e0       	ldi	r24, 0x03	; 3
    12ee:	ea 3a       	cpi	r30, 0xAA	; 170
    12f0:	f8 07       	cpc	r31, r24
    12f2:	d9 f7       	brne	.-10     	; 0x12ea <LCD_Nokia_ClearBuffer+0x4>
    12f4:	08 95       	ret

000012f6 <LCD_Nokia_Init>:
    12f6:	cf 93       	push	r28
    12f8:	df 93       	push	r29
    12fa:	84 b1       	in	r24, 0x04	; 4
    12fc:	83 60       	ori	r24, 0x03	; 3
    12fe:	84 b9       	out	0x04, r24	; 4
    1300:	56 9a       	sbi	0x0a, 6	; 10
    1302:	29 9a       	sbi	0x05, 1	; 5
    1304:	2a 9a       	sbi	0x05, 2	; 5
    1306:	29 98       	cbi	0x05, 1	; 5
    1308:	83 ec       	ldi	r24, 0xC3	; 195
    130a:	99 e0       	ldi	r25, 0x09	; 9
    130c:	01 97       	sbiw	r24, 0x01	; 1
    130e:	f1 f7       	brne	.-4      	; 0x130c <LCD_Nokia_Init+0x16>
    1310:	00 c0       	rjmp	.+0      	; 0x1312 <LCD_Nokia_Init+0x1c>
    1312:	00 00       	nop
    1314:	29 9a       	sbi	0x05, 1	; 5
    1316:	60 e0       	ldi	r22, 0x00	; 0
    1318:	81 e2       	ldi	r24, 0x21	; 33
    131a:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    131e:	60 e0       	ldi	r22, 0x00	; 0
    1320:	80 e9       	ldi	r24, 0x90	; 144
    1322:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    1326:	60 e0       	ldi	r22, 0x00	; 0
    1328:	87 e0       	ldi	r24, 0x07	; 7
    132a:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    132e:	60 e0       	ldi	r22, 0x00	; 0
    1330:	81 e1       	ldi	r24, 0x11	; 17
    1332:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	80 e2       	ldi	r24, 0x20	; 32
    133a:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    133e:	60 e0       	ldi	r22, 0x00	; 0
    1340:	8c e0       	ldi	r24, 0x0C	; 12
    1342:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    1346:	c8 ef       	ldi	r28, 0xF8	; 248
    1348:	d1 e0       	ldi	r29, 0x01	; 1
    134a:	61 e0       	ldi	r22, 0x01	; 1
    134c:	80 e0       	ldi	r24, 0x00	; 0
    134e:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    1352:	21 97       	sbiw	r28, 0x01	; 1
    1354:	d1 f7       	brne	.-12     	; 0x134a <LCD_Nokia_Init+0x54>
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	08 95       	ret

0000135c <LCD_Nokia_SetPosition>:
    135c:	cf 93       	push	r28
    135e:	c6 2f       	mov	r28, r22
    1360:	2a 98       	cbi	0x05, 2	; 5
    1362:	60 e0       	ldi	r22, 0x00	; 0
    1364:	80 68       	ori	r24, 0x80	; 128
    1366:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    136a:	60 e0       	ldi	r22, 0x00	; 0
    136c:	8c 2f       	mov	r24, r28
    136e:	80 64       	ori	r24, 0x40	; 64
    1370:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
    1374:	2a 9a       	sbi	0x05, 2	; 5
    1376:	cf 91       	pop	r28
    1378:	08 95       	ret

0000137a <LCD_Nokia_SetPixelPosition>:
    137a:	e0 eb       	ldi	r30, 0xB0	; 176
    137c:	f1 e0       	ldi	r31, 0x01	; 1
    137e:	80 83       	st	Z, r24
    1380:	61 83       	std	Z+1, r22	; 0x01
    1382:	08 95       	ret

00001384 <LCD_Nokia_PutSmallChar>:
    1384:	df 92       	push	r13
    1386:	ef 92       	push	r14
    1388:	ff 92       	push	r15
    138a:	0f 93       	push	r16
    138c:	1f 93       	push	r17
    138e:	cf 93       	push	r28
    1390:	df 93       	push	r29
    1392:	28 2f       	mov	r18, r24
    1394:	65 30       	cpi	r22, 0x05	; 5
    1396:	09 f4       	brne	.+2      	; 0x139a <LCD_Nokia_PutSmallChar+0x16>
    1398:	81 c0       	rjmp	.+258    	; 0x149c <LCD_Nokia_PutSmallChar+0x118>
    139a:	66 30       	cpi	r22, 0x06	; 6
    139c:	09 f0       	breq	.+2      	; 0x13a0 <LCD_Nokia_PutSmallChar+0x1c>
    139e:	68 c0       	rjmp	.+208    	; 0x1470 <LCD_Nokia_PutSmallChar+0xec>
    13a0:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    13a4:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <nokiaDisplayPixels>
    13a8:	02 2e       	mov	r0, r18
    13aa:	00 0c       	add	r0, r0
    13ac:	33 0b       	sbc	r19, r19
    13ae:	20 52       	subi	r18, 0x20	; 32
    13b0:	31 09       	sbc	r19, r1
    13b2:	e9 01       	movw	r28, r18
    13b4:	cc 0f       	add	r28, r28
    13b6:	dd 1f       	adc	r29, r29
    13b8:	c2 0f       	add	r28, r18
    13ba:	d3 1f       	adc	r29, r19
    13bc:	cc 0f       	add	r28, r28
    13be:	dd 1f       	adc	r29, r29
    13c0:	ca 5f       	subi	r28, 0xFA	; 250
    13c2:	dc 4f       	sbci	r29, 0xFC	; 252
    13c4:	36 e0       	ldi	r19, 0x06	; 6
    13c6:	d3 2e       	mov	r13, r19
    13c8:	01 e0       	ldi	r16, 0x01	; 1
    13ca:	10 e0       	ldi	r17, 0x00	; 0
    13cc:	fe 01       	movw	r30, r28
    13ce:	24 91       	lpm	r18, Z
    13d0:	20 93 af 01 	sts	0x01AF, r18	; 0x8001af <byte.2713>
    13d4:	e1 2c       	mov	r14, r1
    13d6:	f1 2c       	mov	r15, r1
    13d8:	26 c0       	rjmp	.+76     	; 0x1426 <LCD_Nokia_PutSmallChar+0xa2>
    13da:	41 e0       	ldi	r20, 0x01	; 1
    13dc:	46 0f       	add	r20, r22
    13de:	40 93 b1 01 	sts	0x01B1, r20	; 0x8001b1 <nokiaDisplayPixels+0x1>
    13e2:	96 2f       	mov	r25, r22
    13e4:	96 95       	lsr	r25
    13e6:	96 95       	lsr	r25
    13e8:	96 95       	lsr	r25
    13ea:	e8 2f       	mov	r30, r24
    13ec:	f0 e0       	ldi	r31, 0x00	; 0
    13ee:	24 e5       	ldi	r18, 0x54	; 84
    13f0:	92 9f       	mul	r25, r18
    13f2:	e0 0d       	add	r30, r0
    13f4:	f1 1d       	adc	r31, r1
    13f6:	11 24       	eor	r1, r1
    13f8:	e0 55       	subi	r30, 0x50	; 80
    13fa:	fe 4f       	sbci	r31, 0xFE	; 254
    13fc:	67 70       	andi	r22, 0x07	; 7
    13fe:	98 01       	movw	r18, r16
    1400:	01 c0       	rjmp	.+2      	; 0x1404 <LCD_Nokia_PutSmallChar+0x80>
    1402:	22 0f       	add	r18, r18
    1404:	6a 95       	dec	r22
    1406:	ea f7       	brpl	.-6      	; 0x1402 <LCD_Nokia_PutSmallChar+0x7e>
    1408:	92 2f       	mov	r25, r18
    140a:	90 95       	com	r25
    140c:	22 81       	ldd	r18, Z+2	; 0x02
    140e:	92 23       	and	r25, r18
    1410:	92 83       	std	Z+2, r25	; 0x02
    1412:	64 2f       	mov	r22, r20
    1414:	9f ef       	ldi	r25, 0xFF	; 255
    1416:	e9 1a       	sub	r14, r25
    1418:	f9 0a       	sbc	r15, r25
    141a:	e8 e0       	ldi	r30, 0x08	; 8
    141c:	ee 16       	cp	r14, r30
    141e:	f1 04       	cpc	r15, r1
    1420:	e1 f0       	breq	.+56     	; 0x145a <LCD_Nokia_PutSmallChar+0xd6>
    1422:	20 91 af 01 	lds	r18, 0x01AF	; 0x8001af <byte.2713>
    1426:	30 e0       	ldi	r19, 0x00	; 0
    1428:	0e 2c       	mov	r0, r14
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <LCD_Nokia_PutSmallChar+0xac>
    142c:	35 95       	asr	r19
    142e:	27 95       	ror	r18
    1430:	0a 94       	dec	r0
    1432:	e2 f7       	brpl	.-8      	; 0x142c <LCD_Nokia_PutSmallChar+0xa8>
    1434:	20 ff       	sbrs	r18, 0
    1436:	d1 cf       	rjmp	.-94     	; 0x13da <LCD_Nokia_PutSmallChar+0x56>
    1438:	91 e0       	ldi	r25, 0x01	; 1
    143a:	96 0f       	add	r25, r22
    143c:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1440:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    1444:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <nokiaDisplayPixels>
    1448:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    144c:	9f ef       	ldi	r25, 0xFF	; 255
    144e:	e9 1a       	sub	r14, r25
    1450:	f9 0a       	sbc	r15, r25
    1452:	e8 e0       	ldi	r30, 0x08	; 8
    1454:	ee 16       	cp	r14, r30
    1456:	f1 04       	cpc	r15, r1
    1458:	21 f7       	brne	.-56     	; 0x1422 <LCD_Nokia_PutSmallChar+0x9e>
    145a:	8f 5f       	subi	r24, 0xFF	; 255
    145c:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <nokiaDisplayPixels>
    1460:	68 50       	subi	r22, 0x08	; 8
    1462:	60 93 b1 01 	sts	0x01B1, r22	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1466:	da 94       	dec	r13
    1468:	21 96       	adiw	r28, 0x01	; 1
    146a:	d1 10       	cpse	r13, r1
    146c:	af cf       	rjmp	.-162    	; 0x13cc <LCD_Nokia_PutSmallChar+0x48>
    146e:	02 c0       	rjmp	.+4      	; 0x1474 <LCD_Nokia_PutSmallChar+0xf0>
    1470:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <nokiaDisplayPixels>
    1474:	80 35       	cpi	r24, 0x50	; 80
    1476:	50 f0       	brcs	.+20     	; 0x148c <LCD_Nokia_PutSmallChar+0x108>
    1478:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <nokiaDisplayPixels>
    147c:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1480:	88 5f       	subi	r24, 0xF8	; 248
    1482:	80 33       	cpi	r24, 0x30	; 48
    1484:	08 f4       	brcc	.+2      	; 0x1488 <LCD_Nokia_PutSmallChar+0x104>
    1486:	72 c0       	rjmp	.+228    	; 0x156c <LCD_Nokia_PutSmallChar+0x1e8>
    1488:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    148c:	df 91       	pop	r29
    148e:	cf 91       	pop	r28
    1490:	1f 91       	pop	r17
    1492:	0f 91       	pop	r16
    1494:	ff 90       	pop	r15
    1496:	ef 90       	pop	r14
    1498:	df 90       	pop	r13
    149a:	08 95       	ret
    149c:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    14a0:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <nokiaDisplayPixels>
    14a4:	02 2e       	mov	r0, r18
    14a6:	00 0c       	add	r0, r0
    14a8:	33 0b       	sbc	r19, r19
    14aa:	20 52       	subi	r18, 0x20	; 32
    14ac:	31 09       	sbc	r19, r1
    14ae:	e9 01       	movw	r28, r18
    14b0:	cc 0f       	add	r28, r28
    14b2:	dd 1f       	adc	r29, r29
    14b4:	cc 0f       	add	r28, r28
    14b6:	dd 1f       	adc	r29, r29
    14b8:	c2 0f       	add	r28, r18
    14ba:	d3 1f       	adc	r29, r19
    14bc:	c0 5c       	subi	r28, 0xC0	; 192
    14be:	da 4f       	sbci	r29, 0xFA	; 250
    14c0:	55 e0       	ldi	r21, 0x05	; 5
    14c2:	d5 2e       	mov	r13, r21
    14c4:	01 e0       	ldi	r16, 0x01	; 1
    14c6:	10 e0       	ldi	r17, 0x00	; 0
    14c8:	fe 01       	movw	r30, r28
    14ca:	24 91       	lpm	r18, Z
    14cc:	20 93 af 01 	sts	0x01AF, r18	; 0x8001af <byte.2713>
    14d0:	e1 2c       	mov	r14, r1
    14d2:	f1 2c       	mov	r15, r1
    14d4:	26 c0       	rjmp	.+76     	; 0x1522 <LCD_Nokia_PutSmallChar+0x19e>
    14d6:	41 e0       	ldi	r20, 0x01	; 1
    14d8:	46 0f       	add	r20, r22
    14da:	40 93 b1 01 	sts	0x01B1, r20	; 0x8001b1 <nokiaDisplayPixels+0x1>
    14de:	96 2f       	mov	r25, r22
    14e0:	96 95       	lsr	r25
    14e2:	96 95       	lsr	r25
    14e4:	96 95       	lsr	r25
    14e6:	e8 2f       	mov	r30, r24
    14e8:	f0 e0       	ldi	r31, 0x00	; 0
    14ea:	24 e5       	ldi	r18, 0x54	; 84
    14ec:	92 9f       	mul	r25, r18
    14ee:	e0 0d       	add	r30, r0
    14f0:	f1 1d       	adc	r31, r1
    14f2:	11 24       	eor	r1, r1
    14f4:	e0 55       	subi	r30, 0x50	; 80
    14f6:	fe 4f       	sbci	r31, 0xFE	; 254
    14f8:	67 70       	andi	r22, 0x07	; 7
    14fa:	98 01       	movw	r18, r16
    14fc:	01 c0       	rjmp	.+2      	; 0x1500 <LCD_Nokia_PutSmallChar+0x17c>
    14fe:	22 0f       	add	r18, r18
    1500:	6a 95       	dec	r22
    1502:	ea f7       	brpl	.-6      	; 0x14fe <LCD_Nokia_PutSmallChar+0x17a>
    1504:	92 2f       	mov	r25, r18
    1506:	90 95       	com	r25
    1508:	22 81       	ldd	r18, Z+2	; 0x02
    150a:	92 23       	and	r25, r18
    150c:	92 83       	std	Z+2, r25	; 0x02
    150e:	64 2f       	mov	r22, r20
    1510:	9f ef       	ldi	r25, 0xFF	; 255
    1512:	e9 1a       	sub	r14, r25
    1514:	f9 0a       	sbc	r15, r25
    1516:	e8 e0       	ldi	r30, 0x08	; 8
    1518:	ee 16       	cp	r14, r30
    151a:	f1 04       	cpc	r15, r1
    151c:	e1 f0       	breq	.+56     	; 0x1556 <LCD_Nokia_PutSmallChar+0x1d2>
    151e:	20 91 af 01 	lds	r18, 0x01AF	; 0x8001af <byte.2713>
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	0e 2c       	mov	r0, r14
    1526:	02 c0       	rjmp	.+4      	; 0x152c <LCD_Nokia_PutSmallChar+0x1a8>
    1528:	35 95       	asr	r19
    152a:	27 95       	ror	r18
    152c:	0a 94       	dec	r0
    152e:	e2 f7       	brpl	.-8      	; 0x1528 <LCD_Nokia_PutSmallChar+0x1a4>
    1530:	20 ff       	sbrs	r18, 0
    1532:	d1 cf       	rjmp	.-94     	; 0x14d6 <LCD_Nokia_PutSmallChar+0x152>
    1534:	91 e0       	ldi	r25, 0x01	; 1
    1536:	96 0f       	add	r25, r22
    1538:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <nokiaDisplayPixels+0x1>
    153c:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    1540:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <nokiaDisplayPixels>
    1544:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1548:	9f ef       	ldi	r25, 0xFF	; 255
    154a:	e9 1a       	sub	r14, r25
    154c:	f9 0a       	sbc	r15, r25
    154e:	e8 e0       	ldi	r30, 0x08	; 8
    1550:	ee 16       	cp	r14, r30
    1552:	f1 04       	cpc	r15, r1
    1554:	21 f7       	brne	.-56     	; 0x151e <LCD_Nokia_PutSmallChar+0x19a>
    1556:	8f 5f       	subi	r24, 0xFF	; 255
    1558:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <nokiaDisplayPixels>
    155c:	68 50       	subi	r22, 0x08	; 8
    155e:	60 93 b1 01 	sts	0x01B1, r22	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1562:	da 94       	dec	r13
    1564:	21 96       	adiw	r28, 0x01	; 1
    1566:	d1 10       	cpse	r13, r1
    1568:	af cf       	rjmp	.-162    	; 0x14c8 <LCD_Nokia_PutSmallChar+0x144>
    156a:	84 cf       	rjmp	.-248    	; 0x1474 <LCD_Nokia_PutSmallChar+0xf0>
    156c:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	1f 91       	pop	r17
    1576:	0f 91       	pop	r16
    1578:	ff 90       	pop	r15
    157a:	ef 90       	pop	r14
    157c:	df 90       	pop	r13
    157e:	08 95       	ret

00001580 <LCD_Nokia_Put5Char>:
    1580:	65 e0       	ldi	r22, 0x05	; 5
    1582:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>

00001586 <LCD_Nokia_Put6Char>:
    1586:	66 e0       	ldi	r22, 0x06	; 6
    1588:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>

0000158c <LCD_Nokia_Send5CharString_P>:
    158c:	cf 93       	push	r28
    158e:	df 93       	push	r29
    1590:	ec 01       	movw	r28, r24
    1592:	fc 01       	movw	r30, r24
    1594:	84 91       	lpm	r24, Z
    1596:	88 23       	and	r24, r24
    1598:	51 f0       	breq	.+20     	; 0x15ae <LCD_Nokia_Send5CharString_P+0x22>
    159a:	fe 01       	movw	r30, r28
    159c:	21 96       	adiw	r28, 0x01	; 1
    159e:	84 91       	lpm	r24, Z
    15a0:	65 e0       	ldi	r22, 0x05	; 5
    15a2:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    15a6:	fe 01       	movw	r30, r28
    15a8:	84 91       	lpm	r24, Z
    15aa:	81 11       	cpse	r24, r1
    15ac:	f6 cf       	rjmp	.-20     	; 0x159a <LCD_Nokia_Send5CharString_P+0xe>
    15ae:	df 91       	pop	r29
    15b0:	cf 91       	pop	r28
    15b2:	08 95       	ret

000015b4 <LCD_Nokia_Send6CharString>:
    15b4:	cf 93       	push	r28
    15b6:	df 93       	push	r29
    15b8:	ec 01       	movw	r28, r24
    15ba:	88 81       	ld	r24, Y
    15bc:	88 23       	and	r24, r24
    15be:	39 f0       	breq	.+14     	; 0x15ce <LCD_Nokia_Send6CharString+0x1a>
    15c0:	21 96       	adiw	r28, 0x01	; 1
    15c2:	66 e0       	ldi	r22, 0x06	; 6
    15c4:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    15c8:	89 91       	ld	r24, Y+
    15ca:	81 11       	cpse	r24, r1
    15cc:	fa cf       	rjmp	.-12     	; 0x15c2 <LCD_Nokia_Send6CharString+0xe>
    15ce:	df 91       	pop	r29
    15d0:	cf 91       	pop	r28
    15d2:	08 95       	ret

000015d4 <LCD_Nokia_Send6CharString_P>:
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
    15d8:	ec 01       	movw	r28, r24
    15da:	fc 01       	movw	r30, r24
    15dc:	84 91       	lpm	r24, Z
    15de:	88 23       	and	r24, r24
    15e0:	51 f0       	breq	.+20     	; 0x15f6 <LCD_Nokia_Send6CharString_P+0x22>
    15e2:	fe 01       	movw	r30, r28
    15e4:	21 96       	adiw	r28, 0x01	; 1
    15e6:	84 91       	lpm	r24, Z
    15e8:	66 e0       	ldi	r22, 0x06	; 6
    15ea:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    15ee:	fe 01       	movw	r30, r28
    15f0:	84 91       	lpm	r24, Z
    15f2:	81 11       	cpse	r24, r1
    15f4:	f6 cf       	rjmp	.-20     	; 0x15e2 <LCD_Nokia_Send6CharString_P+0xe>
    15f6:	df 91       	pop	r29
    15f8:	cf 91       	pop	r28
    15fa:	08 95       	ret

000015fc <LCD_Nokia_Put12Char>:
    15fc:	bf 92       	push	r11
    15fe:	cf 92       	push	r12
    1600:	df 92       	push	r13
    1602:	ef 92       	push	r14
    1604:	ff 92       	push	r15
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	cf 93       	push	r28
    160c:	df 93       	push	r29
    160e:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1612:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <nokiaDisplayPixels>
    1616:	48 e1       	ldi	r20, 0x18	; 24
    1618:	84 02       	muls	r24, r20
    161a:	90 01       	movw	r18, r0
    161c:	11 24       	eor	r1, r1
    161e:	f9 01       	movw	r30, r18
    1620:	e6 57       	subi	r30, 0x76	; 118
    1622:	f2 40       	sbci	r31, 0x02	; 2
    1624:	6f 01       	movw	r12, r30
    1626:	82 e0       	ldi	r24, 0x02	; 2
    1628:	b8 2e       	mov	r11, r24
    162a:	01 e0       	ldi	r16, 0x01	; 1
    162c:	10 e0       	ldi	r17, 0x00	; 0
    162e:	76 01       	movw	r14, r12
    1630:	8c e0       	ldi	r24, 0x0C	; 12
    1632:	e8 1a       	sub	r14, r24
    1634:	f1 08       	sbc	r15, r1
    1636:	39 2f       	mov	r19, r25
    1638:	96 2f       	mov	r25, r22
    163a:	f7 01       	movw	r30, r14
    163c:	24 91       	lpm	r18, Z
    163e:	20 93 ae 01 	sts	0x01AE, r18	; 0x8001ae <byte.2823>
    1642:	83 2f       	mov	r24, r19
    1644:	69 2f       	mov	r22, r25
    1646:	c0 e0       	ldi	r28, 0x00	; 0
    1648:	d0 e0       	ldi	r29, 0x00	; 0
    164a:	23 c0       	rjmp	.+70     	; 0x1692 <LCD_Nokia_Put12Char+0x96>
    164c:	41 e0       	ldi	r20, 0x01	; 1
    164e:	46 0f       	add	r20, r22
    1650:	40 93 b1 01 	sts	0x01B1, r20	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1654:	96 2f       	mov	r25, r22
    1656:	96 95       	lsr	r25
    1658:	96 95       	lsr	r25
    165a:	96 95       	lsr	r25
    165c:	e8 2f       	mov	r30, r24
    165e:	f0 e0       	ldi	r31, 0x00	; 0
    1660:	24 e5       	ldi	r18, 0x54	; 84
    1662:	92 9f       	mul	r25, r18
    1664:	e0 0d       	add	r30, r0
    1666:	f1 1d       	adc	r31, r1
    1668:	11 24       	eor	r1, r1
    166a:	e0 55       	subi	r30, 0x50	; 80
    166c:	fe 4f       	sbci	r31, 0xFE	; 254
    166e:	67 70       	andi	r22, 0x07	; 7
    1670:	98 01       	movw	r18, r16
    1672:	01 c0       	rjmp	.+2      	; 0x1676 <LCD_Nokia_Put12Char+0x7a>
    1674:	22 0f       	add	r18, r18
    1676:	6a 95       	dec	r22
    1678:	ea f7       	brpl	.-6      	; 0x1674 <LCD_Nokia_Put12Char+0x78>
    167a:	92 2f       	mov	r25, r18
    167c:	90 95       	com	r25
    167e:	22 81       	ldd	r18, Z+2	; 0x02
    1680:	92 23       	and	r25, r18
    1682:	92 83       	std	Z+2, r25	; 0x02
    1684:	64 2f       	mov	r22, r20
    1686:	21 96       	adiw	r28, 0x01	; 1
    1688:	c8 30       	cpi	r28, 0x08	; 8
    168a:	d1 05       	cpc	r29, r1
    168c:	c9 f0       	breq	.+50     	; 0x16c0 <LCD_Nokia_Put12Char+0xc4>
    168e:	20 91 ae 01 	lds	r18, 0x01AE	; 0x8001ae <byte.2823>
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	0c 2e       	mov	r0, r28
    1696:	02 c0       	rjmp	.+4      	; 0x169c <LCD_Nokia_Put12Char+0xa0>
    1698:	35 95       	asr	r19
    169a:	27 95       	ror	r18
    169c:	0a 94       	dec	r0
    169e:	e2 f7       	brpl	.-8      	; 0x1698 <LCD_Nokia_Put12Char+0x9c>
    16a0:	20 ff       	sbrs	r18, 0
    16a2:	d4 cf       	rjmp	.-88     	; 0x164c <LCD_Nokia_Put12Char+0x50>
    16a4:	91 e0       	ldi	r25, 0x01	; 1
    16a6:	96 0f       	add	r25, r22
    16a8:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <nokiaDisplayPixels+0x1>
    16ac:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    16b0:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <nokiaDisplayPixels>
    16b4:	60 91 b1 01 	lds	r22, 0x01B1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    16b8:	21 96       	adiw	r28, 0x01	; 1
    16ba:	c8 30       	cpi	r28, 0x08	; 8
    16bc:	d1 05       	cpc	r29, r1
    16be:	39 f7       	brne	.-50     	; 0x168e <LCD_Nokia_Put12Char+0x92>
    16c0:	31 e0       	ldi	r19, 0x01	; 1
    16c2:	38 0f       	add	r19, r24
    16c4:	30 93 b0 01 	sts	0x01B0, r19	; 0x8001b0 <nokiaDisplayPixels>
    16c8:	98 ef       	ldi	r25, 0xF8	; 248
    16ca:	96 0f       	add	r25, r22
    16cc:	4f ef       	ldi	r20, 0xFF	; 255
    16ce:	e4 1a       	sub	r14, r20
    16d0:	f4 0a       	sbc	r15, r20
    16d2:	ec 14       	cp	r14, r12
    16d4:	fd 04       	cpc	r15, r13
    16d6:	09 f0       	breq	.+2      	; 0x16da <LCD_Nokia_Put12Char+0xde>
    16d8:	b0 cf       	rjmp	.-160    	; 0x163a <LCD_Nokia_Put12Char+0x3e>
    16da:	95 ef       	ldi	r25, 0xF5	; 245
    16dc:	98 0f       	add	r25, r24
    16de:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <nokiaDisplayPixels>
    16e2:	ba 94       	dec	r11
    16e4:	67 01       	movw	r12, r14
    16e6:	5c e0       	ldi	r21, 0x0C	; 12
    16e8:	c5 0e       	add	r12, r21
    16ea:	d1 1c       	adc	r13, r1
    16ec:	b1 10       	cpse	r11, r1
    16ee:	9f cf       	rjmp	.-194    	; 0x162e <LCD_Nokia_Put12Char+0x32>
    16f0:	30 93 b0 01 	sts	0x01B0, r19	; 0x8001b0 <nokiaDisplayPixels>
    16f4:	80 ef       	ldi	r24, 0xF0	; 240
    16f6:	86 0f       	add	r24, r22
    16f8:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <nokiaDisplayPixels+0x1>
    16fc:	33 35       	cpi	r19, 0x53	; 83
    16fe:	30 f0       	brcs	.+12     	; 0x170c <LCD_Nokia_Put12Char+0x110>
    1700:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <nokiaDisplayPixels>
    1704:	6f 32       	cpi	r22, 0x2F	; 47
    1706:	60 f0       	brcs	.+24     	; 0x1720 <LCD_Nokia_Put12Char+0x124>
    1708:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <nokiaDisplayPixels+0x1>
    170c:	df 91       	pop	r29
    170e:	cf 91       	pop	r28
    1710:	1f 91       	pop	r17
    1712:	0f 91       	pop	r16
    1714:	ff 90       	pop	r15
    1716:	ef 90       	pop	r14
    1718:	df 90       	pop	r13
    171a:	cf 90       	pop	r12
    171c:	bf 90       	pop	r11
    171e:	08 95       	ret
    1720:	60 93 b1 01 	sts	0x01B1, r22	; 0x8001b1 <nokiaDisplayPixels+0x1>
    1724:	f3 cf       	rjmp	.-26     	; 0x170c <LCD_Nokia_Put12Char+0x110>

00001726 <LCD_Nokia_Send12CharString_P>:
    1726:	cf 93       	push	r28
    1728:	df 93       	push	r29
    172a:	ec 01       	movw	r28, r24
    172c:	fc 01       	movw	r30, r24
    172e:	84 91       	lpm	r24, Z
    1730:	88 23       	and	r24, r24
    1732:	49 f0       	breq	.+18     	; 0x1746 <LCD_Nokia_Send12CharString_P+0x20>
    1734:	fe 01       	movw	r30, r28
    1736:	21 96       	adiw	r28, 0x01	; 1
    1738:	84 91       	lpm	r24, Z
    173a:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    173e:	fe 01       	movw	r30, r28
    1740:	84 91       	lpm	r24, Z
    1742:	81 11       	cpse	r24, r1
    1744:	f7 cf       	rjmp	.-18     	; 0x1734 <LCD_Nokia_Send12CharString_P+0xe>
    1746:	df 91       	pop	r29
    1748:	cf 91       	pop	r28
    174a:	08 95       	ret

0000174c <LCD_Nokia_SendInteger>:
    174c:	cf 92       	push	r12
    174e:	df 92       	push	r13
    1750:	ef 92       	push	r14
    1752:	ff 92       	push	r15
    1754:	cf 93       	push	r28
    1756:	df 93       	push	r29
    1758:	6b 01       	movw	r12, r22
    175a:	7c 01       	movw	r14, r24
    175c:	46 30       	cpi	r20, 0x06	; 6
    175e:	09 f4       	brne	.+2      	; 0x1762 <LCD_Nokia_SendInteger+0x16>
    1760:	b1 c0       	rjmp	.+354    	; 0x18c4 <LCD_Nokia_SendInteger+0x178>
    1762:	4c 30       	cpi	r20, 0x0C	; 12
    1764:	09 f4       	brne	.+2      	; 0x1768 <LCD_Nokia_SendInteger+0x1c>
    1766:	55 c0       	rjmp	.+170    	; 0x1812 <LCD_Nokia_SendInteger+0xc6>
    1768:	45 30       	cpi	r20, 0x05	; 5
    176a:	39 f0       	breq	.+14     	; 0x177a <LCD_Nokia_SendInteger+0x2e>
    176c:	df 91       	pop	r29
    176e:	cf 91       	pop	r28
    1770:	ff 90       	pop	r15
    1772:	ef 90       	pop	r14
    1774:	df 90       	pop	r13
    1776:	cf 90       	pop	r12
    1778:	08 95       	ret
    177a:	97 fd       	sbrc	r25, 7
    177c:	db c1       	rjmp	.+950    	; 0x1b34 <LCD_Nokia_SendInteger+0x3e8>
    177e:	d7 01       	movw	r26, r14
    1780:	c6 01       	movw	r24, r12
    1782:	0a 97       	sbiw	r24, 0x0a	; 10
    1784:	a1 09       	sbc	r26, r1
    1786:	b1 09       	sbc	r27, r1
    1788:	8a 35       	cpi	r24, 0x5A	; 90
    178a:	91 05       	cpc	r25, r1
    178c:	a1 05       	cpc	r26, r1
    178e:	b1 05       	cpc	r27, r1
    1790:	08 f4       	brcc	.+2      	; 0x1794 <LCD_Nokia_SendInteger+0x48>
    1792:	e8 c0       	rjmp	.+464    	; 0x1964 <LCD_Nokia_SendInteger+0x218>
    1794:	81 e0       	ldi	r24, 0x01	; 1
    1796:	9a e0       	ldi	r25, 0x0A	; 10
    1798:	c9 16       	cp	r12, r25
    179a:	d1 04       	cpc	r13, r1
    179c:	e1 04       	cpc	r14, r1
    179e:	f1 04       	cpc	r15, r1
    17a0:	0c f0       	brlt	.+2      	; 0x17a4 <LCD_Nokia_SendInteger+0x58>
    17a2:	80 e0       	ldi	r24, 0x00	; 0
    17a4:	b7 01       	movw	r22, r14
    17a6:	a6 01       	movw	r20, r12
    17a8:	44 56       	subi	r20, 0x64	; 100
    17aa:	51 09       	sbc	r21, r1
    17ac:	61 09       	sbc	r22, r1
    17ae:	71 09       	sbc	r23, r1
    17b0:	44 38       	cpi	r20, 0x84	; 132
    17b2:	53 40       	sbci	r21, 0x03	; 3
    17b4:	61 05       	cpc	r22, r1
    17b6:	71 05       	cpc	r23, r1
    17b8:	08 f4       	brcc	.+2      	; 0x17bc <LCD_Nokia_SendInteger+0x70>
    17ba:	83 e0       	ldi	r24, 0x03	; 3
    17bc:	b7 01       	movw	r22, r14
    17be:	a6 01       	movw	r20, r12
    17c0:	48 5e       	subi	r20, 0xE8	; 232
    17c2:	53 40       	sbci	r21, 0x03	; 3
    17c4:	61 09       	sbc	r22, r1
    17c6:	71 09       	sbc	r23, r1
    17c8:	48 32       	cpi	r20, 0x28	; 40
    17ca:	53 42       	sbci	r21, 0x23	; 35
    17cc:	61 05       	cpc	r22, r1
    17ce:	71 05       	cpc	r23, r1
    17d0:	08 f4       	brcc	.+2      	; 0x17d4 <LCD_Nokia_SendInteger+0x88>
    17d2:	6e c1       	rjmp	.+732    	; 0x1ab0 <LCD_Nokia_SendInteger+0x364>
    17d4:	b7 01       	movw	r22, r14
    17d6:	a6 01       	movw	r20, r12
    17d8:	40 51       	subi	r20, 0x10	; 16
    17da:	57 42       	sbci	r21, 0x27	; 39
    17dc:	61 09       	sbc	r22, r1
    17de:	71 09       	sbc	r23, r1
    17e0:	40 39       	cpi	r20, 0x90	; 144
    17e2:	5f 45       	sbci	r21, 0x5F	; 95
    17e4:	61 40       	sbci	r22, 0x01	; 1
    17e6:	71 05       	cpc	r23, r1
    17e8:	08 f4       	brcc	.+2      	; 0x17ec <LCD_Nokia_SendInteger+0xa0>
    17ea:	53 c1       	rjmp	.+678    	; 0x1a92 <LCD_Nokia_SendInteger+0x346>
    17ec:	82 30       	cpi	r24, 0x02	; 2
    17ee:	09 f4       	brne	.+2      	; 0x17f2 <LCD_Nokia_SendInteger+0xa6>
    17f0:	7d c1       	rjmp	.+762    	; 0x1aec <LCD_Nokia_SendInteger+0x3a0>
    17f2:	83 30       	cpi	r24, 0x03	; 3
    17f4:	09 f4       	brne	.+2      	; 0x17f8 <LCD_Nokia_SendInteger+0xac>
    17f6:	6b c1       	rjmp	.+726    	; 0x1ace <LCD_Nokia_SendInteger+0x382>
    17f8:	81 30       	cpi	r24, 0x01	; 1
    17fa:	09 f4       	brne	.+2      	; 0x17fe <LCD_Nokia_SendInteger+0xb2>
    17fc:	87 c1       	rjmp	.+782    	; 0x1b0c <LCD_Nokia_SendInteger+0x3c0>
    17fe:	cc e2       	ldi	r28, 0x2C	; 44
    1800:	d1 e0       	ldi	r29, 0x01	; 1
    1802:	83 e2       	ldi	r24, 0x23	; 35
    1804:	65 e0       	ldi	r22, 0x05	; 5
    1806:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    180a:	89 91       	ld	r24, Y+
    180c:	81 11       	cpse	r24, r1
    180e:	fa cf       	rjmp	.-12     	; 0x1804 <LCD_Nokia_SendInteger+0xb8>
    1810:	ad cf       	rjmp	.-166    	; 0x176c <LCD_Nokia_SendInteger+0x20>
    1812:	97 fd       	sbrc	r25, 7
    1814:	9b c1       	rjmp	.+822    	; 0x1b4c <LCD_Nokia_SendInteger+0x400>
    1816:	d7 01       	movw	r26, r14
    1818:	c6 01       	movw	r24, r12
    181a:	0a 97       	sbiw	r24, 0x0a	; 10
    181c:	a1 09       	sbc	r26, r1
    181e:	b1 09       	sbc	r27, r1
    1820:	8a 35       	cpi	r24, 0x5A	; 90
    1822:	91 05       	cpc	r25, r1
    1824:	a1 05       	cpc	r26, r1
    1826:	b1 05       	cpc	r27, r1
    1828:	08 f4       	brcc	.+2      	; 0x182c <LCD_Nokia_SendInteger+0xe0>
    182a:	9a c0       	rjmp	.+308    	; 0x1960 <LCD_Nokia_SendInteger+0x214>
    182c:	81 e0       	ldi	r24, 0x01	; 1
    182e:	9a e0       	ldi	r25, 0x0A	; 10
    1830:	c9 16       	cp	r12, r25
    1832:	d1 04       	cpc	r13, r1
    1834:	e1 04       	cpc	r14, r1
    1836:	f1 04       	cpc	r15, r1
    1838:	0c f0       	brlt	.+2      	; 0x183c <LCD_Nokia_SendInteger+0xf0>
    183a:	80 e0       	ldi	r24, 0x00	; 0
    183c:	b7 01       	movw	r22, r14
    183e:	a6 01       	movw	r20, r12
    1840:	44 56       	subi	r20, 0x64	; 100
    1842:	51 09       	sbc	r21, r1
    1844:	61 09       	sbc	r22, r1
    1846:	71 09       	sbc	r23, r1
    1848:	44 38       	cpi	r20, 0x84	; 132
    184a:	53 40       	sbci	r21, 0x03	; 3
    184c:	61 05       	cpc	r22, r1
    184e:	71 05       	cpc	r23, r1
    1850:	08 f4       	brcc	.+2      	; 0x1854 <LCD_Nokia_SendInteger+0x108>
    1852:	83 e0       	ldi	r24, 0x03	; 3
    1854:	b7 01       	movw	r22, r14
    1856:	a6 01       	movw	r20, r12
    1858:	48 5e       	subi	r20, 0xE8	; 232
    185a:	53 40       	sbci	r21, 0x03	; 3
    185c:	61 09       	sbc	r22, r1
    185e:	71 09       	sbc	r23, r1
    1860:	48 32       	cpi	r20, 0x28	; 40
    1862:	53 42       	sbci	r21, 0x23	; 35
    1864:	61 05       	cpc	r22, r1
    1866:	71 05       	cpc	r23, r1
    1868:	08 f4       	brcc	.+2      	; 0x186c <LCD_Nokia_SendInteger+0x120>
    186a:	84 e0       	ldi	r24, 0x04	; 4
    186c:	b7 01       	movw	r22, r14
    186e:	a6 01       	movw	r20, r12
    1870:	40 51       	subi	r20, 0x10	; 16
    1872:	57 42       	sbci	r21, 0x27	; 39
    1874:	61 09       	sbc	r22, r1
    1876:	71 09       	sbc	r23, r1
    1878:	40 39       	cpi	r20, 0x90	; 144
    187a:	5f 45       	sbci	r21, 0x5F	; 95
    187c:	61 40       	sbci	r22, 0x01	; 1
    187e:	71 05       	cpc	r23, r1
    1880:	08 f4       	brcc	.+2      	; 0x1884 <LCD_Nokia_SendInteger+0x138>
    1882:	80 c0       	rjmp	.+256    	; 0x1984 <LCD_Nokia_SendInteger+0x238>
    1884:	b7 01       	movw	r22, r14
    1886:	a6 01       	movw	r20, r12
    1888:	40 5a       	subi	r20, 0xA0	; 160
    188a:	56 48       	sbci	r21, 0x86	; 134
    188c:	61 40       	sbci	r22, 0x01	; 1
    188e:	71 09       	sbc	r23, r1
    1890:	40 3a       	cpi	r20, 0xA0	; 160
    1892:	5b 4b       	sbci	r21, 0xBB	; 187
    1894:	6d 40       	sbci	r22, 0x0D	; 13
    1896:	71 05       	cpc	r23, r1
    1898:	08 f4       	brcc	.+2      	; 0x189c <LCD_Nokia_SendInteger+0x150>
    189a:	66 c0       	rjmp	.+204    	; 0x1968 <LCD_Nokia_SendInteger+0x21c>
    189c:	82 30       	cpi	r24, 0x02	; 2
    189e:	09 f4       	brne	.+2      	; 0x18a2 <LCD_Nokia_SendInteger+0x156>
    18a0:	9b c0       	rjmp	.+310    	; 0x19d8 <LCD_Nokia_SendInteger+0x28c>
    18a2:	08 f4       	brcc	.+2      	; 0x18a6 <LCD_Nokia_SendInteger+0x15a>
    18a4:	5e c1       	rjmp	.+700    	; 0x1b62 <LCD_Nokia_SendInteger+0x416>
    18a6:	83 30       	cpi	r24, 0x03	; 3
    18a8:	09 f4       	brne	.+2      	; 0x18ac <LCD_Nokia_SendInteger+0x160>
    18aa:	88 c0       	rjmp	.+272    	; 0x19bc <LCD_Nokia_SendInteger+0x270>
    18ac:	84 30       	cpi	r24, 0x04	; 4
    18ae:	09 f4       	brne	.+2      	; 0x18b2 <LCD_Nokia_SendInteger+0x166>
    18b0:	77 c0       	rjmp	.+238    	; 0x19a0 <LCD_Nokia_SendInteger+0x254>
    18b2:	cc e2       	ldi	r28, 0x2C	; 44
    18b4:	d1 e0       	ldi	r29, 0x01	; 1
    18b6:	83 e2       	ldi	r24, 0x23	; 35
    18b8:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    18bc:	89 91       	ld	r24, Y+
    18be:	81 11       	cpse	r24, r1
    18c0:	fb cf       	rjmp	.-10     	; 0x18b8 <LCD_Nokia_SendInteger+0x16c>
    18c2:	54 cf       	rjmp	.-344    	; 0x176c <LCD_Nokia_SendInteger+0x20>
    18c4:	97 fd       	sbrc	r25, 7
    18c6:	2a c1       	rjmp	.+596    	; 0x1b1c <LCD_Nokia_SendInteger+0x3d0>
    18c8:	d7 01       	movw	r26, r14
    18ca:	c6 01       	movw	r24, r12
    18cc:	0a 97       	sbiw	r24, 0x0a	; 10
    18ce:	a1 09       	sbc	r26, r1
    18d0:	b1 09       	sbc	r27, r1
    18d2:	8a 35       	cpi	r24, 0x5A	; 90
    18d4:	91 05       	cpc	r25, r1
    18d6:	a1 05       	cpc	r26, r1
    18d8:	b1 05       	cpc	r27, r1
    18da:	08 f4       	brcc	.+2      	; 0x18de <LCD_Nokia_SendInteger+0x192>
    18dc:	3f c0       	rjmp	.+126    	; 0x195c <LCD_Nokia_SendInteger+0x210>
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	9a e0       	ldi	r25, 0x0A	; 10
    18e2:	c9 16       	cp	r12, r25
    18e4:	d1 04       	cpc	r13, r1
    18e6:	e1 04       	cpc	r14, r1
    18e8:	f1 04       	cpc	r15, r1
    18ea:	0c f0       	brlt	.+2      	; 0x18ee <LCD_Nokia_SendInteger+0x1a2>
    18ec:	80 e0       	ldi	r24, 0x00	; 0
    18ee:	b7 01       	movw	r22, r14
    18f0:	a6 01       	movw	r20, r12
    18f2:	44 56       	subi	r20, 0x64	; 100
    18f4:	51 09       	sbc	r21, r1
    18f6:	61 09       	sbc	r22, r1
    18f8:	71 09       	sbc	r23, r1
    18fa:	44 38       	cpi	r20, 0x84	; 132
    18fc:	53 40       	sbci	r21, 0x03	; 3
    18fe:	61 05       	cpc	r22, r1
    1900:	71 05       	cpc	r23, r1
    1902:	08 f4       	brcc	.+2      	; 0x1906 <LCD_Nokia_SendInteger+0x1ba>
    1904:	83 e0       	ldi	r24, 0x03	; 3
    1906:	b7 01       	movw	r22, r14
    1908:	a6 01       	movw	r20, r12
    190a:	48 5e       	subi	r20, 0xE8	; 232
    190c:	53 40       	sbci	r21, 0x03	; 3
    190e:	61 09       	sbc	r22, r1
    1910:	71 09       	sbc	r23, r1
    1912:	48 32       	cpi	r20, 0x28	; 40
    1914:	53 42       	sbci	r21, 0x23	; 35
    1916:	61 05       	cpc	r22, r1
    1918:	71 05       	cpc	r23, r1
    191a:	08 f4       	brcc	.+2      	; 0x191e <LCD_Nokia_SendInteger+0x1d2>
    191c:	83 c0       	rjmp	.+262    	; 0x1a24 <LCD_Nokia_SendInteger+0x2d8>
    191e:	b7 01       	movw	r22, r14
    1920:	a6 01       	movw	r20, r12
    1922:	40 51       	subi	r20, 0x10	; 16
    1924:	57 42       	sbci	r21, 0x27	; 39
    1926:	61 09       	sbc	r22, r1
    1928:	71 09       	sbc	r23, r1
    192a:	40 39       	cpi	r20, 0x90	; 144
    192c:	5f 45       	sbci	r21, 0x5F	; 95
    192e:	61 40       	sbci	r22, 0x01	; 1
    1930:	71 05       	cpc	r23, r1
    1932:	08 f4       	brcc	.+2      	; 0x1936 <LCD_Nokia_SendInteger+0x1ea>
    1934:	68 c0       	rjmp	.+208    	; 0x1a06 <LCD_Nokia_SendInteger+0x2ba>
    1936:	82 30       	cpi	r24, 0x02	; 2
    1938:	09 f4       	brne	.+2      	; 0x193c <LCD_Nokia_SendInteger+0x1f0>
    193a:	92 c0       	rjmp	.+292    	; 0x1a60 <LCD_Nokia_SendInteger+0x314>
    193c:	83 30       	cpi	r24, 0x03	; 3
    193e:	09 f4       	brne	.+2      	; 0x1942 <LCD_Nokia_SendInteger+0x1f6>
    1940:	80 c0       	rjmp	.+256    	; 0x1a42 <LCD_Nokia_SendInteger+0x2f6>
    1942:	81 30       	cpi	r24, 0x01	; 1
    1944:	09 f4       	brne	.+2      	; 0x1948 <LCD_Nokia_SendInteger+0x1fc>
    1946:	e6 c0       	rjmp	.+460    	; 0x1b14 <LCD_Nokia_SendInteger+0x3c8>
    1948:	cc e2       	ldi	r28, 0x2C	; 44
    194a:	d1 e0       	ldi	r29, 0x01	; 1
    194c:	83 e2       	ldi	r24, 0x23	; 35
    194e:	66 e0       	ldi	r22, 0x06	; 6
    1950:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1954:	89 91       	ld	r24, Y+
    1956:	81 11       	cpse	r24, r1
    1958:	fa cf       	rjmp	.-12     	; 0x194e <LCD_Nokia_SendInteger+0x202>
    195a:	08 cf       	rjmp	.-496    	; 0x176c <LCD_Nokia_SendInteger+0x20>
    195c:	82 e0       	ldi	r24, 0x02	; 2
    195e:	c7 cf       	rjmp	.-114    	; 0x18ee <LCD_Nokia_SendInteger+0x1a2>
    1960:	82 e0       	ldi	r24, 0x02	; 2
    1962:	6c cf       	rjmp	.-296    	; 0x183c <LCD_Nokia_SendInteger+0xf0>
    1964:	82 e0       	ldi	r24, 0x02	; 2
    1966:	1e cf       	rjmp	.-452    	; 0x17a4 <LCD_Nokia_SendInteger+0x58>
    1968:	c7 01       	movw	r24, r14
    196a:	b6 01       	movw	r22, r12
    196c:	20 ea       	ldi	r18, 0xA0	; 160
    196e:	36 e8       	ldi	r19, 0x86	; 134
    1970:	41 e0       	ldi	r20, 0x01	; 1
    1972:	50 e0       	ldi	r21, 0x00	; 0
    1974:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1978:	6b 01       	movw	r12, r22
    197a:	7c 01       	movw	r14, r24
    197c:	80 e3       	ldi	r24, 0x30	; 48
    197e:	82 0f       	add	r24, r18
    1980:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    1984:	c7 01       	movw	r24, r14
    1986:	b6 01       	movw	r22, r12
    1988:	20 e1       	ldi	r18, 0x10	; 16
    198a:	37 e2       	ldi	r19, 0x27	; 39
    198c:	40 e0       	ldi	r20, 0x00	; 0
    198e:	50 e0       	ldi	r21, 0x00	; 0
    1990:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1994:	6b 01       	movw	r12, r22
    1996:	7c 01       	movw	r14, r24
    1998:	80 e3       	ldi	r24, 0x30	; 48
    199a:	82 0f       	add	r24, r18
    199c:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    19a0:	c7 01       	movw	r24, r14
    19a2:	b6 01       	movw	r22, r12
    19a4:	28 ee       	ldi	r18, 0xE8	; 232
    19a6:	33 e0       	ldi	r19, 0x03	; 3
    19a8:	40 e0       	ldi	r20, 0x00	; 0
    19aa:	50 e0       	ldi	r21, 0x00	; 0
    19ac:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    19b0:	6b 01       	movw	r12, r22
    19b2:	7c 01       	movw	r14, r24
    19b4:	80 e3       	ldi	r24, 0x30	; 48
    19b6:	82 0f       	add	r24, r18
    19b8:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    19bc:	c7 01       	movw	r24, r14
    19be:	b6 01       	movw	r22, r12
    19c0:	24 e6       	ldi	r18, 0x64	; 100
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	40 e0       	ldi	r20, 0x00	; 0
    19c6:	50 e0       	ldi	r21, 0x00	; 0
    19c8:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    19cc:	6b 01       	movw	r12, r22
    19ce:	7c 01       	movw	r14, r24
    19d0:	80 e3       	ldi	r24, 0x30	; 48
    19d2:	82 0f       	add	r24, r18
    19d4:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    19d8:	c7 01       	movw	r24, r14
    19da:	b6 01       	movw	r22, r12
    19dc:	2a e0       	ldi	r18, 0x0A	; 10
    19de:	30 e0       	ldi	r19, 0x00	; 0
    19e0:	40 e0       	ldi	r20, 0x00	; 0
    19e2:	50 e0       	ldi	r21, 0x00	; 0
    19e4:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    19e8:	c6 2f       	mov	r28, r22
    19ea:	80 e3       	ldi	r24, 0x30	; 48
    19ec:	82 0f       	add	r24, r18
    19ee:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    19f2:	80 e3       	ldi	r24, 0x30	; 48
    19f4:	8c 0f       	add	r24, r28
    19f6:	df 91       	pop	r29
    19f8:	cf 91       	pop	r28
    19fa:	ff 90       	pop	r15
    19fc:	ef 90       	pop	r14
    19fe:	df 90       	pop	r13
    1a00:	cf 90       	pop	r12
    1a02:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    1a06:	c7 01       	movw	r24, r14
    1a08:	b6 01       	movw	r22, r12
    1a0a:	20 e1       	ldi	r18, 0x10	; 16
    1a0c:	37 e2       	ldi	r19, 0x27	; 39
    1a0e:	40 e0       	ldi	r20, 0x00	; 0
    1a10:	50 e0       	ldi	r21, 0x00	; 0
    1a12:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1a16:	6b 01       	movw	r12, r22
    1a18:	7c 01       	movw	r14, r24
    1a1a:	66 e0       	ldi	r22, 0x06	; 6
    1a1c:	80 e3       	ldi	r24, 0x30	; 48
    1a1e:	82 0f       	add	r24, r18
    1a20:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1a24:	c7 01       	movw	r24, r14
    1a26:	b6 01       	movw	r22, r12
    1a28:	28 ee       	ldi	r18, 0xE8	; 232
    1a2a:	33 e0       	ldi	r19, 0x03	; 3
    1a2c:	40 e0       	ldi	r20, 0x00	; 0
    1a2e:	50 e0       	ldi	r21, 0x00	; 0
    1a30:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1a34:	6b 01       	movw	r12, r22
    1a36:	7c 01       	movw	r14, r24
    1a38:	66 e0       	ldi	r22, 0x06	; 6
    1a3a:	80 e3       	ldi	r24, 0x30	; 48
    1a3c:	82 0f       	add	r24, r18
    1a3e:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1a42:	c7 01       	movw	r24, r14
    1a44:	b6 01       	movw	r22, r12
    1a46:	24 e6       	ldi	r18, 0x64	; 100
    1a48:	30 e0       	ldi	r19, 0x00	; 0
    1a4a:	40 e0       	ldi	r20, 0x00	; 0
    1a4c:	50 e0       	ldi	r21, 0x00	; 0
    1a4e:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1a52:	6b 01       	movw	r12, r22
    1a54:	7c 01       	movw	r14, r24
    1a56:	66 e0       	ldi	r22, 0x06	; 6
    1a58:	80 e3       	ldi	r24, 0x30	; 48
    1a5a:	82 0f       	add	r24, r18
    1a5c:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1a60:	c7 01       	movw	r24, r14
    1a62:	b6 01       	movw	r22, r12
    1a64:	2a e0       	ldi	r18, 0x0A	; 10
    1a66:	30 e0       	ldi	r19, 0x00	; 0
    1a68:	40 e0       	ldi	r20, 0x00	; 0
    1a6a:	50 e0       	ldi	r21, 0x00	; 0
    1a6c:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1a70:	c6 2f       	mov	r28, r22
    1a72:	66 e0       	ldi	r22, 0x06	; 6
    1a74:	80 e3       	ldi	r24, 0x30	; 48
    1a76:	82 0f       	add	r24, r18
    1a78:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1a7c:	66 e0       	ldi	r22, 0x06	; 6
    1a7e:	80 e3       	ldi	r24, 0x30	; 48
    1a80:	8c 0f       	add	r24, r28
    1a82:	df 91       	pop	r29
    1a84:	cf 91       	pop	r28
    1a86:	ff 90       	pop	r15
    1a88:	ef 90       	pop	r14
    1a8a:	df 90       	pop	r13
    1a8c:	cf 90       	pop	r12
    1a8e:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1a92:	c7 01       	movw	r24, r14
    1a94:	b6 01       	movw	r22, r12
    1a96:	20 e1       	ldi	r18, 0x10	; 16
    1a98:	37 e2       	ldi	r19, 0x27	; 39
    1a9a:	40 e0       	ldi	r20, 0x00	; 0
    1a9c:	50 e0       	ldi	r21, 0x00	; 0
    1a9e:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1aa2:	6b 01       	movw	r12, r22
    1aa4:	7c 01       	movw	r14, r24
    1aa6:	65 e0       	ldi	r22, 0x05	; 5
    1aa8:	80 e3       	ldi	r24, 0x30	; 48
    1aaa:	82 0f       	add	r24, r18
    1aac:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1ab0:	c7 01       	movw	r24, r14
    1ab2:	b6 01       	movw	r22, r12
    1ab4:	28 ee       	ldi	r18, 0xE8	; 232
    1ab6:	33 e0       	ldi	r19, 0x03	; 3
    1ab8:	40 e0       	ldi	r20, 0x00	; 0
    1aba:	50 e0       	ldi	r21, 0x00	; 0
    1abc:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1ac0:	6b 01       	movw	r12, r22
    1ac2:	7c 01       	movw	r14, r24
    1ac4:	65 e0       	ldi	r22, 0x05	; 5
    1ac6:	80 e3       	ldi	r24, 0x30	; 48
    1ac8:	82 0f       	add	r24, r18
    1aca:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1ace:	c7 01       	movw	r24, r14
    1ad0:	b6 01       	movw	r22, r12
    1ad2:	24 e6       	ldi	r18, 0x64	; 100
    1ad4:	30 e0       	ldi	r19, 0x00	; 0
    1ad6:	40 e0       	ldi	r20, 0x00	; 0
    1ad8:	50 e0       	ldi	r21, 0x00	; 0
    1ada:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1ade:	6b 01       	movw	r12, r22
    1ae0:	7c 01       	movw	r14, r24
    1ae2:	65 e0       	ldi	r22, 0x05	; 5
    1ae4:	80 e3       	ldi	r24, 0x30	; 48
    1ae6:	82 0f       	add	r24, r18
    1ae8:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1aec:	c7 01       	movw	r24, r14
    1aee:	b6 01       	movw	r22, r12
    1af0:	2a e0       	ldi	r18, 0x0A	; 10
    1af2:	30 e0       	ldi	r19, 0x00	; 0
    1af4:	40 e0       	ldi	r20, 0x00	; 0
    1af6:	50 e0       	ldi	r21, 0x00	; 0
    1af8:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1afc:	c6 2f       	mov	r28, r22
    1afe:	65 e0       	ldi	r22, 0x05	; 5
    1b00:	80 e3       	ldi	r24, 0x30	; 48
    1b02:	82 0f       	add	r24, r18
    1b04:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1b08:	65 e0       	ldi	r22, 0x05	; 5
    1b0a:	b9 cf       	rjmp	.-142    	; 0x1a7e <LCD_Nokia_SendInteger+0x332>
    1b0c:	65 e0       	ldi	r22, 0x05	; 5
    1b0e:	80 e3       	ldi	r24, 0x30	; 48
    1b10:	8c 0d       	add	r24, r12
    1b12:	b7 cf       	rjmp	.-146    	; 0x1a82 <LCD_Nokia_SendInteger+0x336>
    1b14:	66 e0       	ldi	r22, 0x06	; 6
    1b16:	80 e3       	ldi	r24, 0x30	; 48
    1b18:	8c 0d       	add	r24, r12
    1b1a:	b3 cf       	rjmp	.-154    	; 0x1a82 <LCD_Nokia_SendInteger+0x336>
    1b1c:	66 e0       	ldi	r22, 0x06	; 6
    1b1e:	8d e2       	ldi	r24, 0x2D	; 45
    1b20:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1b24:	c6 01       	movw	r24, r12
    1b26:	d7 fc       	sbrc	r13, 7
    1b28:	27 c0       	rjmp	.+78     	; 0x1b78 <LCD_Nokia_SendInteger+0x42c>
    1b2a:	6c 01       	movw	r12, r24
    1b2c:	99 0f       	add	r25, r25
    1b2e:	ee 08       	sbc	r14, r14
    1b30:	ff 08       	sbc	r15, r15
    1b32:	ca ce       	rjmp	.-620    	; 0x18c8 <LCD_Nokia_SendInteger+0x17c>
    1b34:	65 e0       	ldi	r22, 0x05	; 5
    1b36:	8d e2       	ldi	r24, 0x2D	; 45
    1b38:	0e 94 c2 09 	call	0x1384	; 0x1384 <LCD_Nokia_PutSmallChar>
    1b3c:	c6 01       	movw	r24, r12
    1b3e:	d7 fc       	sbrc	r13, 7
    1b40:	20 c0       	rjmp	.+64     	; 0x1b82 <LCD_Nokia_SendInteger+0x436>
    1b42:	6c 01       	movw	r12, r24
    1b44:	99 0f       	add	r25, r25
    1b46:	ee 08       	sbc	r14, r14
    1b48:	ff 08       	sbc	r15, r15
    1b4a:	19 ce       	rjmp	.-974    	; 0x177e <LCD_Nokia_SendInteger+0x32>
    1b4c:	8d e2       	ldi	r24, 0x2D	; 45
    1b4e:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    1b52:	c6 01       	movw	r24, r12
    1b54:	d7 fc       	sbrc	r13, 7
    1b56:	0b c0       	rjmp	.+22     	; 0x1b6e <LCD_Nokia_SendInteger+0x422>
    1b58:	6c 01       	movw	r12, r24
    1b5a:	99 0f       	add	r25, r25
    1b5c:	ee 08       	sbc	r14, r14
    1b5e:	ff 08       	sbc	r15, r15
    1b60:	5a ce       	rjmp	.-844    	; 0x1816 <LCD_Nokia_SendInteger+0xca>
    1b62:	81 30       	cpi	r24, 0x01	; 1
    1b64:	09 f0       	breq	.+2      	; 0x1b68 <LCD_Nokia_SendInteger+0x41c>
    1b66:	a5 ce       	rjmp	.-694    	; 0x18b2 <LCD_Nokia_SendInteger+0x166>
    1b68:	80 e3       	ldi	r24, 0x30	; 48
    1b6a:	8c 0d       	add	r24, r12
    1b6c:	44 cf       	rjmp	.-376    	; 0x19f6 <LCD_Nokia_SendInteger+0x2aa>
    1b6e:	88 27       	eor	r24, r24
    1b70:	99 27       	eor	r25, r25
    1b72:	8c 19       	sub	r24, r12
    1b74:	9d 09       	sbc	r25, r13
    1b76:	f0 cf       	rjmp	.-32     	; 0x1b58 <LCD_Nokia_SendInteger+0x40c>
    1b78:	88 27       	eor	r24, r24
    1b7a:	99 27       	eor	r25, r25
    1b7c:	8c 19       	sub	r24, r12
    1b7e:	9d 09       	sbc	r25, r13
    1b80:	d4 cf       	rjmp	.-88     	; 0x1b2a <LCD_Nokia_SendInteger+0x3de>
    1b82:	88 27       	eor	r24, r24
    1b84:	99 27       	eor	r25, r25
    1b86:	8c 19       	sub	r24, r12
    1b88:	9d 09       	sbc	r25, r13
    1b8a:	db cf       	rjmp	.-74     	; 0x1b42 <LCD_Nokia_SendInteger+0x3f6>

00001b8c <LCD_Nokia_Send5Integer>:
    1b8c:	45 e0       	ldi	r20, 0x05	; 5
    1b8e:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <LCD_Nokia_SendInteger>

00001b92 <LCD_Nokia_Send12Integer>:
    1b92:	4c e0       	ldi	r20, 0x0C	; 12
    1b94:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <LCD_Nokia_SendInteger>

00001b98 <LCD_Nokia_DrawRectangle>:
    1b98:	ef 92       	push	r14
    1b9a:	ff 92       	push	r15
    1b9c:	0f 93       	push	r16
    1b9e:	1f 93       	push	r17
    1ba0:	cf 93       	push	r28
    1ba2:	df 93       	push	r29
    1ba4:	e8 2e       	mov	r14, r24
    1ba6:	d6 2f       	mov	r29, r22
    1ba8:	14 2f       	mov	r17, r20
    1baa:	f2 2e       	mov	r15, r18
    1bac:	48 17       	cp	r20, r24
    1bae:	10 f4       	brcc	.+4      	; 0x1bb4 <LCD_Nokia_DrawRectangle+0x1c>
    1bb0:	e4 2e       	mov	r14, r20
    1bb2:	18 2f       	mov	r17, r24
    1bb4:	fd 16       	cp	r15, r29
    1bb6:	18 f4       	brcc	.+6      	; 0x1bbe <LCD_Nokia_DrawRectangle+0x26>
    1bb8:	8d 2f       	mov	r24, r29
    1bba:	df 2d       	mov	r29, r15
    1bbc:	f8 2e       	mov	r15, r24
    1bbe:	01 11       	cpse	r16, r1
    1bc0:	2d c0       	rjmp	.+90     	; 0x1c1c <LCD_Nokia_DrawRectangle+0x84>
    1bc2:	1e 15       	cp	r17, r14
    1bc4:	80 f0       	brcs	.+32     	; 0x1be6 <LCD_Nokia_DrawRectangle+0x4e>
    1bc6:	ce 2d       	mov	r28, r14
    1bc8:	6d 2f       	mov	r22, r29
    1bca:	8c 2f       	mov	r24, r28
    1bcc:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    1bd0:	cf 5f       	subi	r28, 0xFF	; 255
    1bd2:	1c 17       	cp	r17, r28
    1bd4:	c8 f7       	brcc	.-14     	; 0x1bc8 <LCD_Nokia_DrawRectangle+0x30>
    1bd6:	ce 2d       	mov	r28, r14
    1bd8:	6f 2d       	mov	r22, r15
    1bda:	8c 2f       	mov	r24, r28
    1bdc:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    1be0:	cf 5f       	subi	r28, 0xFF	; 255
    1be2:	1c 17       	cp	r17, r28
    1be4:	c8 f7       	brcc	.-14     	; 0x1bd8 <LCD_Nokia_DrawRectangle+0x40>
    1be6:	fd 16       	cp	r15, r29
    1be8:	78 f0       	brcs	.+30     	; 0x1c08 <LCD_Nokia_DrawRectangle+0x70>
    1bea:	cd 2f       	mov	r28, r29
    1bec:	6c 2f       	mov	r22, r28
    1bee:	8e 2d       	mov	r24, r14
    1bf0:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    1bf4:	cf 5f       	subi	r28, 0xFF	; 255
    1bf6:	fc 16       	cp	r15, r28
    1bf8:	c8 f7       	brcc	.-14     	; 0x1bec <LCD_Nokia_DrawRectangle+0x54>
    1bfa:	6d 2f       	mov	r22, r29
    1bfc:	81 2f       	mov	r24, r17
    1bfe:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    1c02:	df 5f       	subi	r29, 0xFF	; 255
    1c04:	fd 16       	cp	r15, r29
    1c06:	c8 f7       	brcc	.-14     	; 0x1bfa <LCD_Nokia_DrawRectangle+0x62>
    1c08:	df 91       	pop	r29
    1c0a:	cf 91       	pop	r28
    1c0c:	1f 91       	pop	r17
    1c0e:	0f 91       	pop	r16
    1c10:	ff 90       	pop	r15
    1c12:	ef 90       	pop	r14
    1c14:	08 95       	ret
    1c16:	df 5f       	subi	r29, 0xFF	; 255
    1c18:	fd 16       	cp	r15, r29
    1c1a:	b0 f3       	brcs	.-20     	; 0x1c08 <LCD_Nokia_DrawRectangle+0x70>
    1c1c:	1e 15       	cp	r17, r14
    1c1e:	d8 f3       	brcs	.-10     	; 0x1c16 <LCD_Nokia_DrawRectangle+0x7e>
    1c20:	ce 2d       	mov	r28, r14
    1c22:	6d 2f       	mov	r22, r29
    1c24:	8c 2f       	mov	r24, r28
    1c26:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_Nokia_PutPixel.part.0>
    1c2a:	cf 5f       	subi	r28, 0xFF	; 255
    1c2c:	1c 17       	cp	r17, r28
    1c2e:	c8 f7       	brcc	.-14     	; 0x1c22 <LCD_Nokia_DrawRectangle+0x8a>
    1c30:	df 5f       	subi	r29, 0xFF	; 255
    1c32:	fd 16       	cp	r15, r29
    1c34:	98 f7       	brcc	.-26     	; 0x1c1c <LCD_Nokia_DrawRectangle+0x84>
    1c36:	e8 cf       	rjmp	.-48     	; 0x1c08 <LCD_Nokia_DrawRectangle+0x70>

00001c38 <LCD_Nokia_DrawUnfilledRectangle>:
    1c38:	ef 92       	push	r14
    1c3a:	ff 92       	push	r15
    1c3c:	0f 93       	push	r16
    1c3e:	1f 93       	push	r17
    1c40:	cf 93       	push	r28
    1c42:	df 93       	push	r29
    1c44:	00 23       	and	r16, r16
    1c46:	a1 f0       	breq	.+40     	; 0x1c70 <LCD_Nokia_DrawUnfilledRectangle+0x38>
    1c48:	e8 2e       	mov	r14, r24
    1c4a:	e0 0e       	add	r14, r16
    1c4c:	cf ef       	ldi	r28, 0xFF	; 255
    1c4e:	c2 0f       	add	r28, r18
    1c50:	df ef       	ldi	r29, 0xFF	; 255
    1c52:	d4 0f       	add	r29, r20
    1c54:	11 e0       	ldi	r17, 0x01	; 1
    1c56:	16 0f       	add	r17, r22
    1c58:	ff 24       	eor	r15, r15
    1c5a:	f3 94       	inc	r15
    1c5c:	f8 0e       	add	r15, r24
    1c5e:	00 e0       	ldi	r16, 0x00	; 0
    1c60:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <LCD_Nokia_DrawRectangle>
    1c64:	8f 2d       	mov	r24, r15
    1c66:	61 2f       	mov	r22, r17
    1c68:	4d 2f       	mov	r20, r29
    1c6a:	2c 2f       	mov	r18, r28
    1c6c:	ef 10       	cpse	r14, r15
    1c6e:	ee cf       	rjmp	.-36     	; 0x1c4c <LCD_Nokia_DrawUnfilledRectangle+0x14>
    1c70:	df 91       	pop	r29
    1c72:	cf 91       	pop	r28
    1c74:	1f 91       	pop	r17
    1c76:	0f 91       	pop	r16
    1c78:	ff 90       	pop	r15
    1c7a:	ef 90       	pop	r14
    1c7c:	08 95       	ret

00001c7e <LCD_Nokia_UpdateFullScreen>:
// 		}
// 	}
// }

void LCD_Nokia_UpdateFullScreen (void)
{
    1c7e:	cf 93       	push	r28
    1c80:	df 93       	push	r29
	LCD_Nokia_SetPosition(0, 0);
    1c82:	60 e0       	ldi	r22, 0x00	; 0
    1c84:	80 e0       	ldi	r24, 0x00	; 0
    1c86:	0e 94 ae 09 	call	0x135c	; 0x135c <LCD_Nokia_SetPosition>
    1c8a:	c2 eb       	ldi	r28, 0xB2	; 178
    1c8c:	d1 e0       	ldi	r29, 0x01	; 1
	LCD_Nokia_PutByte(byte, 0);
}

void LCD_Nokia_PutDataByte(int8_t byte)
{
	LCD_Nokia_PutByte(byte, 1);
    1c8e:	61 e0       	ldi	r22, 0x01	; 1
    1c90:	89 91       	ld	r24, Y+
    1c92:	0e 94 65 09 	call	0x12ca	; 0x12ca <LCD_Nokia_PutByte>
// }

void LCD_Nokia_UpdateFullScreen (void)
{
	LCD_Nokia_SetPosition(0, 0);
	for (uint16_t i = 0; i < LCD_NOKIA_BUFFER_SIZE; i++)	LCD_Nokia_PutDataByte(nokiaDisplayPixels.screen[i]);
    1c96:	83 e0       	ldi	r24, 0x03	; 3
    1c98:	ca 3a       	cpi	r28, 0xAA	; 170
    1c9a:	d8 07       	cpc	r29, r24
    1c9c:	c1 f7       	brne	.-16     	; 0x1c8e <LCD_Nokia_UpdateFullScreen+0x10>
}
    1c9e:	df 91       	pop	r29
    1ca0:	cf 91       	pop	r28
    1ca2:	08 95       	ret

00001ca4 <setup>:
}

void setup (void)
{
	IO_Init();
	Buttons_Init();											//	Inputs initialization; initialization of Timer 0 on OCR0A
    1ca4:	0e 94 12 04 	call	0x824	; 0x824 <Buttons_Init>
	Speedometer_Init();										//	Inputs initialization; initialization of external interrupts on INT0 pin
    1ca8:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <Speedometer_Init>
	
	I2C_Init(I2C_SCL_FREQUENCY, I2C_PRESCALER_BITS);
    1cac:	40 e0       	ldi	r20, 0x00	; 0
    1cae:	60 ea       	ldi	r22, 0xA0	; 160
    1cb0:	76 e8       	ldi	r23, 0x86	; 134
    1cb2:	81 e0       	ldi	r24, 0x01	; 1
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	0e 94 55 08 	call	0x10aa	; 0x10aa <I2C_Init>
	SPI_Master_Init();
    1cba:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <SPI_Master_Init>
//	Bluetooth_On();											//	USART initialization
	
	LCD_Nokia_Init();
    1cbe:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <LCD_Nokia_Init>
	
//	GeekSport_Init();										//	Setting time, length of the wheel in mm
	
	sei();
    1cc2:	78 94       	sei
    1cc4:	08 95       	ret

00001cc6 <main>:
}

int main (void)
{
	setup();
    1cc6:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <setup>
	
	while (1)
	{
		GeekSport_SetMode(GeekSport_Mode);
    1cca:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <GeekSport_Mode>
    1cce:	0e 94 ee 07 	call	0xfdc	; 0xfdc <GeekSport_SetMode>
    1cd2:	fb cf       	rjmp	.-10     	; 0x1cca <main+0x4>

00001cd4 <Speedometer_Init>:
volatile static bool Speedometer_IsRunning = false;


void Speedometer_IO_Init (void)
{
	SPEEDOMETER_HALL_SWITCH_DDR &= ~(1 << SPEEDOMETER_HALL_SWITCH_PIN);
    1cd4:	52 98       	cbi	0x0a, 2	; 10
	SPEEDOMETER_HALL_SWITCH_PORT |= 1 << SPEEDOMETER_HALL_SWITCH_PIN;
    1cd6:	5a 9a       	sbi	0x0b, 2	; 11
}

void Speedometer_Init (void)
{
	Speedometer_IO_Init();
	EICRA |= 1 << ISC01 | 0 << ISC00;															//	Set interrupts on failing edge for the reed switch
    1cd8:	e9 e6       	ldi	r30, 0x69	; 105
    1cda:	f0 e0       	ldi	r31, 0x00	; 0
    1cdc:	80 81       	ld	r24, Z
    1cde:	82 60       	ori	r24, 0x02	; 2
    1ce0:	80 83       	st	Z, r24
	EIMSK |= 1 << INT0;																			//	Enable interrupts
    1ce2:	e8 9a       	sbi	0x1d, 0	; 29
    1ce4:	08 95       	ret

00001ce6 <Speedometer_Settings>:
}

void Speedometer_Settings (void)
{
    1ce6:	0f 93       	push	r16
    1ce8:	1f 93       	push	r17
    1cea:	cf 93       	push	r28
    1cec:	df 93       	push	r29
	uint16_t tempLength;
	
//	Wheel length setting
	GeekSport_SettingsDigit = 0;
    1cee:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1cf2:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	Buttons_SetButtonState = false;
    1cf6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(63, 11);
    1cfa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1cfe:	81 11       	cpse	r24, r1
    1d00:	08 c0       	rjmp	.+16     	; 0x1d12 <Speedometer_Settings+0x2c>
    1d02:	6b e0       	ldi	r22, 0x0B	; 11
    1d04:	8f e3       	ldi	r24, 0x3F	; 63
    1d06:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
    1d0a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1d0e:	88 23       	and	r24, r24
    1d10:	c1 f3       	breq	.-16     	; 0x1d02 <Speedometer_Settings+0x1c>
	
	Buttons_SetButtonState = false;
    1d12:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempLength = (GeekSport_SettingsDigit * 1000);
    1d16:	20 91 bf 01 	lds	r18, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
    1d1a:	30 91 c0 01 	lds	r19, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1d1e:	88 ee       	ldi	r24, 0xE8	; 232
    1d20:	93 e0       	ldi	r25, 0x03	; 3
    1d22:	28 9f       	mul	r18, r24
    1d24:	e0 01       	movw	r28, r0
    1d26:	29 9f       	mul	r18, r25
    1d28:	d0 0d       	add	r29, r0
    1d2a:	38 9f       	mul	r19, r24
    1d2c:	d0 0d       	add	r29, r0
    1d2e:	11 24       	eor	r1, r1
	
	GeekSport_SettingsDigit = 0;
    1d30:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1d34:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(68, 11);
    1d38:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1d3c:	81 11       	cpse	r24, r1
    1d3e:	08 c0       	rjmp	.+16     	; 0x1d50 <Speedometer_Settings+0x6a>
    1d40:	6b e0       	ldi	r22, 0x0B	; 11
    1d42:	84 e4       	ldi	r24, 0x44	; 68
    1d44:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
    1d48:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1d4c:	88 23       	and	r24, r24
    1d4e:	c1 f3       	breq	.-16     	; 0x1d40 <Speedometer_Settings+0x5a>
	
	Buttons_SetButtonState = false;
    1d50:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempLength += (GeekSport_SettingsDigit * 100);
    1d54:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
    1d58:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1d5c:	24 e6       	ldi	r18, 0x64	; 100
    1d5e:	28 9f       	mul	r18, r24
    1d60:	80 01       	movw	r16, r0
    1d62:	29 9f       	mul	r18, r25
    1d64:	10 0d       	add	r17, r0
    1d66:	11 24       	eor	r1, r1
    1d68:	0c 0f       	add	r16, r28
    1d6a:	1d 1f       	adc	r17, r29
	
	GeekSport_SettingsDigit = 0;
    1d6c:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1d70:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState)	GeekSport_LCD_Nokia_UpdateScreen(73, 11);
    1d74:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1d78:	81 11       	cpse	r24, r1
    1d7a:	08 c0       	rjmp	.+16     	; 0x1d8c <Speedometer_Settings+0xa6>
    1d7c:	6b e0       	ldi	r22, 0x0B	; 11
    1d7e:	89 e4       	ldi	r24, 0x49	; 73
    1d80:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
    1d84:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1d88:	88 23       	and	r24, r24
    1d8a:	c1 f3       	breq	.-16     	; 0x1d7c <Speedometer_Settings+0x96>
	
	Buttons_SetButtonState = false;
    1d8c:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Buttons_SetButtonState>
	tempLength += (GeekSport_SettingsDigit * 10);
    1d90:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
    1d94:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1d98:	ec 01       	movw	r28, r24
    1d9a:	cc 0f       	add	r28, r28
    1d9c:	dd 1f       	adc	r29, r29
    1d9e:	88 0f       	add	r24, r24
    1da0:	99 1f       	adc	r25, r25
    1da2:	88 0f       	add	r24, r24
    1da4:	99 1f       	adc	r25, r25
    1da6:	88 0f       	add	r24, r24
    1da8:	99 1f       	adc	r25, r25
    1daa:	c8 0f       	add	r28, r24
    1dac:	d9 1f       	adc	r29, r25
	
	GeekSport_SettingsDigit = 0;
    1dae:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1db2:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <GeekSport_SettingsDigit>
	while (!Buttons_SetButtonState) GeekSport_LCD_Nokia_UpdateScreen(78, 11);
    1db6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1dba:	81 11       	cpse	r24, r1
    1dbc:	08 c0       	rjmp	.+16     	; 0x1dce <Speedometer_Settings+0xe8>
    1dbe:	6b e0       	ldi	r22, 0x0B	; 11
    1dc0:	8e e4       	ldi	r24, 0x4E	; 78
    1dc2:	0e 94 6d 07 	call	0xeda	; 0xeda <GeekSport_LCD_Nokia_UpdateScreen>
    1dc6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Buttons_SetButtonState>
    1dca:	88 23       	and	r24, r24
    1dcc:	c1 f3       	breq	.-16     	; 0x1dbe <Speedometer_Settings+0xd8>
	
	tempLength += GeekSport_SettingsDigit;
    1dce:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <GeekSport_SettingsDigit>
    1dd2:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <GeekSport_SettingsDigit+0x1>
    1dd6:	08 0f       	add	r16, r24
    1dd8:	19 1f       	adc	r17, r25
    1dda:	c0 0f       	add	r28, r16
    1ddc:	d1 1f       	adc	r29, r17
	
	Speedometer_WheelLength_mm = tempLength;
    1dde:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <Speedometer_WheelLength_mm+0x1>
    1de2:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <Speedometer_WheelLength_mm>
}
    1de6:	df 91       	pop	r29
    1de8:	cf 91       	pop	r28
    1dea:	1f 91       	pop	r17
    1dec:	0f 91       	pop	r16
    1dee:	08 95       	ret

00001df0 <Speedometer_LCD_Nokia_Main>:

void Speedometer_LCD_Nokia_Main (void)
{
    1df0:	cf 92       	push	r12
    1df2:	df 92       	push	r13
    1df4:	ef 92       	push	r14
    1df6:	ff 92       	push	r15
	switch (Speedometer_Mode)
    1df8:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <Speedometer_Mode>
    1dfc:	88 23       	and	r24, r24
    1dfe:	b9 f0       	breq	.+46     	; 0x1e2e <Speedometer_LCD_Nokia_Main+0x3e>
    1e00:	81 30       	cpi	r24, 0x01	; 1
    1e02:	81 f4       	brne	.+32     	; 0x1e24 <Speedometer_LCD_Nokia_Main+0x34>
			break;
		}
		
		case SPEEDOMETER_WHEEL_LENGTH_SETING_MODE:
		{
			LCD_Nokia_ClearBuffer();
    1e04:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			
			LCD_Nokia_SetPixelPosition(3, 11);
    1e08:	6b e0       	ldi	r22, 0x0B	; 11
    1e0a:	83 e0       	ldi	r24, 0x03	; 3
    1e0c:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send5CharString_P((int8_t *) setWheelLength);							//	Wheel length setting string
    1e10:	89 e2       	ldi	r24, 0x29	; 41
    1e12:	97 e0       	ldi	r25, 0x07	; 7
    1e14:	0e 94 c6 0a 	call	0x158c	; 0x158c <LCD_Nokia_Send5CharString_P>
			
			Speedometer_Settings();
    1e18:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <Speedometer_Settings>
			
			LCD_Nokia_ClearBuffer();
    1e1c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LCD_Nokia_ClearBuffer>
			Speedometer_Mode = SPEEDOMETER_SPEED_MEASUREMENT_MODE;
    1e20:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <Speedometer_Mode>
			break;
		}
		
		default:	break;
	}
}
    1e24:	ff 90       	pop	r15
    1e26:	ef 90       	pop	r14
    1e28:	df 90       	pop	r13
    1e2a:	cf 90       	pop	r12
    1e2c:	08 95       	ret
	switch (Speedometer_Mode)
	{
		case SPEEDOMETER_SPEED_MEASUREMENT_MODE:
		{
			//LCD_Nokia_ClearBuffer();									/////////
			DS1307_ReceiveTimeData();
    1e2e:	0e 94 38 05 	call	0xa70	; 0xa70 <DS1307_ReceiveTimeData>
			
			//	Out the time
			LCD_Nokia_SetPixelPosition(59, 0);
    1e32:	60 e0       	ldi	r22, 0x00	; 0
    1e34:	8b e3       	ldi	r24, 0x3B	; 59
    1e36:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send5Integer(TimeRegPointer->hours);
    1e3a:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
    1e3e:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
    1e42:	62 81       	ldd	r22, Z+2	; 0x02
    1e44:	70 e0       	ldi	r23, 0x00	; 0
    1e46:	80 e0       	ldi	r24, 0x00	; 0
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <LCD_Nokia_Send5Integer>
			LCD_Nokia_Put5Char(':');
    1e4e:	8a e3       	ldi	r24, 0x3A	; 58
    1e50:	0e 94 c0 0a 	call	0x1580	; 0x1580 <LCD_Nokia_Put5Char>
			LCD_Nokia_Send5Integer(TimeRegPointer->minutes);
    1e54:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <TimeRegPointer>
    1e58:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <TimeRegPointer+0x1>
    1e5c:	61 81       	ldd	r22, Z+1	; 0x01
    1e5e:	70 e0       	ldi	r23, 0x00	; 0
    1e60:	80 e0       	ldi	r24, 0x00	; 0
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <LCD_Nokia_Send5Integer>
			
			//	Out the current speed
			uint32_t temp = Speedometer_Speed_mmps;
    1e68:	c0 90 b4 01 	lds	r12, 0x01B4	; 0x8001b4 <Speedometer_Speed_mmps>
    1e6c:	d0 90 b5 01 	lds	r13, 0x01B5	; 0x8001b5 <Speedometer_Speed_mmps+0x1>
    1e70:	e0 90 b6 01 	lds	r14, 0x01B6	; 0x8001b6 <Speedometer_Speed_mmps+0x2>
    1e74:	f0 90 b7 01 	lds	r15, 0x01B7	; 0x8001b7 <Speedometer_Speed_mmps+0x3>
			LCD_Nokia_SetPixelPosition(0, 12);
    1e78:	6c e0       	ldi	r22, 0x0C	; 12
    1e7a:	80 e0       	ldi	r24, 0x00	; 0
    1e7c:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			if (temp == 0)
    1e80:	c1 14       	cp	r12, r1
    1e82:	d1 04       	cpc	r13, r1
    1e84:	e1 04       	cpc	r14, r1
    1e86:	f1 04       	cpc	r15, r1
    1e88:	09 f4       	brne	.+2      	; 0x1e8c <Speedometer_LCD_Nokia_Main+0x9c>
    1e8a:	ba c0       	rjmp	.+372    	; 0x2000 <Speedometer_LCD_Nokia_Main+0x210>
			{
				LCD_Nokia_Send12CharString_P((int8_t *) PSTR("00"));
			}
			else if (((temp * 36) / 10000) < 10)
    1e8c:	d7 01       	movw	r26, r14
    1e8e:	c6 01       	movw	r24, r12
    1e90:	88 0f       	add	r24, r24
    1e92:	99 1f       	adc	r25, r25
    1e94:	aa 1f       	adc	r26, r26
    1e96:	bb 1f       	adc	r27, r27
    1e98:	88 0f       	add	r24, r24
    1e9a:	99 1f       	adc	r25, r25
    1e9c:	aa 1f       	adc	r26, r26
    1e9e:	bb 1f       	adc	r27, r27
    1ea0:	88 0f       	add	r24, r24
    1ea2:	99 1f       	adc	r25, r25
    1ea4:	aa 1f       	adc	r26, r26
    1ea6:	bb 1f       	adc	r27, r27
    1ea8:	c8 0e       	add	r12, r24
    1eaa:	d9 1e       	adc	r13, r25
    1eac:	ea 1e       	adc	r14, r26
    1eae:	fb 1e       	adc	r15, r27
    1eb0:	cc 0c       	add	r12, r12
    1eb2:	dd 1c       	adc	r13, r13
    1eb4:	ee 1c       	adc	r14, r14
    1eb6:	ff 1c       	adc	r15, r15
    1eb8:	cc 0c       	add	r12, r12
    1eba:	dd 1c       	adc	r13, r13
    1ebc:	ee 1c       	adc	r14, r14
    1ebe:	ff 1c       	adc	r15, r15
    1ec0:	20 ea       	ldi	r18, 0xA0	; 160
    1ec2:	c2 16       	cp	r12, r18
    1ec4:	26 e8       	ldi	r18, 0x86	; 134
    1ec6:	d2 06       	cpc	r13, r18
    1ec8:	21 e0       	ldi	r18, 0x01	; 1
    1eca:	e2 06       	cpc	r14, r18
    1ecc:	f1 04       	cpc	r15, r1
    1ece:	08 f4       	brcc	.+2      	; 0x1ed2 <Speedometer_LCD_Nokia_Main+0xe2>
    1ed0:	87 c0       	rjmp	.+270    	; 0x1fe0 <Speedometer_LCD_Nokia_Main+0x1f0>
				LCD_Nokia_Put12Char('0');
				LCD_Nokia_Put12Char(((temp * 36) / 10000) + ASCII_NULL);
			}
			else
			{
				LCD_Nokia_Put12Char((((temp * 36) / 10000) / 10) + ASCII_NULL);
    1ed2:	c7 01       	movw	r24, r14
    1ed4:	b6 01       	movw	r22, r12
    1ed6:	20 ea       	ldi	r18, 0xA0	; 160
    1ed8:	36 e8       	ldi	r19, 0x86	; 134
    1eda:	41 e0       	ldi	r20, 0x01	; 1
    1edc:	50 e0       	ldi	r21, 0x00	; 0
    1ede:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    1ee2:	80 e3       	ldi	r24, 0x30	; 48
    1ee4:	82 0f       	add	r24, r18
    1ee6:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
				LCD_Nokia_Put12Char((((temp * 36) / 10000) % 10) + ASCII_NULL);
    1eea:	c7 01       	movw	r24, r14
    1eec:	b6 01       	movw	r22, r12
    1eee:	20 e1       	ldi	r18, 0x10	; 16
    1ef0:	37 e2       	ldi	r19, 0x27	; 39
    1ef2:	40 e0       	ldi	r20, 0x00	; 0
    1ef4:	50 e0       	ldi	r21, 0x00	; 0
    1ef6:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    1efa:	ca 01       	movw	r24, r20
    1efc:	b9 01       	movw	r22, r18
    1efe:	2a e0       	ldi	r18, 0x0A	; 10
    1f00:	30 e0       	ldi	r19, 0x00	; 0
    1f02:	40 e0       	ldi	r20, 0x00	; 0
    1f04:	50 e0       	ldi	r21, 0x00	; 0
    1f06:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    1f0a:	80 e3       	ldi	r24, 0x30	; 48
    1f0c:	86 0f       	add	r24, r22
    1f0e:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
			}
			LCD_Nokia_SetPixelPosition(23, 21);
    1f12:	65 e1       	ldi	r22, 0x15	; 21
    1f14:	87 e1       	ldi	r24, 0x17	; 23
    1f16:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Put5Char('.');
    1f1a:	8e e2       	ldi	r24, 0x2E	; 46
    1f1c:	0e 94 c0 0a 	call	0x1580	; 0x1580 <LCD_Nokia_Put5Char>
			LCD_Nokia_SetPixelPosition(26, 12);
    1f20:	6c e0       	ldi	r22, 0x0C	; 12
    1f22:	8a e1       	ldi	r24, 0x1A	; 26
    1f24:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			
			if ((((temp * 36) % 10000) > 100000) || (((temp * 36) % 10000) == 0))	LCD_Nokia_Put12Char(ASCII_NULL);
    1f28:	c7 01       	movw	r24, r14
    1f2a:	b6 01       	movw	r22, r12
    1f2c:	20 e1       	ldi	r18, 0x10	; 16
    1f2e:	37 e2       	ldi	r19, 0x27	; 39
    1f30:	40 e0       	ldi	r20, 0x00	; 0
    1f32:	50 e0       	ldi	r21, 0x00	; 0
    1f34:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    1f38:	6b 01       	movw	r12, r22
    1f3a:	7c 01       	movw	r14, r24
    1f3c:	21 e0       	ldi	r18, 0x01	; 1
    1f3e:	c2 1a       	sub	r12, r18
    1f40:	d1 08       	sbc	r13, r1
    1f42:	e1 08       	sbc	r14, r1
    1f44:	f1 08       	sbc	r15, r1
    1f46:	20 ea       	ldi	r18, 0xA0	; 160
    1f48:	c2 16       	cp	r12, r18
    1f4a:	26 e8       	ldi	r18, 0x86	; 134
    1f4c:	d2 06       	cpc	r13, r18
    1f4e:	21 e0       	ldi	r18, 0x01	; 1
    1f50:	e2 06       	cpc	r14, r18
    1f52:	f1 04       	cpc	r15, r1
    1f54:	08 f0       	brcs	.+2      	; 0x1f58 <Speedometer_LCD_Nokia_Main+0x168>
    1f56:	63 c0       	rjmp	.+198    	; 0x201e <Speedometer_LCD_Nokia_Main+0x22e>
			else if ((((temp * 36) % 10000) > 10000) && (((temp * 36) % 10000) <= 100000))	LCD_Nokia_Put12Char((((temp * 36) % 10000) / 10000) + ASCII_NULL);
			else if ((((temp * 36) % 10000) > 1000) && (((temp * 36) % 10000) <= 10000))	LCD_Nokia_Put12Char((((temp * 36) % 10000) / 1000) + ASCII_NULL);
    1f58:	6b 01       	movw	r12, r22
    1f5a:	7c 01       	movw	r14, r24
    1f5c:	29 ee       	ldi	r18, 0xE9	; 233
    1f5e:	c2 1a       	sub	r12, r18
    1f60:	23 e0       	ldi	r18, 0x03	; 3
    1f62:	d2 0a       	sbc	r13, r18
    1f64:	e1 08       	sbc	r14, r1
    1f66:	f1 08       	sbc	r15, r1
    1f68:	28 e2       	ldi	r18, 0x28	; 40
    1f6a:	c2 16       	cp	r12, r18
    1f6c:	23 e2       	ldi	r18, 0x23	; 35
    1f6e:	d2 06       	cpc	r13, r18
    1f70:	e1 04       	cpc	r14, r1
    1f72:	f1 04       	cpc	r15, r1
    1f74:	08 f4       	brcc	.+2      	; 0x1f78 <Speedometer_LCD_Nokia_Main+0x188>
    1f76:	57 c0       	rjmp	.+174    	; 0x2026 <Speedometer_LCD_Nokia_Main+0x236>
			else if ((((temp * 36) % 10000) > 100) && (((temp * 36) % 10000) <= 1000))	LCD_Nokia_Put12Char((((temp * 36) % 10000) / 100) + ASCII_NULL);
    1f78:	6b 01       	movw	r12, r22
    1f7a:	7c 01       	movw	r14, r24
    1f7c:	25 e6       	ldi	r18, 0x65	; 101
    1f7e:	c2 1a       	sub	r12, r18
    1f80:	d1 08       	sbc	r13, r1
    1f82:	e1 08       	sbc	r14, r1
    1f84:	f1 08       	sbc	r15, r1
    1f86:	24 e8       	ldi	r18, 0x84	; 132
    1f88:	c2 16       	cp	r12, r18
    1f8a:	23 e0       	ldi	r18, 0x03	; 3
    1f8c:	d2 06       	cpc	r13, r18
    1f8e:	e1 04       	cpc	r14, r1
    1f90:	f1 04       	cpc	r15, r1
    1f92:	08 f4       	brcc	.+2      	; 0x1f96 <Speedometer_LCD_Nokia_Main+0x1a6>
    1f94:	53 c0       	rjmp	.+166    	; 0x203c <Speedometer_LCD_Nokia_Main+0x24c>
			else if ((((temp * 36) % 10000) > 10) && (((temp * 36) % 10000) <= 100))	LCD_Nokia_Put12Char((((temp * 36) % 10000) / 10) + ASCII_NULL);
    1f96:	6b 01       	movw	r12, r22
    1f98:	7c 01       	movw	r14, r24
    1f9a:	2b e0       	ldi	r18, 0x0B	; 11
    1f9c:	c2 1a       	sub	r12, r18
    1f9e:	d1 08       	sbc	r13, r1
    1fa0:	e1 08       	sbc	r14, r1
    1fa2:	f1 08       	sbc	r15, r1
    1fa4:	2a e5       	ldi	r18, 0x5A	; 90
    1fa6:	c2 16       	cp	r12, r18
    1fa8:	d1 04       	cpc	r13, r1
    1faa:	e1 04       	cpc	r14, r1
    1fac:	f1 04       	cpc	r15, r1
    1fae:	50 f4       	brcc	.+20     	; 0x1fc4 <Speedometer_LCD_Nokia_Main+0x1d4>
    1fb0:	2a e0       	ldi	r18, 0x0A	; 10
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	40 e0       	ldi	r20, 0x00	; 0
    1fb6:	50 e0       	ldi	r21, 0x00	; 0
    1fb8:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    1fbc:	80 e3       	ldi	r24, 0x30	; 48
    1fbe:	82 0f       	add	r24, r18
    1fc0:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
			
			LCD_Nokia_SetPixelPosition(43, 21);
    1fc4:	65 e1       	ldi	r22, 0x15	; 21
    1fc6:	8b e2       	ldi	r24, 0x2B	; 43
    1fc8:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Send6CharString_P((int8_t* ) kmh);
    1fcc:	83 e2       	ldi	r24, 0x23	; 35
    1fce:	97 e0       	ldi	r25, 0x07	; 7
    1fd0:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <LCD_Nokia_Send6CharString_P>
			break;
		}
		
		default:	break;
	}
}
    1fd4:	ff 90       	pop	r15
    1fd6:	ef 90       	pop	r14
    1fd8:	df 90       	pop	r13
    1fda:	cf 90       	pop	r12
			LCD_Nokia_SetPixelPosition(43, 21);
			LCD_Nokia_Send6CharString_P((int8_t* ) kmh);
			
			//	Out another data
			
			LCD_Nokia_UpdateFullScreen();
    1fdc:	0c 94 3f 0e 	jmp	0x1c7e	; 0x1c7e <LCD_Nokia_UpdateFullScreen>
			{
				LCD_Nokia_Send12CharString_P((int8_t *) PSTR("00"));
			}
			else if (((temp * 36) / 10000) < 10)
			{
				LCD_Nokia_Put12Char('0');
    1fe0:	80 e3       	ldi	r24, 0x30	; 48
    1fe2:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
				LCD_Nokia_Put12Char(((temp * 36) / 10000) + ASCII_NULL);
    1fe6:	c7 01       	movw	r24, r14
    1fe8:	b6 01       	movw	r22, r12
    1fea:	20 e1       	ldi	r18, 0x10	; 16
    1fec:	37 e2       	ldi	r19, 0x27	; 39
    1fee:	40 e0       	ldi	r20, 0x00	; 0
    1ff0:	50 e0       	ldi	r21, 0x00	; 0
    1ff2:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    1ff6:	80 e3       	ldi	r24, 0x30	; 48
    1ff8:	82 0f       	add	r24, r18
    1ffa:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    1ffe:	89 cf       	rjmp	.-238    	; 0x1f12 <Speedometer_LCD_Nokia_Main+0x122>
			//	Out the current speed
			uint32_t temp = Speedometer_Speed_mmps;
			LCD_Nokia_SetPixelPosition(0, 12);
			if (temp == 0)
			{
				LCD_Nokia_Send12CharString_P((int8_t *) PSTR("00"));
    2000:	80 e2       	ldi	r24, 0x20	; 32
    2002:	97 e0       	ldi	r25, 0x07	; 7
    2004:	0e 94 93 0b 	call	0x1726	; 0x1726 <LCD_Nokia_Send12CharString_P>
			else
			{
				LCD_Nokia_Put12Char((((temp * 36) / 10000) / 10) + ASCII_NULL);
				LCD_Nokia_Put12Char((((temp * 36) / 10000) % 10) + ASCII_NULL);
			}
			LCD_Nokia_SetPixelPosition(23, 21);
    2008:	65 e1       	ldi	r22, 0x15	; 21
    200a:	87 e1       	ldi	r24, 0x17	; 23
    200c:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			LCD_Nokia_Put5Char('.');
    2010:	8e e2       	ldi	r24, 0x2E	; 46
    2012:	0e 94 c0 0a 	call	0x1580	; 0x1580 <LCD_Nokia_Put5Char>
			LCD_Nokia_SetPixelPosition(26, 12);
    2016:	6c e0       	ldi	r22, 0x0C	; 12
    2018:	8a e1       	ldi	r24, 0x1A	; 26
    201a:	0e 94 bd 09 	call	0x137a	; 0x137a <LCD_Nokia_SetPixelPosition>
			
			if ((((temp * 36) % 10000) > 100000) || (((temp * 36) % 10000) == 0))	LCD_Nokia_Put12Char(ASCII_NULL);
    201e:	80 e3       	ldi	r24, 0x30	; 48
    2020:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    2024:	cf cf       	rjmp	.-98     	; 0x1fc4 <Speedometer_LCD_Nokia_Main+0x1d4>
			else if ((((temp * 36) % 10000) > 10000) && (((temp * 36) % 10000) <= 100000))	LCD_Nokia_Put12Char((((temp * 36) % 10000) / 10000) + ASCII_NULL);
			else if ((((temp * 36) % 10000) > 1000) && (((temp * 36) % 10000) <= 10000))	LCD_Nokia_Put12Char((((temp * 36) % 10000) / 1000) + ASCII_NULL);
    2026:	28 ee       	ldi	r18, 0xE8	; 232
    2028:	33 e0       	ldi	r19, 0x03	; 3
    202a:	40 e0       	ldi	r20, 0x00	; 0
    202c:	50 e0       	ldi	r21, 0x00	; 0
    202e:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    2032:	80 e3       	ldi	r24, 0x30	; 48
    2034:	82 0f       	add	r24, r18
    2036:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    203a:	c4 cf       	rjmp	.-120    	; 0x1fc4 <Speedometer_LCD_Nokia_Main+0x1d4>
			else if ((((temp * 36) % 10000) > 100) && (((temp * 36) % 10000) <= 1000))	LCD_Nokia_Put12Char((((temp * 36) % 10000) / 100) + ASCII_NULL);
    203c:	24 e6       	ldi	r18, 0x64	; 100
    203e:	30 e0       	ldi	r19, 0x00	; 0
    2040:	40 e0       	ldi	r20, 0x00	; 0
    2042:	50 e0       	ldi	r21, 0x00	; 0
    2044:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    2048:	80 e3       	ldi	r24, 0x30	; 48
    204a:	82 0f       	add	r24, r18
    204c:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <LCD_Nokia_Put12Char>
    2050:	b9 cf       	rjmp	.-142    	; 0x1fc4 <Speedometer_LCD_Nokia_Main+0x1d4>

00002052 <__vector_1>:
//	Update time: 1 second;
//	Stability: Normal;
//	Accuracy: Good;
//	Problems: unstability on velocities > 50 km/h;
ISR (INT0_vect)
{
    2052:	1f 92       	push	r1
    2054:	0f 92       	push	r0
    2056:	0f b6       	in	r0, 0x3f	; 63
    2058:	0f 92       	push	r0
    205a:	11 24       	eor	r1, r1
    205c:	8f 93       	push	r24
    205e:	9f 93       	push	r25
	if (!Speedometer_IsRunning)
    2060:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <Speedometer_IsRunning>
    2064:	88 23       	and	r24, r24
    2066:	61 f0       	breq	.+24     	; 0x2080 <__vector_1+0x2e>
		
		OCR1A = 0x03D0;																					//	If F_CPU = 1MHz and prescaler = 1024, T = 1 second
		TCCR1B |= 1 << WGM12 | 1 << CS12 | 0 << CS11 | 1 << CS10;										//	Prescaler = F_CPU / 1024
		TIMSK1 |= 1 << OCIE1A;															//	Enable timer interrupts
	}
	else	Speedometer_RevolutionCounter++;
    2068:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <Speedometer_RevolutionCounter>
    206c:	8f 5f       	subi	r24, 0xFF	; 255
    206e:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <Speedometer_RevolutionCounter>
}
    2072:	9f 91       	pop	r25
    2074:	8f 91       	pop	r24
    2076:	0f 90       	pop	r0
    2078:	0f be       	out	0x3f, r0	; 63
    207a:	0f 90       	pop	r0
    207c:	1f 90       	pop	r1
    207e:	18 95       	reti
//	Problems: unstability on velocities > 50 km/h;
ISR (INT0_vect)
{
	if (!Speedometer_IsRunning)
	{
		Speedometer_IsRunning = true;
    2080:	81 e0       	ldi	r24, 0x01	; 1
    2082:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <Speedometer_IsRunning>
		Speedometer_RevolutionCounter = 1;
    2086:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <Speedometer_RevolutionCounter>
		Speedometer_TimerCounter = 1;
    208a:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Speedometer_TimerCounter>
		
		OCR1A = 0x03D0;																					//	If F_CPU = 1MHz and prescaler = 1024, T = 1 second
    208e:	80 ed       	ldi	r24, 0xD0	; 208
    2090:	93 e0       	ldi	r25, 0x03	; 3
    2092:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    2096:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		TCCR1B |= 1 << WGM12 | 1 << CS12 | 0 << CS11 | 1 << CS10;										//	Prescaler = F_CPU / 1024
    209a:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    209e:	8d 60       	ori	r24, 0x0D	; 13
    20a0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		TIMSK1 |= 1 << OCIE1A;															//	Enable timer interrupts
    20a4:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    20a8:	82 60       	ori	r24, 0x02	; 2
    20aa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	}
	else	Speedometer_RevolutionCounter++;
}
    20ae:	9f 91       	pop	r25
    20b0:	8f 91       	pop	r24
    20b2:	0f 90       	pop	r0
    20b4:	0f be       	out	0x3f, r0	; 63
    20b6:	0f 90       	pop	r0
    20b8:	1f 90       	pop	r1
    20ba:	18 95       	reti

000020bc <__vector_11>:

ISR (TIMER1_COMPA_vect)
{
    20bc:	1f 92       	push	r1
    20be:	0f 92       	push	r0
    20c0:	0f b6       	in	r0, 0x3f	; 63
    20c2:	0f 92       	push	r0
    20c4:	11 24       	eor	r1, r1
    20c6:	2f 93       	push	r18
    20c8:	3f 93       	push	r19
    20ca:	4f 93       	push	r20
    20cc:	5f 93       	push	r21
    20ce:	6f 93       	push	r22
    20d0:	7f 93       	push	r23
    20d2:	8f 93       	push	r24
    20d4:	9f 93       	push	r25
    20d6:	af 93       	push	r26
    20d8:	bf 93       	push	r27
	if (Speedometer_TimerCounter < SPEEDOMETER_GENERAL_SAMPLE_TIME)
    20da:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <Speedometer_TimerCounter>
	{
		Speedometer_Speed_mmps = (Speedometer_WheelLength_mm * Speedometer_RevolutionCounter) / Speedometer_TimerCounter;
    20de:	40 91 b3 01 	lds	r20, 0x01B3	; 0x8001b3 <Speedometer_RevolutionCounter>
    20e2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <Speedometer_WheelLength_mm>
    20e6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <Speedometer_WheelLength_mm+0x1>
    20ea:	60 91 b2 01 	lds	r22, 0x01B2	; 0x8001b2 <Speedometer_TimerCounter>
	else	Speedometer_RevolutionCounter++;
}

ISR (TIMER1_COMPA_vect)
{
	if (Speedometer_TimerCounter < SPEEDOMETER_GENERAL_SAMPLE_TIME)
    20ee:	85 30       	cpi	r24, 0x05	; 5
    20f0:	08 f4       	brcc	.+2      	; 0x20f4 <__vector_11+0x38>
    20f2:	40 c0       	rjmp	.+128    	; 0x2174 <__vector_11+0xb8>
		Speedometer_Speed_mmps = (Speedometer_WheelLength_mm * Speedometer_RevolutionCounter) / Speedometer_TimerCounter;
		Speedometer_TimerCounter++;
	}
	else
	{
		Speedometer_Speed_mmps = (Speedometer_WheelLength_mm * Speedometer_RevolutionCounter) / Speedometer_TimerCounter;
    20f4:	42 9f       	mul	r20, r18
    20f6:	c0 01       	movw	r24, r0
    20f8:	43 9f       	mul	r20, r19
    20fa:	90 0d       	add	r25, r0
    20fc:	11 24       	eor	r1, r1
    20fe:	70 e0       	ldi	r23, 0x00	; 0
    2100:	0e 94 a7 11 	call	0x234e	; 0x234e <__udivmodhi4>
    2104:	cb 01       	movw	r24, r22
    2106:	a0 e0       	ldi	r26, 0x00	; 0
    2108:	b0 e0       	ldi	r27, 0x00	; 0
    210a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <Speedometer_Speed_mmps>
    210e:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <Speedometer_Speed_mmps+0x1>
    2112:	a0 93 b6 01 	sts	0x01B6, r26	; 0x8001b6 <Speedometer_Speed_mmps+0x2>
    2116:	b0 93 b7 01 	sts	0x01B7, r27	; 0x8001b7 <Speedometer_Speed_mmps+0x3>
		if (Speedometer_Speed_mmps == 0)
    211a:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <Speedometer_Speed_mmps>
    211e:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <Speedometer_Speed_mmps+0x1>
    2122:	a0 91 b6 01 	lds	r26, 0x01B6	; 0x8001b6 <Speedometer_Speed_mmps+0x2>
    2126:	b0 91 b7 01 	lds	r27, 0x01B7	; 0x8001b7 <Speedometer_Speed_mmps+0x3>
    212a:	89 2b       	or	r24, r25
    212c:	8a 2b       	or	r24, r26
    212e:	8b 2b       	or	r24, r27
    2130:	a1 f0       	breq	.+40     	; 0x215a <__vector_11+0x9e>
			TIMSK1 &= ~(1 << OCIE1A | OCIE1B);
			Speedometer_IsRunning = false;
			
			return;
		}
		Speedometer_RevolutionCounter = 0;
    2132:	10 92 b3 01 	sts	0x01B3, r1	; 0x8001b3 <Speedometer_RevolutionCounter>
		Speedometer_TimerCounter = 1;
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Speedometer_TimerCounter>
	}
    213c:	bf 91       	pop	r27
    213e:	af 91       	pop	r26
    2140:	9f 91       	pop	r25
    2142:	8f 91       	pop	r24
    2144:	7f 91       	pop	r23
    2146:	6f 91       	pop	r22
    2148:	5f 91       	pop	r21
    214a:	4f 91       	pop	r20
    214c:	3f 91       	pop	r19
    214e:	2f 91       	pop	r18
    2150:	0f 90       	pop	r0
    2152:	0f be       	out	0x3f, r0	; 63
    2154:	0f 90       	pop	r0
    2156:	1f 90       	pop	r1
    2158:	18 95       	reti
	else
	{
		Speedometer_Speed_mmps = (Speedometer_WheelLength_mm * Speedometer_RevolutionCounter) / Speedometer_TimerCounter;
		if (Speedometer_Speed_mmps == 0)
		{
			TCCR1B &= ~(1 << WGM12 | 1 << CS12 | 0 << CS11 | 1 << CS10);
    215a:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    215e:	82 7f       	andi	r24, 0xF2	; 242
    2160:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
			TIMSK1 &= ~(1 << OCIE1A | OCIE1B);
    2164:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    2168:	8d 7f       	andi	r24, 0xFD	; 253
    216a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
			Speedometer_IsRunning = false;
    216e:	10 92 b9 01 	sts	0x01B9, r1	; 0x8001b9 <Speedometer_IsRunning>
			
			return;
    2172:	e4 cf       	rjmp	.-56     	; 0x213c <__vector_11+0x80>

ISR (TIMER1_COMPA_vect)
{
	if (Speedometer_TimerCounter < SPEEDOMETER_GENERAL_SAMPLE_TIME)
	{
		Speedometer_Speed_mmps = (Speedometer_WheelLength_mm * Speedometer_RevolutionCounter) / Speedometer_TimerCounter;
    2174:	42 9f       	mul	r20, r18
    2176:	c0 01       	movw	r24, r0
    2178:	43 9f       	mul	r20, r19
    217a:	90 0d       	add	r25, r0
    217c:	11 24       	eor	r1, r1
    217e:	70 e0       	ldi	r23, 0x00	; 0
    2180:	0e 94 a7 11 	call	0x234e	; 0x234e <__udivmodhi4>
    2184:	cb 01       	movw	r24, r22
    2186:	a0 e0       	ldi	r26, 0x00	; 0
    2188:	b0 e0       	ldi	r27, 0x00	; 0
    218a:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <Speedometer_Speed_mmps>
    218e:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <Speedometer_Speed_mmps+0x1>
    2192:	a0 93 b6 01 	sts	0x01B6, r26	; 0x8001b6 <Speedometer_Speed_mmps+0x2>
    2196:	b0 93 b7 01 	sts	0x01B7, r27	; 0x8001b7 <Speedometer_Speed_mmps+0x3>
		Speedometer_TimerCounter++;
    219a:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <Speedometer_TimerCounter>
    219e:	8f 5f       	subi	r24, 0xFF	; 255
    21a0:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <Speedometer_TimerCounter>
    21a4:	cb cf       	rjmp	.-106    	; 0x213c <__vector_11+0x80>

000021a6 <SPI_Master_Init>:
	SPCR0 |= (1 << SPIE);														//	Activate SPI interrupt
 	volatile uint8_t temp = SPSR0;												//	Clear the interrupt flag
 	temp = SPDR0;																//	Clear the interrupt flag
	temp = 0x00;																//	Here assign any "garbage" value to temp
	SPDR0 = temp;																//	and put it in the SPDR to activate the transfer process
}
    21a6:	cf 93       	push	r28
    21a8:	df 93       	push	r29
    21aa:	1f 92       	push	r1
    21ac:	cd b7       	in	r28, 0x3d	; 61
    21ae:	de b7       	in	r29, 0x3e	; 62
    21b0:	84 b1       	in	r24, 0x04	; 4
    21b2:	8c 62       	ori	r24, 0x2C	; 44
    21b4:	84 b9       	out	0x04, r24	; 4
    21b6:	24 98       	cbi	0x04, 4	; 4
    21b8:	8c b5       	in	r24, 0x2c	; 44
    21ba:	80 65       	ori	r24, 0x50	; 80
    21bc:	8c bd       	out	0x2c, r24	; 44
    21be:	8d b5       	in	r24, 0x2d	; 45
    21c0:	89 83       	std	Y+1, r24	; 0x01
    21c2:	8e b5       	in	r24, 0x2e	; 46
    21c4:	89 83       	std	Y+1, r24	; 0x01
    21c6:	0f 90       	pop	r0
    21c8:	df 91       	pop	r29
    21ca:	cf 91       	pop	r28
    21cc:	08 95       	ret

000021ce <SPI_PutByte>:
    21ce:	8e bd       	out	0x2e, r24	; 46
    21d0:	0d b4       	in	r0, 0x2d	; 45
    21d2:	07 fe       	sbrs	r0, 7
    21d4:	fd cf       	rjmp	.-6      	; 0x21d0 <SPI_PutByte+0x2>
    21d6:	08 95       	ret

000021d8 <__vector_17>:

ISR (SPI0_STC_vect)
{
    21d8:	1f 92       	push	r1
    21da:	0f 92       	push	r0
    21dc:	0f b6       	in	r0, 0x3f	; 63
    21de:	0f 92       	push	r0
    21e0:	11 24       	eor	r1, r1
    21e2:	8f 93       	push	r24
    21e4:	ef 93       	push	r30
    21e6:	ff 93       	push	r31
//	SPI_ReceiveBuffer[SPI_CharacterCounter] = SPDR;								//	Receive byte from the Slave	(for full-duplex communication)
	if (SPI_TransmitBuffer[SPI_CharacterCounter] != 0)							//	If not end of data
    21e8:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <SPI_CharacterCounter>
    21ec:	f0 e0       	ldi	r31, 0x00	; 0
    21ee:	ee 5f       	subi	r30, 0xFE	; 254
    21f0:	fd 4f       	sbci	r31, 0xFD	; 253
    21f2:	80 81       	ld	r24, Z
    21f4:	81 11       	cpse	r24, r1
    21f6:	10 c0       	rjmp	.+32     	; 0x2218 <__vector_17+0x40>
	{
		SPDR0 = SPI_TransmitBuffer[SPI_CharacterCounter++];						//	Put the next byte in the SPI data register
	}
	else
	{
		SPCR0 &= ~(1 << SPIE);													//	Disable SPI interrupt
    21f8:	8c b5       	in	r24, 0x2c	; 44
    21fa:	8f 77       	andi	r24, 0x7F	; 127
    21fc:	8c bd       	out	0x2c, r24	; 44
		SPI_TransmitSuccess = true;												//	Set the success flag
    21fe:	81 e0       	ldi	r24, 0x01	; 1
    2200:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <SPI_TransmitSuccess>
		SPI_CharacterCounter = 0;												//	Reset character counter
    2204:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <SPI_CharacterCounter>
	}
}
    2208:	ff 91       	pop	r31
    220a:	ef 91       	pop	r30
    220c:	8f 91       	pop	r24
    220e:	0f 90       	pop	r0
    2210:	0f be       	out	0x3f, r0	; 63
    2212:	0f 90       	pop	r0
    2214:	1f 90       	pop	r1
    2216:	18 95       	reti
ISR (SPI0_STC_vect)
{
//	SPI_ReceiveBuffer[SPI_CharacterCounter] = SPDR;								//	Receive byte from the Slave	(for full-duplex communication)
	if (SPI_TransmitBuffer[SPI_CharacterCounter] != 0)							//	If not end of data
	{
		SPDR0 = SPI_TransmitBuffer[SPI_CharacterCounter++];						//	Put the next byte in the SPI data register
    2218:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <SPI_CharacterCounter>
    221c:	81 e0       	ldi	r24, 0x01	; 1
    221e:	8e 0f       	add	r24, r30
    2220:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <SPI_CharacterCounter>
    2224:	f0 e0       	ldi	r31, 0x00	; 0
    2226:	ee 5f       	subi	r30, 0xFE	; 254
    2228:	fd 4f       	sbci	r31, 0xFD	; 253
    222a:	80 81       	ld	r24, Z
    222c:	8e bd       	out	0x2e, r24	; 46
	{
		SPCR0 &= ~(1 << SPIE);													//	Disable SPI interrupt
		SPI_TransmitSuccess = true;												//	Set the success flag
		SPI_CharacterCounter = 0;												//	Reset character counter
	}
}
    222e:	ff 91       	pop	r31
    2230:	ef 91       	pop	r30
    2232:	8f 91       	pop	r24
    2234:	0f 90       	pop	r0
    2236:	0f be       	out	0x3f, r0	; 63
    2238:	0f 90       	pop	r0
    223a:	1f 90       	pop	r1
    223c:	18 95       	reti

0000223e <USART_Init>:
	return (USART_ReceiveBuffer[USART_RxHead]);											//	Return byte by the received pointer
}

void USART_SendString (int8_t* data)
{
	for (uint8_t i = 0; data[i] != 0; i++)	USART_PutByte(data[i]);						//	Send by byte, until we detect NULL character (or the end of the line)
    223e:	85 e0       	ldi	r24, 0x05	; 5
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    2246:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    224a:	e1 ec       	ldi	r30, 0xC1	; 193
    224c:	f0 e0       	ldi	r31, 0x00	; 0
    224e:	80 81       	ld	r24, Z
    2250:	88 69       	ori	r24, 0x98	; 152
    2252:	80 83       	st	Z, r24
    2254:	e2 ec       	ldi	r30, 0xC2	; 194
    2256:	f0 e0       	ldi	r31, 0x00	; 0
    2258:	80 81       	ld	r24, Z
    225a:	86 60       	ori	r24, 0x06	; 6
    225c:	80 83       	st	Z, r24
    225e:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <USART_TxHead>
    2262:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <USART_TxTail>
    2266:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <USART_RxHead>
    226a:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <USART_RxTail>
    226e:	08 95       	ret

00002270 <USART_ReceiveString>:
}

void USART_ReceiveString (int8_t* data)
{
    2270:	cf 93       	push	r28
    2272:	df 93       	push	r29
    2274:	ec 01       	movw	r28, r24
	for (uint8_t i = 0; data[i] != 0; i++)	data[i] = USART_GetByte();					//	Read by byte, until we detect NULL character (or the end of the line)
    2276:	88 81       	ld	r24, Y
    2278:	88 23       	and	r24, r24
    227a:	e1 f0       	breq	.+56     	; 0x22b4 <USART_ReceiveString+0x44>
    227c:	30 e0       	ldi	r19, 0x00	; 0
    227e:	de 01       	movw	r26, r28
	UCSR0B |= 1 << UDRIE0;																//	Enable interrupt handler
}

int8_t USART_GetByte (void)
{
	while (USART_RxHead == USART_RxTail);												//	Waiting for reception
    2280:	20 91 bc 01 	lds	r18, 0x01BC	; 0x8001bc <USART_RxHead>
    2284:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <USART_RxTail>
    2288:	29 17       	cp	r18, r25
    228a:	d1 f3       	breq	.-12     	; 0x2280 <USART_ReceiveString+0x10>
	USART_RxHead = (USART_RxHead + 1) & USART_BUFFER_MASK;								//	When the first byte received, increment ReceiverHead
    228c:	90 91 bc 01 	lds	r25, 0x01BC	; 0x8001bc <USART_RxHead>
    2290:	9f 5f       	subi	r25, 0xFF	; 255
    2292:	9f 73       	andi	r25, 0x3F	; 63
    2294:	90 93 bc 01 	sts	0x01BC, r25	; 0x8001bc <USART_RxHead>
	
	return (USART_ReceiveBuffer[USART_RxHead]);											//	Return byte by the received pointer
    2298:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <USART_RxHead>
    229c:	f0 e0       	ldi	r31, 0x00	; 0
    229e:	ee 5b       	subi	r30, 0xBE	; 190
    22a0:	fd 4f       	sbci	r31, 0xFD	; 253
    22a2:	90 81       	ld	r25, Z
	for (uint8_t i = 0; data[i] != 0; i++)	USART_PutByte(data[i]);						//	Send by byte, until we detect NULL character (or the end of the line)
}

void USART_ReceiveString (int8_t* data)
{
	for (uint8_t i = 0; data[i] != 0; i++)	data[i] = USART_GetByte();					//	Read by byte, until we detect NULL character (or the end of the line)
    22a4:	9c 93       	st	X, r25
    22a6:	3f 5f       	subi	r19, 0xFF	; 255
    22a8:	de 01       	movw	r26, r28
    22aa:	a3 0f       	add	r26, r19
    22ac:	b1 1d       	adc	r27, r1
    22ae:	9c 91       	ld	r25, X
    22b0:	91 11       	cpse	r25, r1
    22b2:	e6 cf       	rjmp	.-52     	; 0x2280 <USART_ReceiveString+0x10>
}
    22b4:	df 91       	pop	r29
    22b6:	cf 91       	pop	r28
    22b8:	08 95       	ret

000022ba <__vector_19>:

ISR (USART0_UDRE_vect)
{
    22ba:	1f 92       	push	r1
    22bc:	0f 92       	push	r0
    22be:	0f b6       	in	r0, 0x3f	; 63
    22c0:	0f 92       	push	r0
    22c2:	11 24       	eor	r1, r1
    22c4:	8f 93       	push	r24
    22c6:	9f 93       	push	r25
    22c8:	ef 93       	push	r30
    22ca:	ff 93       	push	r31
	if (USART_TxHead != USART_TxTail)													//	If there's a clean place in the buffer
    22cc:	90 91 be 01 	lds	r25, 0x01BE	; 0x8001be <USART_TxHead>
    22d0:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <USART_TxTail>
    22d4:	98 17       	cp	r25, r24
    22d6:	a9 f0       	breq	.+42     	; 0x2302 <__vector_19+0x48>
	{
		uint8_t tempTxHead = (USART_TxHead + 1) & USART_BUFFER_MASK;					//	Increment head
    22d8:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <USART_TxHead>
    22dc:	ef 5f       	subi	r30, 0xFF	; 255
    22de:	ef 73       	andi	r30, 0x3F	; 63
		USART_TxHead = tempTxHead;
    22e0:	e0 93 be 01 	sts	0x01BE, r30	; 0x8001be <USART_TxHead>
		UDR0 = USART_TransmitBuffer[tempTxHead];										//	And place in the USART Data Register byte
    22e4:	f0 e0       	ldi	r31, 0x00	; 0
    22e6:	ee 57       	subi	r30, 0x7E	; 126
    22e8:	fd 4f       	sbci	r31, 0xFD	; 253
    22ea:	80 81       	ld	r24, Z
    22ec:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	}
	else	UCSR0B &= ~(1 << UDRIE0);													//	Else disable interrupt
}
    22f0:	ff 91       	pop	r31
    22f2:	ef 91       	pop	r30
    22f4:	9f 91       	pop	r25
    22f6:	8f 91       	pop	r24
    22f8:	0f 90       	pop	r0
    22fa:	0f be       	out	0x3f, r0	; 63
    22fc:	0f 90       	pop	r0
    22fe:	1f 90       	pop	r1
    2300:	18 95       	reti
	{
		uint8_t tempTxHead = (USART_TxHead + 1) & USART_BUFFER_MASK;					//	Increment head
		USART_TxHead = tempTxHead;
		UDR0 = USART_TransmitBuffer[tempTxHead];										//	And place in the USART Data Register byte
	}
	else	UCSR0B &= ~(1 << UDRIE0);													//	Else disable interrupt
    2302:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    2306:	8f 7d       	andi	r24, 0xDF	; 223
    2308:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
}
    230c:	f1 cf       	rjmp	.-30     	; 0x22f0 <__vector_19+0x36>

0000230e <__vector_18>:

ISR (USART0_RX_vect)
{
    230e:	1f 92       	push	r1
    2310:	0f 92       	push	r0
    2312:	0f b6       	in	r0, 0x3f	; 63
    2314:	0f 92       	push	r0
    2316:	11 24       	eor	r1, r1
    2318:	8f 93       	push	r24
    231a:	9f 93       	push	r25
    231c:	ef 93       	push	r30
    231e:	ff 93       	push	r31
	int8_t byte = UDR0;																	//	Saving UDR value
    2320:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	uint8_t tempRxTail = (USART_RxTail + 1) & USART_BUFFER_MASK;						//	Increment RxTail value
    2324:	e0 91 bb 01 	lds	r30, 0x01BB	; 0x8001bb <USART_RxTail>
    2328:	ef 5f       	subi	r30, 0xFF	; 255
    232a:	ef 73       	andi	r30, 0x3F	; 63
	USART_RxTail = tempRxTail;															//	Saving RxTail value
    232c:	e0 93 bb 01 	sts	0x01BB, r30	; 0x8001bb <USART_RxTail>
	if (USART_RxHead == tempRxTail)																	
    2330:	90 91 bc 01 	lds	r25, 0x01BC	; 0x8001bc <USART_RxHead>
		//	Buffer overflow
		//
		
		//	PORTD |= 0x80;
	}
	USART_ReceiveBuffer[tempRxTail] = byte;												//	Saving UDR value in the receive buffer
    2334:	f0 e0       	ldi	r31, 0x00	; 0
    2336:	ee 5b       	subi	r30, 0xBE	; 190
    2338:	fd 4f       	sbci	r31, 0xFD	; 253
    233a:	80 83       	st	Z, r24
    233c:	ff 91       	pop	r31
    233e:	ef 91       	pop	r30
    2340:	9f 91       	pop	r25
    2342:	8f 91       	pop	r24
    2344:	0f 90       	pop	r0
    2346:	0f be       	out	0x3f, r0	; 63
    2348:	0f 90       	pop	r0
    234a:	1f 90       	pop	r1
    234c:	18 95       	reti

0000234e <__udivmodhi4>:
    234e:	aa 1b       	sub	r26, r26
    2350:	bb 1b       	sub	r27, r27
    2352:	51 e1       	ldi	r21, 0x11	; 17
    2354:	07 c0       	rjmp	.+14     	; 0x2364 <__udivmodhi4_ep>

00002356 <__udivmodhi4_loop>:
    2356:	aa 1f       	adc	r26, r26
    2358:	bb 1f       	adc	r27, r27
    235a:	a6 17       	cp	r26, r22
    235c:	b7 07       	cpc	r27, r23
    235e:	10 f0       	brcs	.+4      	; 0x2364 <__udivmodhi4_ep>
    2360:	a6 1b       	sub	r26, r22
    2362:	b7 0b       	sbc	r27, r23

00002364 <__udivmodhi4_ep>:
    2364:	88 1f       	adc	r24, r24
    2366:	99 1f       	adc	r25, r25
    2368:	5a 95       	dec	r21
    236a:	a9 f7       	brne	.-22     	; 0x2356 <__udivmodhi4_loop>
    236c:	80 95       	com	r24
    236e:	90 95       	com	r25
    2370:	bc 01       	movw	r22, r24
    2372:	cd 01       	movw	r24, r26
    2374:	08 95       	ret

00002376 <__udivmodsi4>:
    2376:	a1 e2       	ldi	r26, 0x21	; 33
    2378:	1a 2e       	mov	r1, r26
    237a:	aa 1b       	sub	r26, r26
    237c:	bb 1b       	sub	r27, r27
    237e:	fd 01       	movw	r30, r26
    2380:	0d c0       	rjmp	.+26     	; 0x239c <__udivmodsi4_ep>

00002382 <__udivmodsi4_loop>:
    2382:	aa 1f       	adc	r26, r26
    2384:	bb 1f       	adc	r27, r27
    2386:	ee 1f       	adc	r30, r30
    2388:	ff 1f       	adc	r31, r31
    238a:	a2 17       	cp	r26, r18
    238c:	b3 07       	cpc	r27, r19
    238e:	e4 07       	cpc	r30, r20
    2390:	f5 07       	cpc	r31, r21
    2392:	20 f0       	brcs	.+8      	; 0x239c <__udivmodsi4_ep>
    2394:	a2 1b       	sub	r26, r18
    2396:	b3 0b       	sbc	r27, r19
    2398:	e4 0b       	sbc	r30, r20
    239a:	f5 0b       	sbc	r31, r21

0000239c <__udivmodsi4_ep>:
    239c:	66 1f       	adc	r22, r22
    239e:	77 1f       	adc	r23, r23
    23a0:	88 1f       	adc	r24, r24
    23a2:	99 1f       	adc	r25, r25
    23a4:	1a 94       	dec	r1
    23a6:	69 f7       	brne	.-38     	; 0x2382 <__udivmodsi4_loop>
    23a8:	60 95       	com	r22
    23aa:	70 95       	com	r23
    23ac:	80 95       	com	r24
    23ae:	90 95       	com	r25
    23b0:	9b 01       	movw	r18, r22
    23b2:	ac 01       	movw	r20, r24
    23b4:	bd 01       	movw	r22, r26
    23b6:	cf 01       	movw	r24, r30
    23b8:	08 95       	ret

000023ba <__divmodsi4>:
    23ba:	05 2e       	mov	r0, r21
    23bc:	97 fb       	bst	r25, 7
    23be:	1e f4       	brtc	.+6      	; 0x23c6 <__divmodsi4+0xc>
    23c0:	00 94       	com	r0
    23c2:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__negsi2>
    23c6:	57 fd       	sbrc	r21, 7
    23c8:	07 d0       	rcall	.+14     	; 0x23d8 <__divmodsi4_neg2>
    23ca:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    23ce:	07 fc       	sbrc	r0, 7
    23d0:	03 d0       	rcall	.+6      	; 0x23d8 <__divmodsi4_neg2>
    23d2:	4e f4       	brtc	.+18     	; 0x23e6 <__divmodsi4_exit>
    23d4:	0c 94 f4 11 	jmp	0x23e8	; 0x23e8 <__negsi2>

000023d8 <__divmodsi4_neg2>:
    23d8:	50 95       	com	r21
    23da:	40 95       	com	r20
    23dc:	30 95       	com	r19
    23de:	21 95       	neg	r18
    23e0:	3f 4f       	sbci	r19, 0xFF	; 255
    23e2:	4f 4f       	sbci	r20, 0xFF	; 255
    23e4:	5f 4f       	sbci	r21, 0xFF	; 255

000023e6 <__divmodsi4_exit>:
    23e6:	08 95       	ret

000023e8 <__negsi2>:
    23e8:	90 95       	com	r25
    23ea:	80 95       	com	r24
    23ec:	70 95       	com	r23
    23ee:	61 95       	neg	r22
    23f0:	7f 4f       	sbci	r23, 0xFF	; 255
    23f2:	8f 4f       	sbci	r24, 0xFF	; 255
    23f4:	9f 4f       	sbci	r25, 0xFF	; 255
    23f6:	08 95       	ret

000023f8 <_exit>:
    23f8:	f8 94       	cli

000023fa <__stop_program>:
    23fa:	ff cf       	rjmp	.-2      	; 0x23fa <__stop_program>
